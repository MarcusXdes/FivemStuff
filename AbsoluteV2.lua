local Absolute = {
    Framework = {
        MenuAbled = true,
        MenuOpen = false,
        hoqfwzOXdGZeVrLybkrb = 11, --[[numpad + as default]]
        FreecamMenuKeybind = 118,
        DatosScreenWidth = nil,
        DatosScreenHeight = nil,
        bdzREJynqGriZndiAaIJ = nil,
        qrKfajBneUKBnvCUiEpj = nil,
        MenuX = 900,
        MenuY = 150,
        MenuW = 700,
        MenuH = 683,
        wfaduVHzAWplTWUceRuS = {r = 84, g = 117, b = 176, a = 255},
        tlmybSwiAbIyObFQwsbF = { r = 107, g = 186, b = 255},
        hDGfMgadOesxkNoSotku = {r = 255, g = 255, b = 255, a = 255},
        vSoqfBeQzkfjnTiNvwvp = {p = 82, s = 80},
        CurrentSelection = 1,
        SelectedCategory = "SubMenu:",
        qdYYcbbQbhzxgqvgrdhC = nil,
        XIsbyrvaryXmZztAmJHy = nil,
        Categories = {},
        MenuScreenMove = nil,
        TextCache = {},
        checked = nil,
        iayFliUnrICxeGdWiSWkList = {},
        MenuVersion = "2.0.0",
        uKqQpYVxFsKkuJhDFcQF = "A B S O L U T E",
        Font = 4,
    },
    MenuFunc = {Notify = {},},
    KufbbvNinsCiFwtqcaLw = {},
    Freecam = {},
    BasicFunc = {},
    OsaXlHjgakTpuEzfBglV = {},
    TR = {},

    Config = {},
    Component = {},
    lua = {
        unpack = table.unpack,
        pack = table.pack,
        insert = table.insert,
        concat = table.concat,
        foreach = table.foreach,
        sort = table.sort,
        remove = table.remove,
        acos = math.acos,
        asin = math.asin,
        atan = math.atan,
        atan2 = math.atan2,
        ceil = math.ceil,
        cosh = math.cosh,
        deg = math.deg,
        exp = math.exp,
        floor = math.floor,
        fmod = math.fmod,
        frexp = math.frexp,
        log =math.log,
        log10 = math.log10,
        max = math.max,
        min = math.min,
        pow = math.pow,
        random = math.random,
        randomseed = math.randomseed,
        sinh = math.sinh,
        sqrt = math.sqrt,
        tan = math.tan,
        tanh = math.tanh,
        sin = math.sin,
        cos = math.cos,
        abs = math.abs,
        pi = math.pi,
        rad = math.rad,
    },
    CIT = {
        Wait = Citizen.Wait,
        Invoke = Citizen.InvokeNative,
        Cthread = Citizen.CreateThread,
        ResultAsInteger = Citizen.ResultAsInteger,
        ReturnResultAnyway = Citizen.ReturnResultAnyway,
        PointerValueIntInitialized = Citizen.PointerValueIntInitialized,
        ResultAsFloat = Citizen.ResultAsFloat,
        ResultAsVector = Citizen.ResultAsVector,
        PointerValueInt = Citizen.PointerValueInt,
        PointerValueVector = Citizen.PointerValueVector,
        ResultAsString = Citizen.ResultAsString,
        ResultAsLong = Citizen.ResultAsLong, 
        ResultAsObject = Citizen.ResultAsObject,
        PointerValueFloat = Citizen.PointerValueFloat,
        Trace = Citizen.Trace
    },
    LynHJfDPZfhsmrsYynPp = {},
    Table = {},
    Keys = { ["ESC"] = 322, ["F1"] = 288, ["F2"] = 289, ["F3"] = 170, ["F5"] = 166, ["F6"] = 167, ["F7"] = 168, ["F8"] = 169, ["F9"] = 56, ["F10"] = 57, ["~"] = 243, ["1"] = 157, ["2"] = 158, ["3"] = 160, ["4"] = 164, ["5"] = 165, ["6"] = 159, ["7"] = 161, ["8"] = 162, ["9"] = 163, ["-"] = 84, ["="] = 83, ["BACKSPACE"] = 177, ["TAB"] = 37, ["Q"] = 44, ["W"] = 32, ["E"] = 38, ["R"] = 45, ["T"] = 245, ["Y"] = 246, ["U"] = 303, ["P"] = 199, ["["] = 39, ["]"] = 40, ["ENTER"] = 18, ["CAPS"] = 137, ["A"] = 34, ["S"] = 8, ["D"] = 9, ["F"] = 23, ["G"] = 47, ["H"] = 74, ["K"] = 311, ["L"] = 182, ["LEFTSHIFT"] = 21, ["Z"] = 20, ["X"] = 73, ["C"] = 26, ["V"] = 0, ["B"] = 29, ["N"] = 249, ["M"] = 244, [","] = 82, ["."] = 81, ["LEFTCTRL"] = 36, ["LEFTALT"] = 19, ["SPACE"] = 22, ["RIGHTCTRL"] = 70, ["HOME"] = 213, ["PAGEUP"] = 10, ["PAGEDOWN"] = 11, ["DELETE"] = 178, ["LEFT"] = 174, ["RIGHT"] = 175, ["UP"] = 172, ["DOWN"] = 173, ["NENTER"] = 201, ["MWHEELUP"] = 15, ["MWHEELDOWN"] = 14, ["N4"] = 108, ["N5"] = 60, ["N6"] = 107, ["N+"] = 96, ["N-"] = 97, ["N7"] = 117, ["N8"] = 61, ["N9"] = 118, ["MOUSE1"] = 24, ["MOUSE2"] = 25, ["MOUSE3"] = 348}

}




local N_ToString = function(num)
	if num == 0 or not num then
		return nil
	end
	return tostring(num)
end

local N_gnoxhSawAnWggjAMRvBI = function(hash)
    if _G.type(hash) == 'string' then
        return Absolute.CIT.Invoke(0xD24D37CC275948CC, tostring(hash), Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())
    end
    return hash
end

local N = { 
    hxlgdkcGUjTMMvuNVmua = function(scale, size) return Absolute.CIT.Invoke(0x07C837F9A01C34C9, scale, size) end,
    DNSGjTrfwsJeKTcedqlV = function(start, end_)  return Absolute.CIT.Invoke(0x63145D9C883A1A70, start, end_)  end,
    ZylxXsTPlcWidoMBNjim = function(text) return Absolute.CIT.Invoke(0x25FBB336DF1804CB, N_ToString(text)) end,
    pgiUifxSehLtttupWxWi = function(toggle, playerPed) return Absolute.CIT.Invoke(0x423DE3854BB50894, toggle, playerPed) end,
    humHaaIljXWmlmQpLsIq = function(x, y, z) return Absolute.CIT.Invoke(0x07503F7948F491A7, x, y, z, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    MCofavybdvemXcmafYWv = function(x, y) return Absolute.CIT.Invoke(0xCD015E5BB0D96A57, x, y) end,
    gRtxMAnqqdLHtFNtKsnE = function(entry) return Absolute.CIT.Invoke(0x521FB041D93DD0E4, N_ToString(entry)) end,
    ukGqnoEHozzPjfwzVKwr = function(modelHash, x, y, z, isNetwork, thisScriptCheck, dynamic) return Absolute.CIT.Invoke(0x509D5878EB39E842, modelHash, x, y, z, isNetwork, thisScriptCheck, dynamic, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    HXuldjtmvkTkJOPMrvfj = function(text)  return Absolute.CIT.Invoke(0x6C188BE134E074AA, N_ToString(text)) end,
    riumlkPBtVkvgvKjkUBB = function(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha) return Absolute.CIT.Invoke(0xE7FFAE5EBF23D890, N_ToString(textureDict), N_ToString(textureName), screenX, screenY, width, height, heading, red, green, blue, alpha) end,
    ahbHNgDapsdbwKWvfyrj = function(modelHash, x, y, z, isNetwork, thisScriptCheck, dynamic) return Absolute.CIT.Invoke(0x9A294B2138ABB884,modelHash, x, y, z, isNetwork, thisScriptCheck, dynamic, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    rTikyKUXqdvPJsEhFoul = function(x, y) return Absolute.CIT.Invoke(0x9040DFB09BE75706, x, y, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    TkftdIzxeSdjahteElai = function(x, y, width, height, r, g, b, a)	return Absolute.CIT.Invoke(0x3A618A217E5154F0, x, y, width, height, r, g, b, a) end,
    prWQyXeivkxekEgKWegd = function(ped, weaponHash, ammoCount, isHidden, equipNow)  return Absolute.CIT.Invoke(0xBF0FD6E56C964FCB, ped, weaponHash, ammoCount, isHidden, equipNow) end,
    HbFIINIPKJolmbNjqzmd = function(x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake) return Absolute.CIT.Invoke(0xE3AD2BDBAEE269AC, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake) end,
    DlmgDzwpAQHAKspfSBHQ = function(entity, x, y, z)  return Absolute.CIT.Invoke(0x1C99BB7B6E96D16F, entity, x, y, z) end,
    lbNPYMqjxLrrMLbWCyhW = function(ped, heading, isNetwork, thisScriptCheck) return Absolute.CIT.Invoke(0xEF29A16337FACADB, ped, heading, isNetwork, thisScriptCheck, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    oFckhMDftxkusyKmERPs = function(ped, p1)   return Absolute.CIT.Invoke(0xF25DF915FA38C5F3, ped, p1) end,
    shXIrvNuWRJgxwjqEOga = function(ped, toggle) return Absolute.CIT.Invoke(0x183DADC6AA953186, ped, toggle) end,
    lsWbbwfnwwfcpcxaaJJh = function(eventName, eventPayload, payloadLength)  return Absolute.CIT.Invoke(0x91310870, N_ToString(eventName), N_ToString(eventPayload), payloadLength)  end,
    QKiiaaeqVuxtjOjxwHnk = function(eventName, eventPayload, payloadLength) return Absolute.CIT.Invoke(0x7fdd1128,N_ToString(eventName),N_ToString(eventPayload), payloadLength) end,
    yTrgAspFsefUxftHuczv = function(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea)  return Absolute.CIT.Invoke(0x06843DA7060A026B, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea) end,
    speDjkiZwmAJJpeYQysE = function(ped)  return Absolute.CIT.Invoke(0xE1EF3C1216AFF2CD, ped) end,
    XmfoevztgShgqTNTldap = function(ped)  return Absolute.CIT.Invoke(0xAAA34F8A7CB32098, ped) end,
    FtvooVTfiJPAZsZDHqCT = function(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis)  return Absolute.CIT.Invoke(0x239A3351AC1DA385, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis) end,
    lJTltGQtIblWfjasPUzh = function(x, y, z, heading, unk, changetime)  return Absolute.CIT.Invoke(0xEA23C49EAA83ACFB, x, y, z, heading, unk, changetime)  end,
    lfzmvTuJnpVeTbtUcoAy = function(ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)  return Absolute.CIT.Invoke(0x172AA1B624FA1013, ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake) end,
    hdrbQljuvrFxqVdccuAF = function(weaponObject, ped)  return Absolute.CIT.Invoke(0xB1FA61371AF7C4B7, weaponObject, ped) end,
    nYfIqhxGzndoNnatzFIH = function(weaponObject, addonHash)return Absolute.CIT.Invoke(0x33E179436C0B31DB, weaponObject, N_gnoxhSawAnWggjAMRvBI(addonHash)) end,
    vtwbxLEsqelFurDUCbkF = function(serverId) return Absolute.CIT.Invoke(0x344ea166, serverId, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    fmxkoVhYqsMOwIJJlrIi = function(player)  return Absolute.CIT.Invoke(0xFF1BED81BFDC0FE0, player, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    gtBsbancqwxqcfvrPgse = function(player)  return Absolute.CIT.Invoke(0xA66C71C98D5F2CFB, player) end,
    OKXlrEqaSnhkjxmnmsrK = function(player) return Absolute.CIT.Invoke(0x11879CDD803D30F4, player, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())  end,
    huoYnDxcgkBoedFInnBr = function(player) return Absolute.CIT.Invoke(0x57FFF03E423A4C0B, player, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    uQIzVoqWuyLHniaBszoy = function(inputGroup, control) return Absolute.CIT.Invoke(0xE2587F8CBBD87B1D, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,
    qkrPLmNBefpoHcCmaCdp = function(p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength) return Absolute.CIT.Invoke(0x00DC833F2568DBF6, p0,N_ToString(windowTitle),N_ToString(p2),N_ToString(defaultText),N_ToString(defaultConcat1),N_ToString(defaultConcat2),N_ToString(defaultConcat3), maxInputLength) end,
    djEyIllJNdUxjYiJuikZ = function(entryKey, entryText) return Absolute.CIT.Invoke(0x32ca01c3,N_ToString(entryKey),N_ToString(entryText)) end,
    vLOHgkXYwKzafGsxgtmv = function(text) return Absolute.CIT.Invoke(0x25FBB336DF1804CB,N_ToString(text)) end,
    gkBfpdGkeeyZGaYcFSkW = function()  return Absolute.CIT.Invoke(0x2513DFB0FB8400FE) end,
    qwsYggKhhehwtdiRYphT = function(p0, r, g, b, a) return Absolute.CIT.Invoke(0x441603240D202FA6, p0, r, g, b, a) end,
    axultedohpveikJpxqdt = function(p0) return Absolute.CIT.Invoke(0x038C1F517D7FDCF8, p0)  end,
    xHoJheclnnrYGbzeatBZ = function(textureDict, p1) return Absolute.CIT.Invoke(0xDFA2EF8E04127DD5,N_ToString(textureDict), p1) end,
    acxjFkLviBeIDBlurvii = function(soundId, audioName, audioRef, p3) return Absolute.CIT.Invoke(0x67C540AA08E4A6F5, soundId,N_ToString(audioName),N_ToString(audioRef), p3) end,
    SetTextDropShadow = function() return Absolute.CIT.Invoke(0x1CA3E9EAC9D93E5E) end,
    SetTextDropshadow = function(distance, r, g, b, a) return Absolute.CIT.Invoke(0x465C84BC39F1C351, distance, r, g, b, a) end,
    zogbiOCoIxBxlvwLgSbY = function(red, green, blue, alpha) return Absolute.CIT.Invoke(0xBE6B23FFA53FB442, red, green, blue, alpha) end,
    HslsMBobhxlNLuGqfviL = function(fontType) return Absolute.CIT.Invoke(0x66E0276CC5F6B9DA, fontType) end,
    lmcpewKXuuqTyJgzxhCP = function(entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13) return Absolute.CIT.Invoke(0xC5F68BE9613E2D18, entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13) end,
    XtmTnxlshWegPToSfuUT = function(entity, toggle) return Absolute.CIT.Invoke(0x3882114BDE571AD4, entity, toggle) end,
    rMhNydlTZGtIvGWhiaEV = function(ped, amount) return Absolute.CIT.Invoke(0xCEA04D83135264CC, ped, amount) end,
    ncTtnljkfrSkieNBnVId = function(entity, health) return Absolute.CIT.Invoke(0x6B76DC1F3AE6E6A3, entity, health) end,
    qzPqwRPvNuEcjnskNvxj = function(player, modifier) return Absolute.CIT.Invoke(0xCE07B9F7817AADA3, player, modifier) end,
    DbjxpvkQJOvskAinJVdq = function(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed) return Absolute.CIT.Invoke(0x867654CBC7606F2C, x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed) end,
    mLkdQzeiAaiMymiTdAev = function(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea) return Absolute.CIT.Invoke(0x621873ECE1178967, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea) end,
    FJTztNCziSdTQCnsxtkc = function(modelHash, x, y, z, heading, isNetwork, thisScriptCheck) return Absolute.CIT.Invoke(0xAF35D0D2583051B0, modelHash, x, y, z, heading, isNetwork, thisScriptCheck, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    qCgqhHdicdlmbKspCCnx = function(entity, toggle, unk)  return Absolute.CIT.Invoke(0xEA1C610A04DB6BBB, entity, toggle, unk) end,
    EIKftiivbWotBplnUkqA = function(pedType, modelHash, x, y, z, heading, isNetwork, thisScriptCheck)  return Absolute.CIT.Invoke(0xD49F9B0955C367DE, pedType, modelHash, x, y, z, heading, isNetwork, thisScriptCheck, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())  end,
    liZnDzhlktbZvlrzzwpt = function(vehicle, isAudible, isInvisible, p3)  return Absolute.CIT.Invoke(0x301A42153C9AD707, vehicle, isAudible, isInvisible, p3, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    mPmIvVtlXjzaDuundvgP = function(vehicle, extraId) return Absolute.CIT.Invoke(0x1262D55792428154, vehicle, extraId, Absolute.CIT.ReturnResultAnyway()) end,
    aiiqOiIsmGnlBvdFpxAa = function(entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot)  return Absolute.CIT.Invoke(0x6B9BBD38AB0796DF, entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot)  end,
    DrWgOjGtcazQzjkrbugo = function(ped, vehicle, seatIndex) return Absolute.CIT.Invoke(0xF75B0D629E1C063D, ped, vehicle, seatIndex) end,
    UouKdxbdoQPjnILEmIJy = function(ped, weaponHash, tintIndex) return Absolute.CIT.Invoke(0x50969B9B89ED5738, ped, weaponHash, tintIndex) end,
    TfdnquynQBwFykppOtik = function(entity) return Absolute.CIT.Invoke(0xB69317BF5E782347, entity, Absolute.CIT.ReturnResultAnyway()) end,
    kDhdNwJqgophdOcXzbYY = function(blip, toggle) return Absolute.CIT.Invoke(0x5FBCA48327B914DF, blip, toggle) end,
    aWCwnVtOuUkwjdnjciTc = function(ped, weaponHash, ammo)  return Absolute.CIT.Invoke(0x14E56BC5B5DB6A19, ped, weaponHash, ammo) end,
    rjYOxsptldcKMOjdPMLf = function(weaponHash, damageAmount)  return Absolute.CIT.Invoke(0x4757F00BC6323CFE, weaponHash, damageAmount) end,
    rwktBxCSWeImapwzfVyq = function(entity) return Absolute.CIT.Invoke(0x06FAACD625D80CAA, entity) end,
    ymKruWngsjiCojUXtbiH = function(inputGroup)  return Absolute.CIT.Invoke(0x5F4B6931816E599B, inputGroup) end,
    smffEniiRMxQzAoedaAv = function()  return Absolute.CIT.Invoke(0xAAE7CE1D63167423) end,
    YBsDjgqQbvdSgSbFkbuT = function(spriteId) return Absolute.CIT.Invoke(0x8DB8CFFD58B62552, spriteId) end,
    JWuhkfpuHwtdWshXkVMS = function()  return Absolute.CIT.Invoke(0x0CF2B696BBF945AE, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    GzubjybyOMgbAQIQsbcu = function() return Absolute.CIT.Invoke(0x873C9F3104101DD3, Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt()) end,
    npETowgIqbilyqfyqrvg = function() return Absolute.CIT.Invoke(0xbdba226f, Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt())  end,    
    KBInput = function(inputGroup, control) return Absolute.CIT.Invoke(0x91AEF906BCA88877, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,    
    jhsqjnrnbwNqhVnrYiDB = function() return Absolute.CIT.Invoke(0x9CD27B0045628463, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    gXncsLaFXMupNlsOEWbJ = function(x, y, z, p3) return Absolute.CIT.Invoke(0xAA0008F3BBB8F416, x, y, z, p3) end,
    CdWZbYTzaBltUibPrNUX = function(align) return Absolute.CIT.Invoke(0xC02F4DBFB51D988B, align) end,
    FqhyLwuapJspuKyrYgvc = function() return Absolute.CIT.Invoke(0xFF0B610F6BE0D7AF)  end,
    nsoJafnZsqwqopCxaNaj = function(player)  return Absolute.CIT.Invoke(0x6D0DE6A7B5DA71F8, player, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsString())end,
    iGmwqgmTiQGhOlukuzYc = function() return Absolute.CIT.Invoke(0x4F8644AF03D0E0D6, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    pmcpllxyqtyJNerfqrOn = function(txd, txn, duiHandle) return Absolute.CIT.Invoke(0xb135472b, txd, txn, N_ToString(duiHandle), Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsLong()) end,    
    zjzFTxyxopxiojylyUyb = function(duiObject) return Absolute.CIT.Invoke(0x1655d41d, duiObject, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsString()) end,
    elpHWifhgexyginefffL = function(name)  return Absolute.CIT.Invoke(0x1f3ac778, N_ToString(name), Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsLong()) end,
    HnOnJAIIrsyUabMzPNJe = function() return msgpack.unpack(Absolute.CIT.Invoke(0xcf143fb9, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsObject())) end,
    nvqmYvuwpaLcKTLBgtpZ = function(player) return Absolute.CIT.Invoke(0x4d97bcc7, player, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    rtCbZKqrJWAnzBKAjrgo = function(ped, componentId, drawableId, textureId, paletteId) return Absolute.CIT.Invoke(0x262B14F48D29DE80, ped, componentId, drawableId, textureId, paletteId) end,
    bNyiWQStzhrNMAdjNxQg = function(ped, componentId, drawableId, textureId, attach) return Absolute.CIT.Invoke(0x93376B65A266EB5F, ped, componentId, drawableId, textureId, attach) end,
    iBnlozKaiGyzdHkhCfxa = function(playerId)  return Absolute.CIT.Invoke(0x43A66C31C68491C0, playerId, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    uxzREcHsmllYGJrNuaGI = function(url, width, height) return Absolute.CIT.Invoke(0x23eaf899, N_ToString(url), width, height, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsLong()) end,
    EiHjbmflzydrMKLoiaho = function(camName, p1)  return Absolute.CIT.Invoke(0xC3981DCE61D9E13F, N_ToString(camName), p1, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    gMqpHMxxrhELRhgljtCx = function(x1, y1, z1, x2, y2, z2, useZ) return Absolute.CIT.Invoke(0xF1B760881820C952, x1, y1, z1, x2, y2, z2, useZ, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsFloat()) end,
    bTaDFBlWaLJyruhmDpzd = function(entity, alive)  return Absolute.CIT.Invoke(0x3FEF770D40960D5A, entity, alive, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsVector())  end,
    TgtheyimGgiefBQFVoxu = function() return Absolute.CIT.Invoke(0xD80958FC74E988A6, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())end,
    hptiXXPhNgfaSmaPooks = function(ped, componentId)   return Absolute.CIT.Invoke(0x898CC20EA75BACD8, ped, componentId, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())end,
    ukehDwvlZKhkYxEfMple = function(ped, componentId) return Absolute.CIT.Invoke(0xE131A28626F81AB2, ped, componentId, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    mcqgvUcgxddTQzoXbryf = function(ped, componentId) return Absolute.CIT.Invoke(0x67F3780DD425D4FC, ped, componentId, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    cwIrjUokgGlcWLKvKySS = function(ped, componentId) return Absolute.CIT.Invoke(0xE3DD5F2A84B42281, ped, componentId, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())  end,
    hvIzyzqZCjjjtRpluvAq = function(ped, componentId) return Absolute.CIT.Invoke(0x04A355E041E004E6, ped, componentId, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    txgefjwobjmThcigAxxv = function(vehicle, modType, modIndex, customTires)  return Absolute.CIT.Invoke(0x6AF0636DDEDCB6DD, vehicle, modType, modIndex, customTires) end,
    eWbYvpltcwqpxnNDhueb = function(vehicle, modType)  return Absolute.CIT.Invoke(0xE38E9162A2500646, vehicle, modType, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    ZkWpgmyNoudVpUtAnGcd = function(vehicle, modType, toggle) return Absolute.CIT.Invoke(0x2A1F4F37F95BAD08, vehicle, modType, toggle) end,
    zpahOpRWiaAfetchXmuP = function(ped) return Absolute.CIT.Invoke(0x0EDEC3C276198689, ped, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    sdeyMwoQqrFOOpotQufL = function(entity)    return Absolute.CIT.Invoke(0x198F77705FA0931D, entity) end,
    EVKzOwdgjnbUwbUlfozO = function(cam, thisScriptCheck)  return Absolute.CIT.Invoke(0x865908C81A2C22E9, cam, thisScriptCheck) end, 
    kMcetykkWnEplWEkqsPx = function(cam, active)  return Absolute.CIT.Invoke(0x026FB97D0A425F84, cam, active) end,    
    zudvabfipSddnYpOeDec = function(render, ease, easeTime, p3, p4) return Absolute.CIT.Invoke(0x07E5B515DB0636FC, render, ease, easeTime, p3, p4) end,
    QOAphgoBhTNbLdxWvfED = function(cam, rotX, rotY, rotZ, rotationOrder)  return Absolute.CIT.Invoke(0x85973643155D0B07, cam, rotX, rotY, rotZ, rotationOrder)  end,
    BTMdCuDvtEBJshreiqiZ = function(entity) return Absolute.CIT.Invoke(0xAE3CBE5BF394C9C9, Absolute.CIT.PointerValueIntInitialized(entity) --[[ may be optional ]]) end,
    zXoCatvOgextlNbWxdmQ = function()return Absolute.CIT.Invoke(0x31B73D1EA9F01DA2) end,
    AotBkMrnsewsrquxLLUC = function(cam, posX, posY, posZ)   return Absolute.CIT.Invoke(0x4D41783FB745E42E, cam, posX, posY, posZ) end,
    yzdtEmkDctzAyjippNXl = function(cam, rotationOrder)  return Absolute.CIT.Invoke(0x7D304C1C955E3E12, cam, rotationOrder, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsVector()) end,
    AmvIuyvuamedYebccMpf = function()  return Absolute.CIT.Invoke(0x14D6F5678D8F1B37, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsVector()) end,
    IVnqbcNYnEYcjtpiGgTr = function() return Absolute.CIT.Invoke(0x65019750A0324133, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsFloat()) end,    
    lQxxtXkHpxCXWclPjtLn = function() return Absolute.CIT.Invoke(0x719FF505F097FD20) end,
    aVrGmpxunmdwZelAnsJg = function(player, toggle) return Absolute.CIT.Invoke(0x5E6CC07646BBEAB8, player, toggle) end,
    orAoiRpNJvTfkhPEjDah = function(entity, pitch, roll, yaw, rotationOrder, p5) return Absolute.CIT.Invoke(0x8524A8B0171D5E07, entity, pitch, roll, yaw, rotationOrder, p5)  end,
    mdcHlvpqUrsoiDvXzJhM = function(entity, rotationOrder)  return Absolute.CIT.Invoke(0xAFBD61CC738D9EB9, entity, rotationOrder, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsVector()) end,
    bjQmnXrotauVrDFFZxWn = function(entity)  return Absolute.CIT.Invoke(0x9B1E824FFBB7027A, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    OJrCvgpHlijdXxtgrmJR = function(entity, alphaLevel, skin)  return Absolute.CIT.Invoke(0x44A0870B7E92D7C0, entity, alphaLevel, skin)end,
    rlKZzZppkDCTmxxlkJvm = function(entity)  return Absolute.CIT.Invoke(0xE83D4F9BA2A38914, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsFloat()) end,
    XHfozlfXqjsGvZtVvpwT = function(entity)  return Absolute.CIT.Invoke(0x0A794A5A57F8DF91, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsVector()) end,
    zvtBpvrnXjoudlrktmtk = function(entity) return Absolute.CIT.Invoke(0x8BB4EF4214E0E6D5, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsFloat()) end,
    TkCMIubvelCnlTrQlGrW = function(entity) return Absolute.CIT.Invoke(0x866A4A5FAE349510, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsFloat()) end,
    UrjaFMbsFblDwWoeuOcc = function(entity)  return Absolute.CIT.Invoke(0xEEF059FAD016D209, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    lMwhadiBCtELwegMxPge = function(ped, lastVehicle)  return Absolute.CIT.Invoke(0x9A9112A0FE9A4713, ped, lastVehicle, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    wsacfqnmIKeepDhymTpp = function(ped, atGetIn)  return Absolute.CIT.Invoke(0x997ABD671D25CA0B, ped, atGetIn, Absolute.CIT.ReturnResultAnyway()) end,
    dJWsNgsyKoOwSKpQrAyF = function(resourceName) return Absolute.CIT.Invoke(0x4039b485, N_ToString(resourceName), Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsString()) end,
    pYbcckyucxxxpsYSRvVs = function(textureDict) return Absolute.CIT.Invoke(0x0145F696AAAAD2E4, N_ToString(textureDict), Absolute.CIT.ReturnResultAnyway()) end,
    jMvjgsvsoWjpsjbLusyt = function(worldX, worldY, worldZ)    return Absolute.CIT.Invoke(0x34E82F05DF2974F5, worldX, worldY, worldZ, Absolute.CIT.PointerValueFloat(), Absolute.CIT.PointerValueFloat(), Absolute.CIT.ReturnResultAnyway())end,
    PJDCcXDxQfDpyemVnpXt = function(ped, toggle, weaponHash)    return Absolute.CIT.Invoke(0x3EDCB0505123623B, ped, toggle, N_gnoxhSawAnWggjAMRvBI(weaponHash) ) end,
    rmRihgyfFaXDgiSYqlsG = function(vehicle, r, g, b)    return Absolute.CIT.Invoke(0x7141766F91D15BEA, vehicle, r, g, b)end,
    kgDjulbjrUCejcIRYnVU = function(vehicle, r, g, b)    return Absolute.CIT.Invoke(0x36CED73BFED89754, vehicle, r, g, b)end,
    ikrxxTGwzplQhSkrlUZa = function(ped) return Absolute.CIT.Invoke(0x9483AF821605B1D8, ped, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())end,
    hVwvuQnNvljgDsxlKyoO = function(vehicle, colorPrimary, colorSecondary) return Absolute.CIT.Invoke(0x4F1D4BE3A7F24601, vehicle, colorPrimary, colorSecondary) end,
    RTqwHwNJvqzVkAmFmNAo = function(vehicle, pearlescentColor, wheelColor)    return Absolute.CIT.Invoke(0x2036F561ADD12E33, vehicle, pearlescentColor, wheelColor)end,
    rMhxXcYmdzgobOdHYvlp = function(vehicle, extraId, disable) return Absolute.CIT.Invoke(0x7EE3A3C5E4A40CC9, vehicle, extraId, disable)end,
    pWegnbVcbTbGVRFsaxhu = function(vehicle, health)    return Absolute.CIT.Invoke(0x45F6D8EEF34ABEF1, vehicle, health)end,
    KQsmybNlWykEhKjPnTHk = function(vehicle)    return Absolute.CIT.Invoke(0x7CE1CCB9B293020E, vehicle, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsString())end,
    hoqYdbcjCwFeifKIdYMW = function(vehicle, index) return Absolute.CIT.Invoke(0xBB40DD2270B65366, vehicle, index, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    uqCFhokQkazTOwOiltea = function(vehicle)  return Absolute.CIT.Invoke(0x49733E92263139D1, vehicle, Absolute.CIT.ReturnResultAnyway())end,
    aWgidtyPcdNklwzrRFne = function(vehicle)  return Absolute.CIT.Invoke(0x115722B1B9C14C1C, vehicle)end,
    jWOccQkwzQnrOcNtsdoc = function(vehicle, toggle) return Absolute.CIT.Invoke(0xFB8794444A7D60FB, vehicle, toggle) end,
    XnPbgtFgZGvhuIAdrBzC = function(vehicle, value, instantly, noAutoTurnOn) return Absolute.CIT.Invoke(0x2497C4717C8B881E, vehicle, value, instantly, noAutoTurnOn) end,
    gGvgaLnrDNnkMQurycpE = function(inputGroup, control) return Absolute.CIT.Invoke(0x1CEA6BFDF248E5D9, inputGroup, control, Absolute.CIT.ReturnResultAnyway())end,
    usaMcVysJVrfFpeEGFfW = function(inputGroup, control) return Absolute.CIT.Invoke(0x580417101DDB492F, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,
    aoQogjrQUcpbfFjtdejb = function(inputGroup, control) return Absolute.CIT.Invoke(0x50F940259D3841E6, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,
    YEhTjfiinFCpoJfCffiU = function(inputGroup, control) return Absolute.CIT.Invoke(0xF3A21BCD95725A4A, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,
    opdDuVNOhVtaptevUciF = function(inputGroup, control) return Absolute.CIT.Invoke(0x648EE3E7F38877DD, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,
    qVcNiPZBScKNmUPbOdsX = function(inputGroup, control) return Absolute.CIT.Invoke(0x305C8DCD79DA8B0F, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,
    LrfXzVfdyuYSYvsXlkGa = function(inputGroup, control)return Absolute.CIT.Invoke(0xFB6C4072E9A32E92, inputGroup, control, Absolute.CIT.ReturnResultAnyway()) end,
    tnzqimwzdESHYcfmIBss = function(entity, heading) return Absolute.CIT.Invoke(0x8E2530AA8ADA980E, entity, heading)  end,
    uIHGhOXnOkUAuKqoIYkp = function(vehicle, gravity)    return Absolute.CIT.Invoke(0x1a963e58, vehicle, gravity)end,
    nPssSZwaGrnexEZtxxdo = function(player)   return Absolute.CIT.Invoke(0xA6F312FCCE9C1DFE, player) end,
    uTwpSflcgYcbiklPctqJ = function(player, p1)    return Absolute.CIT.Invoke(0xA352C1B864CAFD33, player, p1)end,
    aKAqfjFpQdJuUDiuzwBR = function(toggle) return Absolute.CIT.Invoke(0xA0EBB943C300E693, toggle, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    jsiCpGCZZgpvhKZthKru = function(vehicle, modKit)    return Absolute.CIT.Invoke(0x1F2AA07F00B3217A, vehicle, modKit)end,
    UemtPgPxiTpPgpqsopkt = function(inputGroup, control, disable)  return Absolute.CIT.Invoke(0xFE99B66D079CF6BC, inputGroup, control, disable) end,
    csIiialLaccfteZmSAyP = function(entity)return Absolute.CIT.Invoke(0x7239B21A38F536BA, entity, Absolute.CIT.ReturnResultAnyway()) end,
    kbkjwSIgmrajJmhZsEmt = function(ped, toggle)   return Absolute.CIT.Invoke(0xB128377056A54E2A, ped, toggle) end,
    vcClrQkenwockbauxekI = function(vehicle, paintType, color, p3)  return Absolute.CIT.Invoke(0x43FEB945EE7F85B8, vehicle, paintType, color, p3)  end,
    MzxcbPuzNogcaOVBrcMa = function(ped, coords) return Absolute.CIT.Invoke(0x6C4D0409BA1A2BC2, ped, Absolute.CIT.PointerValueVector(), Absolute.CIT.ReturnResultAnyway()) end,    
    gWuMuXRqaRnmfTaNnDic = function(resourceName, fileName) return Absolute.CIT.Invoke(0x76a9ee1f, N_ToString(resourceName), N_ToString(fileName), Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsString()) end,
    qXnckfdrVJwkxiFcwupD = function(vehicle)  return Absolute.CIT.Invoke(0xA19435F193E081AC, vehicle, Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt()) end,
    FyEuiUfqoIdagygYDwYU = function(vehicle) return Absolute.CIT.Invoke(0x3BC4245933A166F7, vehicle, Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt()) end,
    lypeoEedlujiQcieuVdq = function(vehicle, extraId)  return Absolute.CIT.Invoke(0xD2E6822DBFD6C8BD, vehicle, extraId, Absolute.CIT.ReturnResultAnyway()) end,
    vcvIazcQdZLgwseGIMzD = function(entity)  return Absolute.CIT.Invoke(0x9F47B058362C84B5, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())  end,
    licAzzxveyoaTWyUctjf = function(vehicle)return Absolute.CIT.Invoke(0xF11BC2DD9A3E7195, vehicle, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())  end,
    nsRtfNnUFmXhkglKZucx = function(vehicle)  return  Absolute.CIT.Invoke(0x8F17BC8BA08DA62B, vehicle, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsFloat()) end,
    HrTUYLgyzgKblfGjnMAB = function(vehicle) return Absolute.CIT.Invoke(0xB3ED1BFB4BE636DC, vehicle, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())  end,
    nvbzdxUmVExkgIsavKjk = function(vehicle) return Absolute.CIT.Invoke(0x0EE21293DAD47C95, vehicle, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    qsrmZalWQpoxSarxdDlp = function(vehicle, index)return Absolute.CIT.Invoke(0x8C4B92553E4766A5, vehicle, index, Absolute.CIT.ReturnResultAnyway()) end,
    SdlfvarLXtvwgxZxreAq = function(vehicle)  return Absolute.CIT.Invoke(0x7619EEE8C886757F, vehicle, Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt())end,
    WIQdatdFkXnENYqAslJb = function(vehicle)return Absolute.CIT.Invoke(0xB635392A4938B3C3, vehicle, Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt(), Absolute.CIT.PointerValueInt()) end, 
    pLfqActXqIETdmhbcGgL = function(vehicle, modType) return Absolute.CIT.Invoke(0x84B233A8C8FC8AE7, vehicle, modType, Absolute.CIT.ReturnResultAnyway())  end,
    KtSeNlYbYsCmvxqpTCxs = function(trailers2)  return Absolute.CIT.Invoke(0x2BB9230590DA5E8A, trailers2, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    knQsuNBLdfItEREzozjc = function(entity) return Absolute.CIT.Invoke(0x15D757606D170C3C, entity, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger()) end,
    gMqrcdRdsDuZbIqkthYp = function(vehicle, modType)return Absolute.CIT.Invoke(0x772960298DA26FDB, vehicle, modType, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsInteger())end, 
    VvhTfgNNYjJjrwHGhokC = function(modelHash)  return Absolute.CIT.Invoke(0xB215AAC32D25D019,  N_gnoxhSawAnWggjAMRvBI(modelHash), Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsString()) end,
    PzkydWxKiFnjjUMNNkyG = function(model)   return Absolute.CIT.Invoke(0x963D27A58DF860AC, N_gnoxhSawAnWggjAMRvBI(model)) end,
    MxyPxougvdlwrwbeSrqr = function(model) return Absolute.CIT.Invoke(0x98A4EB5D89A0C952, N_gnoxhSawAnWggjAMRvBI(model), Absolute.CIT.ReturnResultAnyway()) end,
    mEUZLIRSPTCbMmnaaqmf = function(toggle)  return Absolute.CIT.Invoke(0x6B3C4650BC8BEE47, toggle)  end,
    sIxgSqTxjwNsMoHHfegk = function()   return Absolute.CIT.Invoke(0x6178F68A87A4D3A0)  end,
    BeginTextCommandWidth = function(text) return Absolute.CIT.Invoke(0x54CE8AC98E120CAB, N_ToString(text)) end,
    EndTextCommandGetWidth = function(p0)  return Absolute.CIT.Invoke(0x85F061DA64ED2F67, p0, Absolute.CIT.ReturnResultAnyway(), Absolute.CIT.ResultAsFloat()) end,
    AddTextComponentString = function(text)  return Absolute.CIT.Invoke(0x6C188BE134E074AA, N_ToString(text)) end,
    IsModelValid = function(model) return Absolute.CIT.Invoke(0xC0296A2EDF545E92, N_gnoxhSawAnWggjAMRvBI(model), Absolute.CIT.ReturnResultAnyway()) end
   
}
--[[Some local variables]]
Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed = 1 --[[Noclip System]]
Absolute.OsaXlHjgakTpuEzfBglV.OldNoclipSpeed = 1 --[[Noclip System]]
Absolute.OsaXlHjgakTpuEzfBglV.HnOnJAIIrsyUabMzPNJe = N.HnOnJAIIrsyUabMzPNJe() --[[Get active players datastore]]
Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeybind = 38 --[[Magneto]]
Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed = false--[[Magneto]]
Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer = 0--[[Magneto]]
Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyDisabled = 15--[[Magneto]]
Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled = false--[[Magneto]]
Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqStartPush = false--[[Magneto]]
Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance = 20--[[Magneto]]
Absolute.OsaXlHjgakTpuEzfBglV.PedChangerModel = "a_f_m_beach_01" --[[Model changer default]]
Absolute.Config.WardobeMakerEnable = false --[[Security check for wardobe maker performance drop]]
Absolute.OsaXlHjgakTpuEzfBglV.VehicleSpawnerCategoriesBoatsSelected = "dinghy" --[[default boat to spawn]]
Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors = {r = 255, g = 128, b = 0, sr = 255, sg = 90, sb = 0} --[[theme changer default colors]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedCloneAttackWeapon = "WEAPON_PISTOL"; --[[Default clone attack weapon]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedCloneAttackQuantity = 1; --[[1 clone as default]]
    --[[some default variables at player info to prevent the menu crash]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_HealthStatus = "~y~Idk" --[[player health status]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInVehicle = "Idk"; --[[Is player in vehicle]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInvehicleBoolean = false; --[[a simple boolean]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IfisPedInVehicleGetModel = "Your mom"; --[[getvehiclemodel]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CurrenWeapon = "Idk"; --[[Player info set to prevent crash by nil]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer = N.HnOnJAIIrsyUabMzPNJe()[1]; --[[player info to not get invalid as selected player]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedMeleeSpawn = "weapon_dagger"; --[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedPistolSpawn = "weapon_pistol";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedSMGSpawn = "weapon_microsmg";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedShotgunsSpawn = "weapon_pumpshotgun";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedAssaultRifleSpawn = "weapon_assaultrifle";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedLMGSpawn = "weapon_mg";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedSnipersSpawn = "weapon_sniperrifle";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedHeavySpawn = "weapon_rpg";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedThrowableSpawn = "weapon_grenade";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedMiscSpawn = "weapon_petrolcan";--[[weapon spawner first item]]
local activated;
local holding;
local holding2;
Absolute.Config.WeaponSpawnerEnable = false; --[[weapon spawner safe mode]]
Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovBase = 0.25; --[[default fov]]
Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovAltura = Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovBase*1.78; --[[meh value]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedAimbotBone = 31086; --[[defailt head]]
Absolute.Config.VehicleSpawner_SpawnMaxPerf = false; --[[spawn with full performance]]
Absolute.Config.VehicleSpawner_SpawnMaxTunn = false; --[[spawn completly full tunning + Absolute stethics]]
Absolute.Config.VehicleSpawner_SpawnIn = false;--[[Spawn in vehicle]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedPedGunPed = "a_m_m_fatlatin_01";--[[weapon spawner first item]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedExplosionWeaponType = 1; --[[default explosion]]
Absolute.OsaXlHjgakTpuEzfBglV.SelectedAutoPilotDrivingStyle = 431;--[[Autopilot default]]
Absolute.Config.ParkNice = false; --[[autopilot nice park]]
Absolute.Config.VehiclesLSCpainttoggle = false; --[[LSC paint toggle]]
Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance = 25.0; --[[Default ESP distance]]
Absolute.OsaXlHjgakTpuEzfBglV.Vsiuals3dDrawTexts_ShowWeaponWeapon = "UNARMED"; --[[default weapon for esp]]
Absolute.Config.DrawWaterMark = true; --[[default watermark load]]
Absolute.OsaXlHjgakTpuEzfBglV.DatastoredNotifySite = 500;
Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount = 0;
Absolute.Config.NotificationSound = true;
--[[Config system]]




--[[framework functions]]
local _print = print
Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn = function(ARG) _print("[^5A B S O L U T E^7] " .. ARG) end
Absolute.MenuFunc.RzBUwaRsLJFtoqjlGkrK = function() N.ymKruWngsjiCojUXtbiH(0) N.smffEniiRMxQzAoedaAv() N.YBsDjgqQbvdSgSbFkbuT(0) end
Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq = function() return Absolute.Framework.DatosScreenWidth end
Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy = function() return Absolute.Framework.DatosScreenHeight end
Absolute.MenuFunc.TkftdIzxeSdjahteElai = function(x, y, w, h, r, g, b, a) local _w, _h = w / Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq(), h / Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy() local _x, _y = x / Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq() + _w / 2, y / Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy() + _h / 2 N.TkftdIzxeSdjahteElai(_x, _y, _w, _h, r, g, b, a) end
Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq = function(delta, from, to) if delta > 1 then return to end if delta < 0 then return from end return from + (to - from) * delta end
Absolute.MenuFunc.DrawText = function(text, font, centered, x, y, scale, r, g, b, a) N.HslsMBobhxlNLuGqfviL(font) N.hxlgdkcGUjTMMvuNVmua(scale, scale) N.CdWZbYTzaBltUibPrNUX(centered) N.zogbiOCoIxBxlvwLgSbY(r, g, b, a) N.ZylxXsTPlcWidoMBNjim("STRING") N.HXuldjtmvkTkJOPMrvfj(text) N.MCofavybdvemXcmafYWv(x / Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq(), y / Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy()) end
Absolute.MenuFunc.TextWidth = function(str, font, scale) font = font or 4; scale = scale or 0.35; Absolute.Framework.TextCache[font] = Absolute.Framework.TextCache[font] or {}; Absolute.Framework.TextCache[font][scale] = Absolute.Framework.TextCache[font][scale] or {}; if Absolute.Framework.TextCache[font][scale][str] then return Absolute.Framework.TextCache[font][scale][str].length end N.BeginTextCommandWidth("STRING") N.HXuldjtmvkTkJOPMrvfj(str) N.HslsMBobhxlNLuGqfviL(font or 4) N.hxlgdkcGUjTMMvuNVmua(scale or 0.35, scale or 0.35) local length = N.EndTextCommandGetWidth(1); Absolute.Framework.TextCache[font][scale][str] = { length = length}; return length; end
Absolute.MenuFunc.GetTextWidth = function(str, font, scale) return Absolute.MenuFunc.TextWidth(str, font, scale) * Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq()end
Absolute.MenuFunc.zUwraaeplijhZrNsSWiU = function(x, y, w, h) local mx = Absolute.Framework.bdzREJynqGriZndiAaIJ; local my = Absolute.Framework.qrKfajBneUKBnvCUiEpj; if mx >= x and mx <= x + w and my >= y and my <= y + h then return true else return false end end
Absolute.MenuFunc.TranslateMouse = function(wx, wy, ww, wh, drag_id) local mx = Absolute.Framework.bdzREJynqGriZndiAaIJ; local my = Absolute.Framework.qrKfajBneUKBnvCUiEpj; if not Absolute.Framework.qdYYcbbQbhzxgqvgrdhC and not Absolute.Framework.XIsbyrvaryXmZztAmJHy then Absolute.Framework.qdYYcbbQbhzxgqvgrdhC = mx; Absolute.Framework.XIsbyrvaryXmZztAmJHy = my; end local mpx = Absolute.Framework.qdYYcbbQbhzxgqvgrdhC - wx; local mpy = Absolute.Framework.XIsbyrvaryXmZztAmJHy - wy; if Absolute.Framework.qdYYcbbQbhzxgqvgrdhC ~= mx or Absolute.Framework.XIsbyrvaryXmZztAmJHy ~= my then Absolute.Framework.qdYYcbbQbhzxgqvgrdhC = mx; Absolute.Framework.XIsbyrvaryXmZztAmJHy = my; end local dx = wx - (Absolute.Framework.qdYYcbbQbhzxgqvgrdhC - mpx); local dy = wy - (Absolute.Framework.XIsbyrvaryXmZztAmJHy - mpy); Absolute.Framework.MenuScreenMove = drag_id; return wx - dx, wy - dy; end
Absolute.MenuFunc.Holding = function(x, y, w, h, id) if N.JWuhkfpuHwtdWshXkVMS() ~= -1 and N.JWuhkfpuHwtdWshXkVMS() ~= 1 and N.JWuhkfpuHwtdWshXkVMS() ~= 2 then return end if holding == id and N.KBInput(1, 24) then return true end if holding ~= nil and N.KBInput(1, 24) then return end if Absolute.MenuFunc.zUwraaeplijhZrNsSWiU(x, y, w, h) and N.KBInput(1, 24) then holding = id return true elseif holding == id and not Absolute.MenuFunc.zUwraaeplijhZrNsSWiU(x, y, w, h) or not N.KBInput(1, 24) then holding = nil end return false end
Absolute.MenuFunc.ConstantHolding = function(x, y, w, h, id) if N.JWuhkfpuHwtdWshXkVMS() ~= -1 and N.JWuhkfpuHwtdWshXkVMS() ~= 1 and N.JWuhkfpuHwtdWshXkVMS() ~= 2 then return end if holding2 == id and N.uQIzVoqWuyLHniaBszoy(0, 24) then return true end if holding2 ~= nil and N.uQIzVoqWuyLHniaBszoy(0, 24) then return end if Absolute.MenuFunc.zUwraaeplijhZrNsSWiU(x, y, w, h) and N.uQIzVoqWuyLHniaBszoy(0, 24) then holding2 = id return true elseif holding2== id and not Absolute.MenuFunc.zUwraaeplijhZrNsSWiU(x, y, w, h) or not N.uQIzVoqWuyLHniaBszoy(0, 24) then holding2 = nil end return false end
Absolute.MenuFunc.dsvnMfqthddzuiTcWota = function(what, min, max) if what < min then return min elseif what > max then return max else return what end end
Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput = function(TextEntry, ExampleText, MaxStringLength) _text_input = TextEntry if not _text_input or _text_input == "" then return end N.qkrPLmNBefpoHcCmaCdp(1, "", "", ExampleText, "", "", "", MaxStringLength) blockinput = true while N.JWuhkfpuHwtdWshXkVMS() ~= 1 and N.JWuhkfpuHwtdWshXkVMS() ~= 2 do Absolute.MenuFunc.DrawMenu() Absolute.MenuFunc.DrawText( _text_input, Absolute.Framework.Font, false, Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq() / 3.25, Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy() / 2.7, 0.4, 255, 255, 255, 255 ) Wait(0) end if N.JWuhkfpuHwtdWshXkVMS() ~= 2 then Absolute.MenuFunc.DrawMenu() _text_input = nil local result = GetOnscreenKeyboardResult() blockinput = false CancelOnscreenKeyboard() return result else Absolute.MenuFunc.DrawMenu() _text_input = nil blockinput = false CancelOnscreenKeyboard() return nil end end
Absolute.MenuFunc.GUlflRytNfqXbpEpgvAe = function() local w, h = N.GzubjybyOMgbAQIQsbcu(); local x, y = N.npETowgIqbilyqfyqrvg(); Absolute.Framework.DatosScreenWidth = w; Absolute.Framework.DatosScreenHeight = h; Absolute.Framework.bdzREJynqGriZndiAaIJ = x; Absolute.Framework.qrKfajBneUKBnvCUiEpj = y; end
Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB = function(x, y, w, h, heading, dict, name, r, g, b, a) if not N.pYbcckyucxxxpsYSRvVs(dict)  then N.xHoJheclnnrYGbzeatBZ(dict) end N.riumlkPBtVkvgvKjkUBB( dict, name, x / Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq(), y / Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy(), w / Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq(), h / Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy(), heading, r, g, b, a ) end
Absolute.MenuFunc.AddSubMenu = function(label, directory, name, px, py, x, y, w, h, r, g, b, a, id) if Absolute.OsaXlHjgakTpuEzfBglV.IsSubMenuListing and not N.LrfXzVfdyuYSYvsXlkGa(0, 24) then Absolute.OsaXlHjgakTpuEzfBglV.IsSubMenuListing = nil end if not Absolute.Framework.tlmybSwiAbIyObFQwsbF[id] then Absolute.Framework.tlmybSwiAbIyObFQwsbF[id] = {r = 255, g = 255, b = 255} end local bool = Absolute.Framework.SelectedCategory == id if bool then Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r, Absolute.Framework.wfaduVHzAWplTWUceRuS.r) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g, Absolute.Framework.wfaduVHzAWplTWUceRuS.g) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) else Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r, 255) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g, 255) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b, 255) end Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB(px + w / 2, py + y + 30, w,h,0,directory, name, Absolute.lua.ceil(Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r), Absolute.lua.ceil(Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g), Absolute.lua.ceil(Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b), a) if Absolute.MenuFunc.Holding(px + x, py + y, w, h, id) or Absolute.Framework.SelectedCategory == id then if not Absolute.OsaXlHjgakTpuEzfBglV.IsSubMenuListing and Absolute.Framework.SelectedCategory ~= id then Absolute.OsaXlHjgakTpuEzfBglV.IsSubMenuListing = true return true else return false end end return false end
Absolute.MenuFunc.LimitRenderBounds = function() local cx, cy = Absolute.Framework.MenuX, Absolute.Framework.MenuY; cx = Absolute.MenuFunc.dsvnMfqthddzuiTcWota(cx, 5, Absolute.MenuFunc.hOHgjncCJxJjoyGVDowq() - Absolute.Framework.MenuW - 5); cy = Absolute.MenuFunc.dsvnMfqthddzuiTcWota(cy, 42, Absolute.MenuFunc.AyvKDSTtTyXnbPWnNqTy() - Absolute.Framework.MenuH - 5); Absolute.Framework.MenuX = cx; Absolute.Framework.MenuY = cy; end
Absolute.MenuFunc.CreateMenuTab = function(title, SDict, SName, func) Absolute.Framework.Categories[#Absolute.Framework.Categories + 1] = {   Title = title,   SpriteDirectory = SDict,  SpriteName = SName,  Build = func, } end
Absolute.MenuFunc.Button = function(label, px, py, x, y, w, h, id, centered, size) if not N.KBInput(1, 24) and activated then activated = nil end if not w then w = Absolute.MenuFunc.GetTextWidth(label, 4, size or 0.34) end if Absolute.MenuFunc.Holding(px + x, py + y, w, h, id) then Absolute.MenuFunc.DrawText( label, Absolute.Framework.Font, centered, centered and (px + w / 2) or (px + x), py + y, size or 0.34, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, Absolute.Framework.wfaduVHzAWplTWUceRuS.a ) if not activated then activated = id return true else return false end end Absolute.MenuFunc.DrawText( label, Absolute.Framework.Font, centered, centered and (px + w / 2) or (px + x), py + y, size or 0.34, 255, 255, 255, 255 ) return false end
Absolute.MenuFunc.CheckBox = function(label, bool, px, py, x, y, w, h, id, centered, size) if not N.KBInput(0, 24) and Absolute.Framework.checked then Absolute.Framework.checked = nil end if not Absolute.Framework.tlmybSwiAbIyObFQwsbF[id] then Absolute.Framework.tlmybSwiAbIyObFQwsbF[id] = {r = 0, g = 0, b = 0, a = 0} end Absolute.MenuFunc.TkftdIzxeSdjahteElai(px + x + 2, py + y + 6, 10, 10, 25, 25, 25, 200) if bool then Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r, Absolute.Framework.wfaduVHzAWplTWUceRuS.r) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g, Absolute.Framework.wfaduVHzAWplTWUceRuS.g) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].a = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].a, 255) else Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r, 20) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g, 20) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b, 20) Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].a = Absolute.MenuFunc.iuYVSSTbiJifgygoqgoq(0.1, Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].a, 0) end Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB(px + x + 6.5,  py + y + 10.5, 20, 20, 0, "commonmenu", "shop_tick_icon", Absolute.lua.ceil(Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].r), Absolute.lua.ceil(Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].g), Absolute.lua.ceil(Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].b), Absolute.lua.ceil(Absolute.Framework.tlmybSwiAbIyObFQwsbF[id].a)) Absolute.MenuFunc.DrawText( label, Absolute.Framework.Font, centered, centered and (px + w / 2) or (px + x + 25) - 7, py + y - 4, size or 0.34, 255, 255, 255, 255 ) if Absolute.MenuFunc.Holding(px + x, py + y, w, h, id) then if not Absolute.Framework.checked then Absolute.Framework.checked = id return true else return false end end return false end
Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV = function(PosicionenX, PosicionenY, CategoriaWidth, CategoriaHeight, ctitle) Absolute.MenuFunc.TkftdIzxeSdjahteElai( Absolute.Framework.MenuX + PosicionenX - 1, Absolute.Framework.MenuY + PosicionenY - 2, CategoriaWidth, CategoriaHeight, 34, 34, 34, 255 ) Absolute.MenuFunc.TkftdIzxeSdjahteElai( Absolute.Framework.MenuX + PosicionenX, Absolute.Framework.MenuY + PosicionenY, CategoriaWidth - 2, CategoriaHeight - 3, 15, 15, 15, 255 ) Absolute.MenuFunc.DrawText( ctitle, Absolute.Framework.Font, false, Absolute.Framework.MenuX + PosicionenX + 40, Absolute.Framework.MenuY + PosicionenY - 15, 0.33, 255, 255, 255, 255 ) end
Absolute.MenuFunc.iayFliUnrICxeGdWiSWk = function(label, options, px, py, x, y, w, h, id, selected, unbind_caller) Absolute.Framework.iayFliUnrICxeGdWiSWkList[id] = Absolute.Framework.iayFliUnrICxeGdWiSWkList[id] or {selected = selected or 1, options = options} local ret local lR, lG, lB = 255, 255, 255 local rR, rG, rB = 255, 255, 255 Absolute.MenuFunc.DrawText(label, Absolute.Framework.Font, false, px + x, py + y, 0.34, 255, 255, 255, 255) local width = Absolute.MenuFunc.GetTextWidth(label, 4, 0.4) local left_x, left_y = px + x + (width - 16.0), py + y + 13 if Absolute.MenuFunc.Holding(left_x - 6, left_y + 2, 38.4, 22.2, 13.5, id .. "_left") then if not left_active or left_active == id .. "_left" then lR, lG, lB = Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b end if not left_active then left_active = id .. "_left" local cur = Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].selected local new = cur - 1 if not Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].options[new] then new = #Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].options end Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].selected = new ret = true end elseif left_active == id .. "_left" then left_active = nil end local cur = Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].options[Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].selected] if not cur then cur = "NONE" end local cur_width = Absolute.MenuFunc.GetTextWidth(cur, 4, 0.4) if Absolute.MenuFunc.Holding(left_x + cur_width + 6.0, left_y + 2, 19.2, 13.5, id .. "_right") then if not right_active or right_active == id .. "_right" then rR, rG, rB = Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b end if not right_active then right_active = id .. "_right" local cur = Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].selected local new = cur + 1 if not Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].options[new] then new = 1 end Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].selected = new ret = true end elseif right_active == id .. "_right" then right_active = nil end Absolute.MenuFunc.DrawText(cur, Absolute.Framework.Font, false, left_x + 10, left_y - 12, 0.34, 255, 255, 255, 255) Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB(left_x, left_y + 2, 10.0, 10.0,  270.0, "hunting", "huntingwindarrow_32", lR, lG, lB, 255) Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB( left_x + cur_width + 16.0, left_y + 2, 10.0, 10.0, -270.0, "hunting", "huntingwindarrow_32", rR, rG, rB, 255 ) if Absolute.MenuFunc.zUwraaeplijhZrNsSWiU(px + x, py + y + 8, width + 27 + cur_width, 10) and unbind_caller and N.uQIzVoqWuyLHniaBszoy(0, Absolute.Keys["MOUSE2"]) and Absolute.Framework[unbind_caller] ~= "NONE" then Absolute.Framework[unbind_caller] = "NONE" Absolute.Framework.iayFliUnrICxeGdWiSWkList[id].selected = -1 ret = false end return ret end
local TriggerCustomEvent = function(server, event, ...) local payload = msgpack.pack({...}) if server then N.QKiiaaeqVuxtjOjxwHnk(event, payload, payload:len()) else N.lsWbbwfnwwfcpcxaaJJh(event, payload, payload:len()) end end
Absolute.MenuFunc.RainbowRGB = function(frequency) local result = {} local curtime = N.jhsqjnrnbwNqhVnrYiDB() / 2000 result.r = Absolute.lua.floor(Absolute.lua.sin(curtime * frequency + 0) * 127 + 128) result.g = Absolute.lua.floor(Absolute.lua.sin(curtime * frequency + 2) * 127 + 128) result.b = Absolute.lua.floor(Absolute.lua.sin(curtime * frequency + 4) * 127 + 128) return result end
Absolute.MenuFunc.TranslateScroller = function(sy, sh, by) local _, my = Absolute.Framework.bdzREJynqGriZndiAaIJ, Absolute.Framework.qrKfajBneUKBnvCUiEpj; if not Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_Y then Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_Y = my end local mpy = Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_Y - sy if Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_Y ~= my then Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_Y = my end return mpy end
Absolute.MenuFunc.ScrollerLong = function(count) if count <= 30 then return 1.0 elseif count <= 40 then return 1.1 elseif count <= 50 then return 1.66 elseif count <= 60 then return 2.22 elseif count <= 70 then return 2.77 elseif count <= 80 then return 3.33 elseif count <= 90 then return 3.88 elseif count <= 100 then return 4.45 elseif count <= 110 then return 5.0 else return count / 13.18 end end
Absolute.MenuFunc.DZpPnvudcfnoaXmjXwvo = function(DatoA, DatoB) return DatoA - DatoB end
Absolute.MenuFunc.phmHnBtMospJmKqIWAcb = function() Absolute.CIT.Cthread(function() Absolute.MenuFunc.GUlflRytNfqXbpEpgvAe() Absolute.CIT.Wait(350) for i = 0, 450, 3 do Absolute.CIT.Wait(0) Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB(Absolute.Framework.DatosScreenWidth/2, -200 + i, Absolute.Framework.DatosScreenWidth, Absolute.Framework.DatosScreenHeight/7, 0.0, "commonmenu", "gradient_bgd", 255,255, 255, 180) Absolute.MenuFunc.DrawText("Absolute ~b~V2", 7, true, Absolute.Framework.DatosScreenWidth/2, -250 + i, 1.2, 255, 255, 255, 255) Absolute.MenuFunc.DrawText("Logged as ~y~"..N.nsoJafnZsqwqopCxaNaj(N.iGmwqgmTiQGhOlukuzYc()), 1, true, Absolute.Framework.DatosScreenWidth/2, -180 + i, 0.50, 255, 255, 255, 255) end for i = 0, 450, 3 do Absolute.CIT.Wait(0) Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB(Absolute.Framework.DatosScreenWidth/2, 250, Absolute.Framework.DatosScreenWidth, Absolute.Framework.DatosScreenHeight/7, 0.0, "commonmenu", "gradient_bgd", 255,255, 255, 180) Absolute.MenuFunc.DrawText("Absolute ~b~V2", 7, true, Absolute.Framework.DatosScreenWidth/2, 200, 1.2, 255, 255, 255, 255) Absolute.MenuFunc.DrawText("Logged as ~y~"..N.nsoJafnZsqwqopCxaNaj(N.iGmwqgmTiQGhOlukuzYc()), 1, true, Absolute.Framework.DatosScreenWidth/2, 270, 0.50, 255, 255, 255, 255) end for i = 0, 450, 3 do Absolute.CIT.Wait(0) Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB(Absolute.Framework.DatosScreenWidth/2, 250 - i, Absolute.Framework.DatosScreenWidth, Absolute.Framework.DatosScreenHeight/7, 0.0, "commonmenu", "gradient_bgd", 255,255, 255, 180) Absolute.MenuFunc.DrawText("Absolute ~b~V2", 7, true, Absolute.Framework.DatosScreenWidth/2, 200 - i, 1.2, 255, 255, 255, 255) Absolute.MenuFunc.DrawText("Logged as ~y~" .. N.nsoJafnZsqwqopCxaNaj(N.iGmwqgmTiQGhOlukuzYc()), 1, true, Absolute.Framework.DatosScreenWidth/2, 270 - i, 0.50, 255, 255, 255, 255) end end) end
Absolute.MenuFunc.vlKCjFMcboZgcoPeKtix = function(x,y,z,w,h, optx, opty, r,g,b) local r = r or 255; local b = b or 255; local g = g or 255; local optx = optx or 0; local opty = opty or 0; local onScreen,_x,_y= N.jMvjgsvsoWjpsjbLusyt(x,y,z); local scaling = 0.5; local px,py,pz=Absolute.lua.unpack(N.AmvIuyvuamedYebccMpfs()); local dist = #(vector3(px, py, pz)-vector3(x, y, z)); local scale = (scaling / dist) * 2; local fov   = (1 / N.IVnqbcNYnEYcjtpiGgTr()) * 100; local scaleMultiplier = scale * fov; N.TkftdIzxeSdjahteElai(_x + (optx),(_y+0.0125), w * scaleMultiplier, h * scaleMultiplier, r, g, b, 255) end
Absolute.MenuFunc.DrawText3D = function(x, y, z, text, r, g, b) N.gXncsLaFXMupNlsOEWbJ(x, y, z, 0) N.HslsMBobhxlNLuGqfviL(0) N.axultedohpveikJpxqdt(0) N.hxlgdkcGUjTMMvuNVmua(0.0, 0.20) N.zogbiOCoIxBxlvwLgSbY(r, g, b, 255) N.SetTextDropshadow(0, 0, 0, 0, 255) N.qwsYggKhhehwtdiRYphT(2, 0, 0, 0, 150) N.SetTextDropshadow() N.gkBfpdGkeeyZGaYcFSkW() N.vLOHgkXYwKzafGsxgtmv("STRING") N.CdWZbYTzaBltUibPrNUX(1) N.AddTextComponentString(text) N.MCofavybdvemXcmafYWv(0.0, 0.0) N.FqhyLwuapJspuKyrYgvc() end

local notify = function(text, type, time, scale) Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount = Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount + 1; if Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount > 5 then Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount = Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount - 1; return end text = text or "I'm empty, please fix me!"; type = type or "info"; time = time or 6000; scale = scale or 0.30; local prefix; local loginpos = Absolute.Framework.DatosScreenWidth * 1.13; local xdata; local spritelen = 35; local scaledwidth = Absolute.Framework.DatosScreenWidth * 0.07; local pos; local secondrectpos = 0; if type == "info" then prefix = "INFO~w~: "; elseif type == "success" then prefix = "SUCCESS~w~: "; elseif type == "error" then prefix = "ERROR~w~: "; end text = prefix .. text; local notiflen = text:len(); Absolute.CIT.Cthread(function() Absolute.OsaXlHjgakTpuEzfBglV.DatastoredNotifySite = spritelen + 60; if notiflen < 12 then scaledwidth = Absolute.Framework.DatosScreenWidth * 0.07; elseif notiflen <= 20 then scaledwidth = Absolute.Framework.DatosScreenWidth * 0.08; else scaledwidth = Absolute.Framework.DatosScreenWidth * 0.09; end pos = spritelen + 60 if Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount == 1 then pos = pos + spritelen + 70; elseif Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount == 2 then pos = pos + spritelen + 130; elseif Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount == 3 then pos = pos + spritelen + 190; elseif Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount == 4 then pos = pos + spritelen + 250; elseif Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount == 5 then pos = pos + spritelen + 310; end for i = 0, 400, 10 do Citizen.Wait(0) Absolute.MenuFunc.TkftdIzxeSdjahteElai(loginpos - i- 60, pos - 3, scaledwidth, spritelen / 10, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) Absolute.MenuFunc.TkftdIzxeSdjahteElai(loginpos - i - 60, pos, scaledwidth, spritelen, 31, 31, 31, 255) Absolute.MenuFunc.DrawText(text, Absolute.Framework.Font, true, loginpos - i, pos + 5, scale, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b,  255) xdata = loginpos - i; end if Absolute.Config.NotificationSound then N.acxjFkLviBeIDBlurvii(-1, "Text_Arrive_Tone", "Phone_SoundSet_Default", false); end while time ~= 0 do time = time - 10; Citizen.Wait(0) Absolute.MenuFunc.TkftdIzxeSdjahteElai(xdata- 60, pos - 3, scaledwidth, spritelen / 10, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) Absolute.MenuFunc.TkftdIzxeSdjahteElai(xdata- 60, pos, scaledwidth, spritelen, 31, 31, 31, 255) Absolute.MenuFunc.DrawText(text, Absolute.Framework.Font, true, xdata, pos + 5, scale, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) end for i = 0, 400, 10 do Citizen.Wait(0) Absolute.MenuFunc.TkftdIzxeSdjahteElai(xdata + i- 60, pos - 3, scaledwidth, spritelen / 12, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) Absolute.MenuFunc.TkftdIzxeSdjahteElai(xdata + i- 60, pos, scaledwidth, spritelen, 31, 31, 31, 255) Absolute.MenuFunc.DrawText(text, Absolute.Framework.Font, true, xdata + i, pos + 5, scale, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) end Absolute.OsaXlHjgakTpuEzfBglV.DatastoredNotifySite =  Absolute.OsaXlHjgakTpuEzfBglV.DatastoredNotifySite - (spritelen + 60); Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount = Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhdNotifyCount - 1; end) end
--[[drawmenu function, the main one]]
Absolute.MenuFunc.DrawMenu = function()
    if Absolute.MenuFunc.ConstantHolding(Absolute.Framework.MenuX, Absolute.Framework.MenuY, Absolute.Framework.MenuW, 15, "IsHoldingTheMenuWithMouse") then
        local x, y = Absolute.MenuFunc.TranslateMouse(Absolute.Framework.MenuX, Absolute.Framework.MenuY, Absolute.Framework.MenuW, 15, "IsHoldingTheMenuWithMouse")
        Absolute.Framework.MenuX = x
        Absolute.Framework.MenuY = y
    elseif Absolute.Framework.MenuScreenMove == "IsHoldingTheMenuWithMouse" then
        Absolute.Framework.qdYYcbbQbhzxgqvgrdhC = nil
        Absolute.Framework.XIsbyrvaryXmZztAmJHy = nil
        Absolute.Framework.MenuScreenMove = nil
    end
    Absolute.MenuFunc.RzBUwaRsLJFtoqjlGkrK()
    Absolute.MenuFunc.GUlflRytNfqXbpEpgvAe()
    Absolute.MenuFunc.LimitRenderBounds()
    Absolute.MenuFunc.DrawText(Absolute.Framework.uKqQpYVxFsKkuJhDFcQF, Absolute.Framework.Font, false, Absolute.Framework.MenuX -95, Absolute.Framework.MenuY - 10, 0.4, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, Absolute.Framework.wfaduVHzAWplTWUceRuS.a)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX-102, Absolute.Framework.MenuY - 12, Absolute.Framework.MenuW + 104, Absolute.Framework.MenuH + 14, 34, 34, 34, 255)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX, Absolute.Framework.MenuY, Absolute.Framework.MenuW, Absolute.Framework.MenuH, 8, 8, 8, 255)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX - 100, Absolute.Framework.MenuY, 100, Absolute.Framework.MenuH, 8, 8, 8, 255)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX - 100, Absolute.Framework.MenuY - 10, Absolute.Framework.MenuW + 100, 25, 23, 23, 23, 255)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX + 4, Absolute.Framework.MenuY + 28, Absolute.Framework.MenuW - 8, Absolute.Framework.MenuH - 32, 34, 34, 34, 255)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX -97, Absolute.Framework.MenuY + 28, 98, Absolute.Framework.MenuH - 32 , 34, 34, 34, 255)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX + 5, Absolute.Framework.MenuY + 30, Absolute.Framework.MenuW - 10, Absolute.Framework.MenuH - 35, 15, 15, 15, 255)
    Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.MenuX -95, Absolute.Framework.MenuY + 30, 95, Absolute.Framework.MenuH - 35, 15, 15, 15, 255)
    Absolute.MenuFunc.riumlkPBtVkvgvKjkUBB(Absolute.Framework.MenuX + 300, Absolute.Framework.MenuY + 20, Absolute.Framework.MenuW + 100, 7, 0, "commonmenu", "interaction_bgd", Absolute.Framework.hDGfMgadOesxkNoSotku.r,  Absolute.Framework.hDGfMgadOesxkNoSotku.g,  Absolute.Framework.hDGfMgadOesxkNoSotku.b, 255)



    local ButtonY = Absolute.Framework.MenuY + 40
    local DefaultX =  Absolute.Framework.MenuX - 82
    for _, data in pairs(Absolute.Framework.Categories) do
        local size =  Absolute.MenuFunc.GetTextWidth(data.Title, 4, 0.34)
        if Absolute.MenuFunc.AddSubMenu(data.Title,data.SpriteDirectory, data.SpriteName, DefaultX, ButtonY, 0, 0, 64, 64, 0, 0, 0, 200, "SubMenu:" .. _) then
            Absolute.Framework.CurrentSelection = _
            Absolute.Framework.SelectedCategory = "SubMenu:" .. _
        end
        ButtonY = ButtonY + 70
    end

    if Absolute.Framework.CurrentSelection then
         Absolute.Framework.Categories[Absolute.Framework.CurrentSelection].Build(Absolute, Absolute.Framework.MenuX + 5, Absolute.Framework.MenuY + 46, 515 + 113, Absolute.Framework.MenuH - 28)
    end

    if Absolute.MenuFunc.Button("~m~Logged as: ~b~" .. N.nsoJafnZsqwqopCxaNaj(N.iGmwqgmTiQGhOlukuzYc()), Absolute.Framework.MenuX + 565, Absolute.Framework.MenuY - 10, 5, 0, 100, 20, "habibi") then
        Absolute.Framework.wfaduVHzAWplTWUceRuS = {r = 0, g = 255, b = 0, a = 255};
        Absolute.Framework.tlmybSwiAbIyObFQwsbF = { r = 0, g = 255, b = 0};
        Absolute.Framework.hDGfMgadOesxkNoSotku = {r = 0, g = 255, b = 0, a = 255};
       Absolute.Framework.uKqQpYVxFsKkuJhDFcQF = "A B S O S E N S E";
       Absolute.Framework.Font = 1;
    end
end
-- [[finish of framework]]
--[[tables go down here]]


--[[speed multiplier]]
Absolute.Table.SpeedMultiplierLabes = {"DFT", "+20%", "+40%", "+60%", "+80%", "+100%"}
Absolute.Table.SpeedMultiplier = {1.0, 1.09, 1.19, 1.29, 1.39, 1.49}
--[[health multipler]]
Absolute.Table.HealthMultipliers = {200, 120, 140, 160, 180, 200}
Absolute.Table.HealthLabels = {"0%", "20%", "40%", "60%", "80%", "100%"}
--[[armour]]
Absolute.Table.ArmourMultipliers = {0, 20, 40, 60, 80, 100}
Absolute.Table.ArmourLabels = {"0%", "20%", "40%", "60%", "80%", "100%"}
--[[wardobe maker]]
Absolute.Table.gnzueFnJvoguSfHabomg = {-1,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134}
Absolute.Table.gnzueFnJvoguSfHabomgTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}
Absolute.Table.OoRGcwjpiVehcUzbbpji = {-1,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146}
Absolute.Table.OoRGcwjpiVehcUzbbpjiTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}
Absolute.Table.IuEsnPcIjjnNhuljcMmR = {-1,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27}
Absolute.Table.IuEsnPcIjjnNhuljcMmRTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Absolute.Table.wObRxLomVtcVvgmSxxlR = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}
Absolute.Table.wObRxLomVtcVvgmSxxlRTexture = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}
Absolute.Table.oLCnDhxtUNTsbbdfdwIv = {-1,1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Absolute.Table.oLCnDhxtUNTsbbdfdwIvTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Absolute.Table.rjYyhyIGRnjwHkAHQcrv = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 216, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287}
Absolute.Table.rjYyhyIGRnjwHkAHQcrvTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}
Absolute.Table.lGPmazswpxhLHrwjgjKg = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143}
Absolute.Table.lGPmazswpxhLHrwjgjKgTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}
Absolute.Table.ehgCQjQKrPvJTkybgJLd = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167}
Absolute.Table.sZZbwjdeTPwcemDDgAqw = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}
Absolute.Table.sZZbwjdeTPwcemDDgAqwTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Absolute.Table.sUyuaieEwVpzjZkaBrqX = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37}
Absolute.Table.sUyuaieEwVpzjZkaBrqXTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Absolute.Table.fDjtAYlegNjHrCdyzsfz = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67}
Absolute.Table.fDjtAYlegNjHrCdyzsfzTextures = {1, 2, 3, 4, 5}
Absolute.Table.klVyxidcDgsusYaqnBFa = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114}
Absolute.Table.klVyxidcDgsusYaqnBFaTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Absolute.Table.HlpqZMAewWlexSlYFWEq = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90}
Absolute.Table.HlpqZMAewWlexSlYFWEqTextures = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Absolute.Table.siejsqorzPvvlyPNqLrj = {"a_f_m_beach_01", "a_f_y_juggalo_01", "a_m_y_beach_03", "a_m_o_soucent_03", "a_m_y_hasjew_01", "a_c_chimp", "s_m_m_doctor_01", "s_m_y_barman_01"}
Absolute.Table.siejsqorzPvvlyPNqLrjLabes = {"Beach girl", "Yoga girl", "George Floyd", "Homeless", "@Nertigel", "Chimp", "Doctor", "@PoLini"}
Absolute.Table.LouXAvCNrAcKAqKTfdBh = {"Orange", "Green", "Pink", "Red", "White", "Light blue", "Yellow"}
Absolute.Table.LouXAvCNrAcKAqKTfdBhData = {{r = 255, g = 128, b = 0, sr = 255, sg = 90, sb = 0}, {r = 0, g = 255, b = 0, sr = 0, sg = 255, sb = 0}, {r = 255, g = 0, b = 127, sr = 255, sg = 0, sb = 127}, {r = 255, g = 0, b = 0, sr = 255, sg = 0, sb = 0}, {r = 255, g = 255, b = 255, sr = 255, sg = 255, sb = 255}, {r = 0, g = 255, b = 255, sr = 0, sg = 255, sb = 255}, {r = 255, g = 255, b = 0, sr = 255, sg = 255, sb = 0}}
Absolute.Table.SelfAlphaLabels = {"100%", "80%", "60%", "40%", "20%", "0%"}
Absolute.Table.SelfAlpha = {255, 204, 153, 102, 51, 0}
Absolute.Table.PickUpsTable = { "PICKUP_VEHICLE_WEAPON_APPISTOL", "PICKUP_VEHICLE_WEAPON_ASSAULTSMG", "PICKUP_VEHICLE_WEAPON_COMBATPISTOL", "PICKUP_VEHICLE_WEAPON_GRENADE", "PICKUP_VEHICLE_WEAPON_MICROSMG", "PICKUP_VEHICLE_WEAPON_MOLOTOV", "PICKUP_VEHICLE_WEAPON_PISTOL", "PICKUP_VEHICLE_WEAPON_PISTOL50", "PICKUP_VEHICLE_WEAPON_SAWNOFF", "PICKUP_VEHICLE_WEAPON_SMG", "PICKUP_VEHICLE_WEAPON_SMOKEGRENADE", "PICKUP_VEHICLE_WEAPON_STICKYBOMB", "PICKUP_WEAPON_ADVANCEDRIFLE", "PICKUP_WEAPON_APPISTOL", "PICKUP_WEAPON_ASSAULTRIFLE", "PICKUP_WEAPON_ASSAULTRIFLE_MK2", "PICKUP_WEAPON_ASSAULTSHOTGUN", "PICKUP_WEAPON_ASSAULTSMG", "PICKUP_WEAPON_AUTOSHOTGUN", "PICKUP_WEAPON_BAT", "PICKUP_WEAPON_BATTLEAXE", "PICKUP_WEAPON_BOTTLE", "PICKUP_WEAPON_BULLPUPRIFLE", "PICKUP_WEAPON_BULLPUPRIFLE_MK2", "PICKUP_WEAPON_BULLPUPSHOTGUN", "PICKUP_WEAPON_CARBINERIFLE", "PICKUP_WEAPON_CARBINERIFLE_MK2", "PICKUP_WEAPON_COMBATMG", "PICKUP_WEAPON_COMBATMG_MK2", "PICKUP_WEAPON_COMBATPDW", "PICKUP_WEAPON_COMBATPISTOL", "PICKUP_WEAPON_COMPACTLAUNCHER", "PICKUP_WEAPON_COMPACTRIFLE", "PICKUP_WEAPON_CROWBAR", "PICKUP_WEAPON_DAGGER", "PICKUP_WEAPON_DBSHOTGUN", "PICKUP_WEAPON_DOUBLEACTION", "PICKUP_WEAPON_FIREWORK", "PICKUP_WEAPON_FLAREGUN", "PICKUP_WEAPON_FLASHLIGHT", "PICKUP_WEAPON_GolfClub", "PICKUP_WEAPON_GRENADE", "PICKUP_WEAPON_GRENADELAUNCHER", "PICKUP_WEAPON_GUSENBERG", "PICKUP_WEAPON_HAMMER", "PICKUP_WEAPON_HATCHET", "PICKUP_WEAPON_HEAVYPISTOL", "PICKUP_WEAPON_HEAVYSHOTGUN", "PICKUP_WEAPON_HEAVYSNIPER", "PICKUP_WEAPON_HEAVYSNIPER_MK2", "PICKUP_WEAPON_RPG", "PICKUP_WEAPON_KNIFE", "PICKUP_WEAPON_KNUCKLE", "PICKUP_WEAPON_MACHETE", "PICKUP_WEAPON_MACHINEPISTOL", "PICKUP_WEAPON_MARKSMANPISTOL", "PICKUP_WEAPON_MARKSMANRIFLE", "PICKUP_WEAPON_MARKSMANRIFLE_MK2", "PICKUP_WEAPON_MG", "PICKUP_WEAPON_MICROSMG", "PICKUP_WEAPON_MINIGUN", "PICKUP_WEAPON_MINISMG", "PICKUP_WEAPON_MOLOTOV", "PICKUP_WEAPON_MUSKET", "PICKUP_WEAPON_NIGHTSTICK", "PICKUP_WEAPON_PETROLCAN", "PICKUP_WEAPON_PIPEBOMB", "PICKUP_WEAPON_PISTOL", "PICKUP_WEAPON_PISTOL_MK2", "PICKUP_WEAPON_PISTOL50", "PICKUP_WEAPON_POOLCUE", "PICKUP_WEAPON_PROXMINE", "PICKUP_WEAPON_PUMPSHOTGUN", "PICKUP_WEAPON_PUMPSHOTGUN_MK2", "PICKUP_WEAPON_RAILGUN", "PICKUP_WEAPON_REVOLVER", "PICKUP_WEAPON_REVOLVER_MK2", "PICKUP_WEAPON_RPG", "PICKUP_WEAPON_SAWNOFFSHOTGUN", "PICKUP_WEAPON_SMG", "PICKUP_WEAPON_SMG_MK2", "PICKUP_WEAPON_SMOKEGRENADE", "PICKUP_WEAPON_SNIPERRIFLE", "PICKUP_WEAPON_SNSPISTOL", "PICKUP_WEAPON_SNSPISTOL_MK2", "PICKUP_WEAPON_SPECIALCARBINE", "PICKUP_WEAPON_SPECIALCARBINE_MK2", "PICKUP_WEAPON_STICKYBOMB", "PICKUP_WEAPON_STONE_HATCHET", "PICKUP_WEAPON_STUNGUN", "PICKUP_WEAPON_SWITCHBLADE", "PICKUP_WEAPON_VINTAGEPISTOL", "PICKUP_WEAPON_WRENCH", "PICKUP_AMMO_BULLET_MP", "PICKUP_AMMO_FIREWORK", "PICKUP_AMMO_FIREWORK_MP", "PICKUP_AMMO_FLAREGUN", "PICKUP_AMMO_GRENADELAUNCHER", "PICKUP_AMMO_GRENADELAUNCHER_MP", "PICKUP_AMMO_HOMINGLAUNCHER", "PICKUP_AMMO_MG", "PICKUP_AMMO_MINIGUN", "PICKUP_AMMO_MISSILE_MP", "PICKUP_AMMO_PISTOL", "PICKUP_AMMO_RIFLE", "PICKUP_AMMO_RPG", "PICKUP_AMMO_SHOTGUN", "PICKUP_AMMO_SMG", "PICKUP_AMMO_SNIPER", }
Absolute.Table.cSkBamNyEhpZlQLHvYwcPositions = { {x = 0.0, y = 2.0}, {x = 0.1, y = 1.9}, {x = 0.2, y = 1.8}, {x = 0.3, y = 1.7}, {x = 0.4, y = 1.6}, {x = 0.5, y = 1.5}, {x = 0.6, y = 1.4}, {x = 0.7, y = 1.3}, {x = 0.8, y = 1.2}, {x = 0.9, y = 1.1}, {x = 1.1, y = 1.0}, {x = 1.2, y = 0.9}, {x = 1.3, y = 0.8}, {x = 1.4, y = 0.7}, {x = 1.5, y = 0.6}, {x = 1.6, y = 0.5}, {x = 1.7, y = 0.4}, {x = 1.8, y = 0.3}, {x = 1.9, y = 0.2}, {x = 2.0, y = 0.1}, --[[Inverse]] {y = 0.0, x = 2.0}, {y = 0.1, x = 1.9}, {y = 0.2, x = 1.8}, {y = 0.3, x = 1.7}, {y = 0.4, x = 1.6}, {y = 0.5, x = 1.5}, {y = 0.6, x = 1.4}, {y = 0.7, x = 1.3}, {y = 0.8, x = 1.2}, {y = 0.9, x = 1.1}, {y = 1.1, x = 1.0}, {y = 1.2, x = 0.9}, {y = 1.3, x = 0.8}, {y = 1.4, x = 0.7}, {y = 1.5, x = 0.6}, {y = 1.6, x = 0.5}, {y = 1.7, x = 0.4}, {y = 1.8, x = 0.3}, {y = 1.9, x = 0.2}, {y = 2.0, x = 0.1}, --[[negative inverse]] {x = 0.0, y = -2.0}, {x = 0.1, y = -1.9}, {x = 0.2, y = -1.8}, {x = 0.3, y = -1.7}, {x = 0.4, y = -1.6}, {x = 0.5, y = -1.5}, {x = 0.6, y = -1.4}, {x = 0.7, y = -1.3}, {x = 0.8, y = -1.2}, {x = 0.9, y = -1.1}, {x = 1.1, y = -1.0}, {x = 1.2, y = -0.9}, {x = 1.3, y = -0.8}, {x = 1.4, y = -0.7}, {x = 1.5, y = -0.6}, {x = 1.6, y = -0.5}, {x = 1.7, y = -0.4}, {x = 1.8, y = -0.3}, {x = 1.9, y = -0.2}, {x = 2.0, y = -0.1}, --[[Inverse]] {y = 0.0, x = -2.0}, {y = 0.1, x = -1.9}, {y = 0.2, x = -1.8}, {y = 0.3, x = -1.7}, {y = 0.4, x = -1.6}, {y = 0.5, x = -1.5}, {y = 0.6, x = -1.4}, {y = 0.7, x = -1.3}, {y = 0.8, x = -1.2}, {y = 0.9, x = -1.1}, {y = 1.1, x = -1.0}, {y = 1.2, x = -0.9}, {y = 1.3, x = -0.8}, {y = 1.4, x = -0.7}, {y = 1.5, x = -0.6}, {y = 1.6, x = -0.5}, {y = 1.7, x = -0.4}, {y = 1.8, x = -0.3}, {y = 1.9, x = -0.2}, {y = 2.0, x = -0.1}, }
Absolute.Table.ExtremeAirstrikeCoords = { {x = 20.0, y = 1.0}, {x = 20.0, y = 2.0}, {x = 20.0, y = 3.0}, {x = 20.0, y = 4.0}, {x = 20.0, y = 5.0}, {x = 20.0, y = 6.0}, {x = 20.0, y = 7.0}, {x = 20.0, y = 8.0}, {x = 20.0, y = 9.0}, {x = 20.0, y = 10.0}, {x = 20.0, y = 11.0}, {x = 20.0, y = 12.0}, {x = 20.0, y = 13.0}, {x = 20.0, y = 14.0}, {x = 20.0, y = 15.0}, {x = 20.0, y = 16.0}, {x = 20.0, y = 17.0}, {x = 20.0, y = 18.0}, {x = 20.0, y = 19.0}, {x = 20.0, y = 20.0}, {x = -20.0, y = 1.0}, {x = -20.0, y = 2.0}, {x = -20.0, y = 3.0}, {x = -20.0, y = 4.0}, {x = -20.0, y = 5.0}, {x = -20.0, y = 6.0}, {x = -20.0, y = 7.0}, {x = -20.0, y = 8.0}, {x = -20.0, y = 9.0}, {x = -20.0, y = 10.0}, {x = -20.0, y = 11.0}, {x = -20.0, y = 12.0}, {x = -20.0, y = 13.0}, {x = -20.0, y = 14.0}, {x = -20.0, y = 15.0}, {x = -20.0, y = 16.0}, {x = -20.0, y = 17.0}, {x = -20.0, y = 18.0}, {x = -20.0, y = 19.0}, {x = -20.0, y = 20.0}, {y = 20.0, x = 1.0}, {y = 20.0, x = 2.0}, {y = 20.0, x = 3.0}, {y = 20.0, x = 4.0}, {y = 20.0, x = 5.0}, {y = 20.0, x = 6.0}, {y = 20.0, x = 7.0}, {y = 20.0, x = 8.0}, {y = 20.0, x = 9.0}, {y = 20.0, x = 10.0}, {y = 20.0, x = 11.0}, {y = 20.0, x = 12.0}, {y = 20.0, x = 13.0}, {y = 20.0, x = 14.0}, {y = 20.0, x = 15.0}, {y = 20.0, x = 16.0}, {y = 20.0, x = 17.0}, {y = 20.0, x = 18.0}, {y = 20.0, x = 19.0}, {y = 20.0, x = 20.0}, {y = -20.0, x = 1.0}, {y = -20.0, x = 2.0}, {y = -20.0, x = 3.0}, {y = -20.0, x = 4.0}, {y = -20.0, x = 5.0}, {y = -20.0, x = 6.0}, {y = -20.0, x = 7.0}, {y = -20.0, x = 8.0}, {y = -20.0, x = 9.0}, {y = -20.0, x = 10.0}, {y = -20.0, x = 11.0}, {y = -20.0, x = 12.0}, {y = -20.0, x = 13.0}, {y = -20.0, x = 14.0}, {y = -20.0, x = 15.0}, {y = -20.0, x = 16.0}, {y = -20.0, x = 17.0}, {y = -20.0, x = 18.0}, {y = -20.0, x = 19.0}, {y = -20.0, x = 20.0}, }
Absolute.Table.CloneAttackWeaponLabels = {"Hatchet", "Pistol", "Shotgun", "Tazer", "RPG", "Ray pistol", "Railgun", "Musket", "AK-47", "Heavy sniper"}
Absolute.Table.CloneAttackWeapon = {"WEAPON_HATCHET", "WEAPON_PISTOL", "WEAPON_PUMPSHOTGUN", "WEAPON_STUNGUN", "WEAPON_RPG", "WEAPON_RAYPISTOL", "WEAPON_RAILGUN", "WEAPON_MUSKET", "weapon_assaultrifle", "WEAPON_HEAVYSNIPER"}
Absolute.Table.ClonesAttackQuantites = {1,2,3,4,5,10,20}
Absolute.Table.PropsCrasherTable = {"des_floor_root", "prop_air_bigradar", "prop_container_01mb", "prop_container_03_ld", "prop_ld_contain_dl", "stt_prop_stunt_bblock_huge_01", "stt_prop_stunt_tube_l","stt_prop_stunt_track_cutout", "stt_prop_stunt_track_dwshort", "stt_prop_stunt_tube_crn", "prop_pylon_04", "ch2_04_props_combo27_11_lod", "ch2_04_v02", "bh1_08_bld2_lod", "sm_18_build7_fire_exit"}
Absolute.Table.RealisticAirstrike = { {x = 1, y = 10}, {x = 2, y = 9}, {x = 3, y = 8}, {x = 4, y = 7}, {x = 5, y = 6}, {x = 6, y = 5}, {x = 7, y = 4}, {x = 8, y = 3}, {x = 9, y = 2}, {x = 10,y = 1}, {x = -1, y = -10}, {x = -2, y = -9}, {x = -3, y = -8}, {x = -8, y = -3}, {x = -9, y = -2}, {x = -10,y = -1}, {x = 1, y = -10}, {x = 2, y = -9}, {x = 3, y = -8}, {x = 4, y = -7}, {x = 5, y = -6}, {y = -10,x = 1}, {x = 1, y = 00}, {x = 2, y = 0}, {x = 3, y = 0}, {x = 4, y = 0}, {x = 5, y = 0}, {x = 6, y = 0}, {x = 7, y = 0}, {x = 8, y = 0}, {x = 9, y = 0}, {x = 10,y = 0}, {x = -4, y = 0}, {x = -5, y = 0}, {x = -6, y = 0}, {x = -7, y = 0}, {x = -8, y = 0}, {x = -9, y = 0}, {x = -10,y = 0}, }
Absolute.Table.OnlinePlayersInfoHoldingWeapon = { --[[Handguns]] {NAME = "Dagger", MODEL = "WEAPON_DAGGER"}, {NAME = "Bat", MODEL = "WEAPON_BAT"}, {NAME = "Bottle", MODEL = "WEAPON_BOTTLE"}, {NAME = "Crowbar", MODEL = "WEAPON_CROWBAR"}, {NAME = "Unarmed", MODEL = "Fists"}, {NAME = "Flashlight", MODEL = "WEAPON_FLASHLIGHT"}, {NAME = "Golfclub", MODEL = "WEAPON_GOLFCLUB"}, {NAME = "Hammer", MODEL = "WEAPON_HAMMER"}, {NAME = "Hatchet", MODEL = "WEAPON_HATCHET"}, {NAME = "Brass Knuckles", MODEL = "WEAPON_KNUCKLE"}, {NAME = "Knife", MODEL = "WEAPON_KNIFE"}, {NAME = "Machete", MODEL = "WEAPON_MACHETE"}, {NAME = "Switchblade", MODEL = "WEAPON_SWITCHBLADE"}, {NAME = "Nightstick", MODEL = "WEAPON_NIGHTSTICK"}, {NAME = "Wrench", MODEL = "WEAPON_WRENCH"}, {NAME = "Battle Axe", MODEL = "WEAPON_BATTLEAXE"}, {NAME = "Pool clue", MODEL = "WEAPON_POOLCUE"}, {NAME = "Unarmed", MODEL = "weapon_unarmed"}, --[[Pistolas]] {NAME = "Pistol", MODEL = "WEAPON_PISTOL"}, {NAME = "Pistol MK2", MODEL = "WEAPON_PISTOL_MK2"}, {NAME = "Combat pistol", MODEL = "WEAPON_COMBATPISTOL"}, {NAME = "AP pistol", MODEL = "WEAPON_APPISTOL"}, {NAME = "Stungun", MODEL = "WEAPON_STUNGUN"}, {NAME = "Pistol .50", MODEL = "WEAPON_PISTOL50"}, {NAME = "SNS Pistol", MODEL = "WEAPON_SNSPISTOL"}, {NAME = "SNS Pistol MK2", MODEL = "WEAPON_SNSPISTOL_MK2"}, {NAME = "Heavy pistol", MODEL = "WEAPON_HEAVYPISTOL"}, {NAME = "Vintage Pistol", MODEL = "WEAPON_VINTAGEPISTOL"}, {NAME = "Flare gun", MODEL = "WEAPON_FLAREGUN"}, {NAME = "Marksman Pistol", MODEL = "WEAPON_MARKSMANPISTOL"}, {NAME = "Revolver", MODEL = "WEAPON_REVOLVER"}, {NAME = "Revolver MK2", MODEL = "WEAPON_REVOLVER_MK2"}, {NAME = "Double Action Revolver", MODEL = "WEAPON_DOUBLEACTION"}, {NAME = "Raypistol", MODEL = "WEAPON_RAYPISTOL"}, {NAME = "Ceramic Pistol", MODEL = "WEAPON_CERAMICPISTOL"}, {NAME = "Heavy pistol", MODEL = "WEAPON_HEAVYPISTOL"}, --[[Subfusiles]] {NAME = "Micro SMG", MODEL = "WEAPON_MICROSMG"}, {NAME = "SMG", MODEL = "WEAPON_SMG"}, {NAME = "SMG MK2", MODEL = "WEAPON_SMG_MK2"}, {NAME = "Assault SMG", MODEL = "WEAPON_ASSAULTSMG"}, {NAME = "Combat PDW", MODEL = "WEAPON_COMBATPDW"}, {NAME = "Machine pistol", MODEL = "WEAPON_MACHINEPISTOL"}, {NAME = "Mini SMG", MODEL = "WEAPON_MINISMG"}, {NAME = "Unholy Hellbringer", MODEL = "WEAPON_RAYCARBINE"}, --[[escopetas]] {NAME = "Pump shotgun", MODEL = "WEAPON_PUMPSHOTGUN"}, {NAME = "Pump shotgun MK2", MODEL = "WEAPON_PUMPSHOTGUN_MK2"}, {NAME = "Sawed-Off Shotgun", MODEL = "WEAPON_SAWNOFFSHOTGUN"}, {NAME = "Assault shotgun", MODEL = "WEAPON_ASSAULTSHOTGUN"}, {NAME = "Bullpip shotgun", MODEL = "WEAPON_BULLPUPSHOTGUN"}, {NAME = "Musket", MODEL = "WEAPON_MUSKET"}, {NAME = "Heavy shotgun", MODEL = "WEAPON_HEAVYSHOTGUN"}, {NAME = "Double Barrel shotgun", MODEL = "WEAPON_DBSHOTGUN"}, {NAME = "Sweeper Shotgun", MODEL = "WEAPON_AUTOSHOTGUN"}, --[[rifles de asalto]] {NAME = "Assault Rifle", MODEL = "WEAPON_ASSAULTRIFLE"}, {NAME = "Assault Rifle MK2", MODEL = "WEAPON_ASSAULTRIFLE_MK2"}, {NAME = "Carbine Rifle", MODEL = "WEAPON_CARBINERIFLE"}, {NAME = "Carbine Rifle MK2", MODEL = "WEAPON_CARBINERIFLE_MK2"}, {NAME = "Advanced Rifle", MODEL = "WEAPON_ADVANCEDRIFLE"}, {NAME = "Special Carbine", MODEL = "WEAPON_SPECIALCARBINE"}, {NAME = "Special Carbine MK2", MODEL = "WEAPON_SPECIALCARBINE_MK2"}, {NAME = "Bullpup Rifle", MODEL = "weapon_bullpuprifle"}, {NAME = "Bullpup Rifle MK2", MODEL = "weapon_bullpuprifle_mk2"}, {NAME = "Compact Rifle", MODEL = "WEAPON_COMPACTRIFLE"}, --[[light machine guns]] {NAME = "MG", MODEL = "WEAPON_MG"}, {NAME = "Combat MG", MODEL = "WEAPON_COMBATMG"}, {NAME = "Combat MG MK2", MODEL = "WEAPON_COMBATMG_MK2"}, {NAME = "Gusenberg Sweeper", MODEL = "weapon_gusenberg"}, --[[Sniper rifles]] {NAME = "Sniper Rifle", MODEL = "WEAPON_SNIPERRIFLE"}, {NAME = "Heavy Sniper", MODEL = "WEAPON_HEAVYSNIPER"}, {NAME = "Heavy Sniper MK2", MODEL = "WEAPON_HEAVYSNIPER_MK2"}, {NAME = "Marksman Rifle", MODEL = "weapon_marksmanrifle"}, {NAME = "Marksman Rifle MK2", MODEL = "weapon_marksmanrifle_mk2"}, --[[Heavy Weapons]] {NAME = "RPG", MODEL = "WEAPON_RPG"}, {NAME = "Grenade Launcher", MODEL = "weapon_grenadelauncher"}, {NAME = "Grenade Launcher Smoke", MODEL = "weapon_grenadelauncher_smoke"}, {NAME = "Mingun", MODEL = "weapon_minigun"}, {NAME = "Firework Launcher", MODEL = "weapon_firework"}, {NAME = "Railgun", MODEL = "weapon_railgun"}, {NAME = "Homing Launcher", MODEL = "weapon_hominglauncher"}, {NAME = "Compact Grenade Launcher", MODEL = "weapon_compactlauncher"}, {NAME = "Widowmaker", MODEL = "weapon_rayminigun"}, --[[throwables]] {NAME = "Grenade", MODEL = "weapon_grenade"}, {NAME = "BZ Gas", MODEL = "weapon_bzgas"}, {NAME = "Molotov", MODEL = "weapon_molotov"}, {NAME = "Sticky Bomb", MODEL = "weapon_stickybomb"}, {NAME = "Proximity Mine", MODEL = "weapon_proxmine"}, {NAME = "Snowball", MODEL = "weapon_snowball"}, {NAME = "Pipe Bomb", MODEL = "weapon_pipebomb"}, {NAME = "Ball", MODEL = "weapon_ball"}, {NAME = "Smoke Grenade", MODEL = "weapon_smokegrenade"}, {NAME = "Flare", MODEL = "weapon_flare"}, --[[miscellaneous]] {NAME = "Jerry can", MODEL = "weapon_petrolcan"}, {NAME = "Parachute", MODEL = "gadget_parachute"}, {NAME = "Fire extinguisher", MODEL = "weapon_fireextinguisher"}, {NAME = "Hazzard can", MODEL = "weapon_hazardcan"}, }
Absolute.Table.AllWeapons = { "weapon_dagger", "weapon_bat", "weapon_bottle", "weapon_crowbar", "weapon_unarmed", "weapon_flashlight", "weapon_golfclub", "weapon_hammer", "weapon_hatchet", "weapon_knuckle", "weapon_knife", "weapon_machete", "weapon_switchblade", "weapon_nightstick", "weapon_wrench", "weapon_battleaxe", "weapon_poolcue", "weapon_pistol", "weapon_pistol_mk2", "weapon_combatpistol", "weapon_appistol", "weapon_stungun", "weapon_pistol50", "weapon_snspistol", "weapon_snspistol_mk2", "weapon_heavypistol", "weapon_vintagepistol", "weapon_flaregun", "weapon_marksmanpistol", "weapon_revolver", "weapon_revolver_mk2", "weapon_doubleaction", "weapon_raypistol", "weapon_ceramicpistol", "weapon_microsmg", "weapon_smg", "weapon_smg_mk2", "weapon_assaultsmg", "weapon_combatpdw", "weapon_machinepistol", "weapon_minismg", "weapon_raycarbine", "weapon_pumpshotgun", "weapon_pumpshotgun_mk2", "weapon_sawnoffshotgun", "weapon_assaultshotgun", "weapon_bullpupshotgun", "weapon_musket", "weapon_heavyshotgun", "weapon_dbshotgun", "weapon_autoshotgun", "weapon_assaultrifle", "weapon_assaultrifle_mk2", "weapon_carbinerifle", "weapon_carbinerifle_mk2", "weapon_advancedrifle", "weapon_specialcarbine", "weapon_specialcarbine_mk2", "weapon_bullpuprifle", "weapon_bullpuprifle_mk2", "weapon_compactrifle", "weapon_mg", "weapon_combatmg", "weapon_combatmg_mk2", "weapon_gusenberg", "weapon_sniperrifle", "weapon_heavysniper", "weapon_heavysniper_mk2", "weapon_marksmanrifle", "weapon_marksmanrifle_mk2", "weapon_rpg", "weapon_grenadelauncher", "weapon_grenadelauncher_smoke", "weapon_minigun", "weapon_firework", "weapon_railgun", "weapon_hominglauncher", "weapon_compactlauncher", "weapon_rayminigun", "weapon_grenade", "weapon_bzgas", "weapon_molotov", "weapon_stickybomb", "weapon_proxmine", "weapon_snowball", "weapon_pipebomb", "weapon_ball", "weapon_smokegrenade", "weapon_flare", "weapon_petrolcan", "gadget_parachute", "weapon_fireextinguisher", "weapon_hazardcan", }
Absolute.Table.Keybinds = {Absolute.Keys["TAB"], Absolute.Keys["F8"], Absolute.Keys["N+"], Absolute.Keys["HOME"]}
Absolute.Table.KeybindsLabels = {"Tab", "F8", "Numpad+", "Home"}
Absolute.Table.OutFits = { ["SANTACLAUSM"] = { {model = "MASK", comp = 8, texture = 0}, {model = "TORSO", comp = 12, texture = 0}, {model = "LEGS", comp = 19, texture = 0}, {model = "SHOES", comp = 4, texture = 4}, {model = "SPECIAL", comp = 10, texture = 0}, {model = "SPECIAL2", comp = 21, texture = 2}, {model = "TORSO2", comp = 19, texture = 0} }, ["SANTACLAUSF"] = { {model = "HATS", comp = 23, texture = 0},   --[[sombrero]] {model = "TORSO", comp = 1, texture = 0},   --[[brazos]] {model = "LEGS", comp = 23, texture = 11}, --[[pantalones]] {model = "SHOES", comp = 22, texture = 3},  --[[zapatos]] {model = "SPECIAL2", comp = 21, texture = 2},--[[camiseta]] {model = "TORSO2", comp = 44, texture = 0} --[[pos torso dos]] }, }
Absolute.Table.VehiclesColors = {
    MetallicIDS = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 125, 137, 141, 142, 143, 145, 150, },
    MetallicLBLS = { "Metallic Black", "Metallic Graphite Black", "Metallic Black Steal", "Metallic Dark Silver", "Metallic Silver", "Metallic Blue Silver", "Metallic Steel Gray", "Metallic Shadow Silver", "Metallic Stone Silver", "Metallic Midnight Silver", "Metallic Gun Metal", "Metallic Anthracite Grey", "Metallic Red", "Metallic Torino Red", "Metallic Formula Red", "Metallic Blaze Red", "Metallic Graceful Red", "Metallic Garnet Red", "Metallic Desert Red", "Metallic Cabernet Red", "Metallic Candy Red", "Metallic Sunrise Orange", "Metallic Classic Gold", "Metallic Orange", "Metallic Dark Green", "Metallic Racing Green", "Metallic Sea Green", "Metallic Olive Green", "Metallic Green", "Metallic Gasoline Blue Green", "Metallic Midnight Blue", "Metallic Dark Blue", "Metallic Saxony Blue", "Metallic Blue", "Metallic Mariner Blue", "Metallic Harbor Blue", "Metallic Diamond Blue", "Metallic Surf Blue", "Metallic Nautical Blue", "Metallic Bright Blue", "Metallic Purple Blue", "Metallic Spinnaker Blue", "Metallic Ultra Blue", "Metallic Bright Blue", "Metallic Taxi Yellow", "Metallic Race Yellow", "Metallic Bronze", "Metallic Yellow Bird", "Metallic Lime", "Metallic Champagne", "Metallic Pueblo Beige", "Metallic Dark Ivory", "Metallic Choco Brown", "Metallic Golden Brown", "Metallic Light Brown", "Metallic Straw Beige", "Metallic Moss Brown", "Metallic Biston Brown", "Metallic Beechwood", "Metallic Dark Beechwood", "Metallic Choco Orange", "Metallic Beach Sand", "Metallic Sun Bleeched Sand", "Metallic Cream", "Metallic White", "Metallic Frost White", "Metallic Securicor Green", "Metallic Vermillion Pink", "Mettalic Black Blue", "Metallic Black Purple", "Metallic Black Red", "Metallic Purple", "Metallic Lava Red", },
    MatteIDS = { 12, 13, 14, 39, 40, 41, 42, 55, 82, 83, 84, 128, 129, 131, 148, 149, 151, 152, 153, 154, 155, },
    MatteLBLS = { "Matte Black", "Matte Gray", "Matte Light Grey", "Matte Red", "Matte Dark Red", "Matte Orange", "Matte Yellow", "Matte Lime Green", "Matte Dark Blue", "Matte Blue", "Matte Midnight Blue", "Matte Green", "Matte Brown", "Matte White", "Matte Purple", "Matte Dark Purple", "Matte Forest Green", "Matte Olive Drab", "Matte Desert Brown", "Matte Desert Tan", "Matte Foilage Green", },
    UtilIDS = { 15, 16, 17, 18, 19, 20, 43, 44, 45, 56, 57, 75, 76, 77, 78, 79, 80, 81, 108, 109, 110, 122, },
    UtilLBLS = { "Util Black", "Util Black Poly", "Util Dark silver", "Util Silver", "Util Gun Metal", "Util Shadow Silver", "Util Red", "Util Bright Red", "Util Garnet Red", "Util Dark Green", "Util Green", "Util Dark Blue", "Util Midnight Blue", "Util Blue", "Util Sea Foam Blue", "Util Lightning blue", "Util Maui Blue Poly", "Util Bright Blue", "Util Brown", "Util Medium Brown", "Util Light Brown", "Util Off White", },
    WornIDS = { 21, 22, 23, 24, 25, 26, 46, 47, 48, 58, 59, 60, 85, 86, 87, 113, 114, 115, 116, 121, 123, 124, 126, 130, 132, 133, },
    WornLBLS = { "Worn Black", "Worn Graphite", "Worn Silver Grey", "Worn Silver", "Worn Blue Silver", "Worn Shadow Silver", "Worn Red", "Worn Golden Red", "Worn Dark Red", "Worn Dark Green", "Worn Green", "Worn Sea Wash", "Worn Dark blue", "Worn Blue", "Worn Light blue", "Worn Honey Beige", "Worn Brown", "Worn Dark Brown", "Worn straw beige", "Worn Off White", "Worn Orange", "Worn Light Orange", "Worn Taxi Yellow", "Worn Orange", "Worn White", "Worn Olive Army Green", },
    OthersIDS = { 117, 118, 119, 120, 127, 134, 135, 136, 138, 139, 140, 141, 144, 146, 147, 156, 157, 158, 159, },
    OthersLBLS = { "Brushed Steel", "Brushed Black steel", "Brushed Aluminium", "Chrome", "police car blue", "Pure White", "Hot Pink", "Salmon pink", "Orange", "Green", "Blue", "Mettalic Black Blue", "hunter green", "Metaillic V Dark Blue", "MODSHOP BLACK1", "DEFAULT ALLOY COLOR", "Epsilon Blue", "Pure Gold", "Brushed Gold", }
}

--[[weapon categories for the weapon spawner]]
Absolute.Table.WeaponList = {
    MeleeWeaponsLabels = { "Cavaliary dagger", "Bat", "Bottle", "Crowbar", "Flashlight", "Golf club", "Hammer", "Hatchet", "Knuckle", "Knife", "Machete", "Switchblade", "Nightstick", "Wrench", "Battle axe", "Pool cue", },
    MeleeSpawnNames = { "weapon_dagger", "weapon_bat", "weapon_bottle", "weapon_crowbar", "weapon_flashlight", "weapon_golfclub", "weapon_hammer", "weapon_hatchet", "weapon_knuckle", "weapon_knife", "weapon_machete", "weapon_switchblade", "weapon_nightstick", "weapon_wrench", "weapon_battleaxe", "weapon_poolcue", },
    Pistollables = { "Pistol", "Pistol MK2", "Combat pistol", "AP Pistol", "Stungun", "Pistol .50", "SNS Pistol", "SNS Pistol MK2", "Heavy pistol", "Vintage pistol", "Flare gun", "Marksman pistol", "Revolver", "Revolver MK2", "Double action revolver", "Ray Pistol", "Ceramic pistol", },
    PistolSpawnNames = { "weapon_pistol", "weapon_pistol_mk2", "weapon_combatpistol", "weapon_appistol", "weapon_stungun", "weapon_pistol50", "weapon_snspistol", "weapon_snspistol_mk2", "weapon_heavypistol", "weapon_vintagepistol", "weapon_flaregun", "weapon_marksmanpistol", "weapon_revolver", "weapon_revolver_mk2", "weapon_doubleaction", "weapon_raypistol", "weapon_ceramicpistol", },
    SMGLAbles = { "Micro SMG", "SMG", "SMG MK2", "Assault SMG", "Combat PDW", "Machine Pistol", "Mini SMG", "Unholy Hellbringer", },
    SMGSSpawnNames = { "weapon_microsmg", "weapon_smg", "weapon_smg_mk2", "weapon_assaultsmg", "weapon_combatpdw", "weapon_machinepistol", "weapon_minismg", "weapon_raycarbine", },
    ShotgunsLabels = { "Pump shotgun", "Pump shotgun MK2", "Sawed-off shotgun", "Assault shotgun", "Bullpup shotgun", "Musket", "Heavy shotgun", "Double barrel shotgun", "Auto shotgun", },
    ShotgunsSpawnNames = { "weapon_pumpshotgun", "weapon_pumpshotgun_mk2", "weapon_sawnoffshotgun", "weapon_assaultshotgun", "weapon_bullpupshotgun", "weapon_musket", "weapon_heavyshotgun", "weapon_dbshotgun", "weapon_autoshotgun", },
    AssaultRiflesLabes = { "Assault Rifle", "Assault Rifle MK2", "Carbine Rifle", "Carbine Rifle MK2", "Advanced Rifle", "Special carbine", "Special Carbine MK2", "Bullpup Rifle", "Bullpup Rifle MK2", "Compact Rifle", },
    AssaultRiflesSpawnNames = { "weapon_assaultrifle", "weapon_assaultrifle_mk2", "weapon_carbinerifle", "weapon_carbinerifle_mk2", "weapon_advancedrifle", "weapon_specialcarbine", "weapon_specialcarbine_mk2", "weapon_bullpuprifle", "weapon_bullpuprifle_mk2", "weapon_compactrifle", },
    LMGLabels = { "MG", "Combat MG", "Combat MG MK2", "Gusenberg", },
    LMGSpawnNames = { "weapon_mg", "weapon_combatmg", "weapon_combatmg_mk2", "weapon_gusenberg", },
    SniperRiflesLabels = { "Sniper Rifle", "Heavy sniper", "Heavy Sniper MK2", "Marksman Rifle", "Marksman Rifle MK2", },
    SniperRiflesSpawnNames = { "weapon_sniperrifle", "weapon_heavysniper", "weapon_heavysniper_mk2", "weapon_marksmanrifle", "weapon_marksmanrifle_mk2", },
    HeavyWeaponsLabels = { "RPG", "Grenade launcher", "Smoke Launcher", "Minigun", "Firework launcher", "Railgun", "Homing launcher", "Compact launcher", "Ray minigun" },
    HeavyWeaponsSpawnNames = { "weapon_rpg", "weapon_grenadelauncher", "weapon_grenadelauncher_smoke", "weapon_minigun", "weapon_firework", "weapon_railgun", "weapon_hominglauncher", "weapon_compactlauncher", "weapon_rayminigun", },
    ThrowAblesLabels = { "Grenade", "BZ Gas", "Molotov", "C4", "Proxy mine", "Snowball", "Pipebomb", "Ball", "Smoke Grenade", "Flare" },
    ThrowAblesSpawnNames = { "weapon_grenade", "weapon_bzgas", "weapon_molotov", "weapon_stickybomb", "weapon_proxmine", "weapon_snowball", "weapon_pipebomb", "weapon_ball", "weapon_smokegrenade", "weapon_flare", },
    MiscellaneousLabels = { "Petrol can", "Parachute", "Fire extinguisher", "Hazard can" },
    MiscellaneousSpawnNames = { "weapon_petrolcan", "gadget_parachute", "weapon_fireextinguisher", "weapon_hazardcan" },
}
    --[[finish of weapon categories]]
Absolute.Table.WeaponDamageModifier = { Levels =  {1.0,1.5,2.0, 3.0,5.0, 25.0, 50.0, 100.0, 200.0, 500.0, 1000.0, 0.5}, Labels = {"None","x1.5","x2", "x3","x5", "x25", "x50", "x100", "x200", "x500", "x1000", "x0.5"} }
Absolute.Table.WormTeleportGunPoints = { Tp1 = {x = nil, y = nil, z = nil}, Tp2 = {x = nil, y = nil, z = nil} }
Absolute.Table.Bones = { Labels = {'Head', 'Body', 'Left knee', 'Right knee', 'Left foot', 'Right foot'}, Ids = {31086, 0, 63931, 36864, 14201, 52301}}
Absolute.Table.AimbotFovsList = {"100%", "65%", "40%"}
Absolute.Table.AimbotFovs = { {Fov = 0.25, UpLeft = 0.375, UpRight = 0.625}, {Fov = 0.15, UpLeft = 0.425, UpRight = 0.575}, {Fov = 0.10, UpLeft = 0.450, UpRight = 0.550}, }
Absolute.Table.VehicleColorsLabels = { "Metallic Black", "Metallic Graphite Black", "Metallic Black Steal", "Metallic Dark Silver", "Metallic Silver", "Metallic Blue Silver", "Metallic Steel Gray", "Metallic Shadow Silver", "Metallic Stone Silver", "Metallic Midnight Silver", "Metallic Gun Metal", "Metallic Anthracite Grey", "Matte Black", "Matte Gray", "Matte Light Grey", "Util Black", "Util Black Poly", "Util Dark silver", "Util Silver", "Util Gun Metal", "Util Shadow Silver", "Worn Black", "Worn Graphite", "Worn Silver Grey", "Worn Silver", "Worn Blue Silver", "Worn Shadow Silver", "Metallic Red", "Metallic Torino Red", "Metallic Formula Red", "Metallic Blaze Red", "Metallic Graceful Red", "Metallic Garnet Red", "Metallic Desert Red", "Metallic Cabernet Red", "Metallic Candy Red", "Metallic Sunrise Orange", "Metallic Classic Gold", "Metallic Orange", "Matte Red", "Matte Dark Red", "Matte Orange", "Matte Yellow", "Util Red", "Util Bright Red", "Util Garnet Red", "Worn Red", "Worn Golden Red", "Worn Dark Red", "Metallic Dark Green", "Metallic Racing Green", "Metallic Sea Green", "Metallic Olive Green", "Metallic Green", "Metallic Gasoline Blue Green", "Matte Lime Green", "Util Dark Green", "Util Green", "Worn Dark Green", "Worn Green", "Worn Sea Wash", "Metallic Midnight Blue", "Metallic Dark Blue", "Metallic Saxony Blue", "Metallic Blue", "Metallic Mariner Blue", "Metallic Harbor Blue", "Metallic Diamond Blue", "Metallic Surf Blue", "Metallic Nautical Blue", "Metallic Bright Blue", "Metallic Purple Blue", "Metallic Spinnaker Blue", "Metallic Ultra Blue", "Metallic Bright Blue", "Util Dark Blue", "Util Midnight Blue", "Util Blue", "Util Sea Foam Blue", "Util Lightning blue", "Util Maui Blue Poly", "Util Bright Blue", "Matte Dark Blue", "Matte Blue", "Matte Midnight Blue", "Worn Dark blue", "Worn Blue", "Worn Light blue", "Metallic Taxi Yellow", "Metallic Race Yellow", "Metallic Bronze", "Metallic Yellow Bird", "Metallic Lime", "Metallic Champagne", "Metallic Pueblo Beige", "Metallic Dark Ivory", "Metallic Choco Brown", "Metallic Golden Brown", "Metallic Light Brown", "Metallic Straw Beige", "Metallic Moss Brown", "Metallic Biston Brown", "Metallic Beechwood", "Metallic Dark Beechwood", "Metallic Choco Orange", "Metallic Beach Sand", "Metallic Sun Bleeched Sand", "Metallic Cream", "Util Brown", "Util Medium Brown", "Util Light Brown", "Metallic White", "Metallic Frost White", "Worn Honey Beige", "Worn Brown", "Worn Dark Brown", "Worn straw beige", "Brushed Steel", "Brushed Black steel", "Brushed Aluminium", "Chrome", "Worn Off White", "Util Off White", "Worn Orange", "Worn Light Orange", "Metallic Securicor Green", "Worn Taxi Yellow", "police car blue", "Matte Green", "Matte Brown", "Worn Orange", "Matte White", "Worn White", "Worn Olive Army Green", "Pure White", "Hot Pink", "Salmon pink", "Metallic Vermillion Pink", "Orange", "Green", "Blue", "Mettalic Black Blue", "Metallic Black Purple", "Metallic Black Red", "hunter green", "Metallic Purple", "Metaillic V Dark Blue", "MODSHOP BLACK1", "Matte Purple", "Matte Dark Purple", "Metallic Lava Red", "Matte Forest Green", "Matte Olive Drab", "Matte Desert Brown", "Matte Desert Tan", "Matte Foilage Green", "DEFAULT ALLOY COLOR", "Epsilon Blue", "Pure Gold", "Brushed Gold", }
Absolute.Table.VehicleColorsIDS = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159 }
Absolute.Table.PedGun = { Labels = {"[~o~CIT~s~] FBI old", "[~o~CIT~s~] Bride", "[~o~CIT~s~] Astronauut","[~p~AN~s~] Shark", "[~p~AN~s~] Deer", "[~p~AN~s~] Whale"}, Spawns = {"mp_m_g_vagfun_01", "csb_bride", "s_m_m_movspace_01", "a_c_sharktiger", "a_c_deer", "a_c_humpback"}}
Absolute.Table.Explosions = {ExplosionTypeLabels = {"Grenade", "Grenade launcher", "Sticky bomb", "Molotov", "Missile", "Tank","Octane", "Car","Plane","Petrol pump","Bike","Dir_STEAM","Dir_FLAME","Water Hydrant","DIR GAS CAN","BOAT","Ship","Truck","Bullet","Smoke launcher","Smoke grenade","BZGas","Flare","Gas canister","extinguisher","programmablear","Train","barrel","Propane","Blimp","DIR_FLAME_EXPLODE ","tanker", "Plane Missile","Vehicle bullet", "Gas tank","proxmibe","Valkyre"},ExplosionTypes = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,0,34}}
Absolute.Table.AutoPilot = { Styles = {"Normal", "Reverse", "Rushed", "Russian"}, StylesIds = {431, 1467, 1074528293, 536871355}}
Absolute.Table.wMgrSwzfbqlmnnVmRcrf = { Data = { {id = 16, meta = "modArmor"}, {id = 11, meta = "modEngine"}, {id = 12, meta = "modBrakes"}, {id = 13, meta = "modTransmission"}, {id = 15, meta = "modSuspension"}, }, atUdcZYtGTcHImurtzNh = { Selected = { Armor = 0, Engine = 0, Brakes = 0, Transmission = 0, Suspenssion = 0 }, NMods = { Armor = 0, Engine = 0, Brakes = 0, Transmission = 0, Suspenssion = 0 }, Migratives = { Armor = 0, Engine = 0, Brakes = 0, Transmission = 0, Suspenssion = 0 } }, Labels = { {"DFT", "Max"}, {"DFT", "Level 1", "Max"}, {"DFT", "Level 1", "Level 2", "Max"}, {"DFT", "Level 1", "Level 2", "Level 3", "Max"}, {"DFT", "Level 1", "Level 2", "Level 3", "Level 4", "Max"}, }, Storedveh = nil, }
Absolute.Table.TeleportPoints = { Clothing = { {name = "[~b~DISC~s~] Paleto", x = -4.5, y = 6521.2, z = 30.5}, {name = "[~b~DISC~s~] Paleto Bay", x = -4.5, y = 6521.2, z = 30.5}, {name = "[~b~DISC~s~] Zancudo", x = 1678.05,y = 4819.88, z = 41.29}, {name = "[~b~DISC~s~] Sandy Shores", x = 1179.67,y = 2691.37, z = 15.4}, {name = "[~b~DISC~s~] Strawberry", x = 89.320786,y = -1392.317627, z = 30.4}, {name = "[~b~DISC~s~] Great Chaparral", x = -1089.4,y = 2697.03, z = 19.44}, {name = "[~r~SUB~s~] Havick ", x = 134.122055,y = -200.21133, z = 53.864090}, {name = "[~r~SUB~s~] Del Perro ", x = -1210.620361,y = -784.16021, z = 16.549015}, {name = "[~g~PONS~s~] Burton ", x = -148.234741,y = -308.07, z = 38.104}, {name = "[~g~PONS~s~] Rockford Hills ", x = -725.551453,y = -162.83371, z = 36.570}, {name = "[~g~PONS~s~] MorningWood ", x = -1460.654,y = -227.55, z = 48.72} }, BarberShops  = { {name ="Havick", x = -27.79,y = -136.86, z = 56.51}, {name = "Rockford Hills", x = -829.42,y = -191.58, z = 36.92}, {name = "Vespucci",  x = -1294.99,y = -1117.64, z = 6.15}, {name = "Mirror Park",  x = 1198.02,y = -471.81, z = 65.67}, {name = "Davis", x = 127.76,y = -1718.65, z = 28.65}, {name = "Paleto Bay", x = -286.63,y = 6239.38, z = 30.56}, {name = "Sandy Shores", x = 1938.35,y = 3717.80, z = 31.60} }, Garages = { {name = "Mort Mutual Insurance", x = -221.74,y = -1158.24,z = 23.04}, {name = "Bennys Garage", x = -196.34,y = -1303.10,z = 30.65}, {name = "Beekers Garage", x = 116.22,y = 6606.20,z = 31.46}, {name = "Sandy Shores", x = 1176.82,y = 2657.97,z = 37.37}, {name = "Grand Senora Dust", x = 1173.45,y = 2661.58,z = 37.28}, {name = "Burton", x = -370.53,y = -130.40,z = 38.19}, {name = "Little Seoul Car Wash",	 x = -701.82,y = -921.92,z = 18.58} }, Ammunation = { {name = "Paleto Bay", x =-318.85,y = 6074.43, z = 30.614}, {name = "Sandy Shores",	x =1704.67,y = 3748.88, z = 33.28}, {name = "Great Chaparral",	x =-1108.60,y = 2685.69, z = 18.17}, {name = "Hawick", x =235.66,y = -42.26, z = 69.22}, {name = "Morningwood", 	x =-1328.592896,y = -387.114410, z = 36.126881}, {name = "Little Seoul",	x =-665.232727,y = -952.522522, z = 20.866556}, {name = "La Mesa",	x = 844.439026,y = -1009.422424, z = 27.511728}, {name = "Pillbox Hill",	x =17.377790,y = -1122.183105, z = 28.469843}, } }
Absolute.Table.Freecam_SpawnerThings = { Props = { Ramps = { Labels = {"Container", "Small ramp", "Medium ramp", "Big ramp", "Aqua ramp", "Half loop", "Jump XXL"}, Ids = {"prop_container_03b", "lts_prop_lts_ramp_01", "lts_prop_lts_ramp_02", "lts_prop_lts_ramp_03", "prop_jetski_ramp_01", "stt_prop_ramp_adj_hloop", "stt_prop_ramp_jump_xxl"} }, Stones = { Labels = {"Rock 1", "Rock 2", "Rock 3", "Rock 4", "Rock 5"}, Ids = {"cs_x_rubweea", "cs_x_weesmlb", "cs_x_rubweec", "cs_x_rubweed", "cs_x_rubweee"} }, Others = { Labels = {"Radar", "Garage door 1", "Tug", "Wheel", "Jet", "Prision gate"}, Ids = {"hei_prop_carrier_radar_1", "hei_prop_gold_trolly_empty", "hei_prop_heist_tug", "lts_prop_lts_offroad_tyres01", "p_cs_mp_jet_01_s", "p_gate_prison_01_s"} }, Acrobatics = { Labels = {"Jump 30", "Jump 45", "Slope 15", "Slope 30", "Funny lng", "Track jump", "st01", "Track start", "Tube L", "Tube M"}, Ids = {"stt_prop_stunt_jump30", "stt_prop_stunt_jump45", "stt_prop_stunt_track_dwslope15", "stt_prop_stunt_track_dwslope30", "stt_prop_stunt_track_funlng", "stt_prop_stunt_track_jump", "stt_prop_stunt_track_st_01", "stt_prop_stunt_track_start", "stt_prop_stunt_tube_l", "stt_prop_stunt_tube_m"} } } }
Absolute.Table.Freecam_Weapons = {
    weapons = {"weapon_stungun", "weapon_pistol", "weapon_heavysniper", "weapon_pumpshotgun", "weapon_raypistol"},
    weaponlabels = {"Stungun", "Pistol", "Heavy sniper", "Shotgun", "Ray pistol"}
}


Absolute.Table.UpdatedVehiclesTable = {
    Boats = {"dinghy", "dinghy2", "dinghy3", "dinghy4", "jetmax", "marquis", "seashark", "seashark2", "seashark3", "speeder", "speeder2", "squalo", "submersible", "submersible2", "suntrap", "toro", "toro2", "tropic", "tropic2", "tug",},
    Commercials = { "benson","biff","cerberus","cerberus2","cerberus3","hauler","hauler2","mule","mule2","mule3","mule4","packer","phantom","phantom2","phantom3","pounder","pounder2","stockade","stockade3","terbyte",},
    Compacts = {"asbo","blista","brioso","club","dilettante","dilettante2","kanjo","issi2","issi3","issi4","issi5","issi6","panto","prairie","rhapsody" }
}

Absolute.Table.Freecam_menukeybinds = {
    Ids = {0, 118, 80, 116},
    Labels = {"V", "Numpad 9", "R" , "["}
}

Absolute.Table.TenK = { "02gate3_l", "apa_heist_apart2_door", "apa_int_garage_wall_plug", "apa_mp_apa_icon_mk_beast", "apa_mp_apa_icon_mk_ring", "apa_mp_apa_y1_l1a", "apa_mp_apa_y1_l1b", "apa_mp_apa_y1_l1c", "apa_mp_apa_y1_l1d", "apa_mp_apa_y1_l2a", "apa_mp_apa_y1_l2b", "apa_mp_apa_y1_l2c", "apa_mp_apa_y1_l2d", "apa_mp_apa_y2_l1a", "apa_mp_apa_y2_l1b", "apa_mp_apa_y2_l1c", "apa_mp_apa_y2_l1d", "apa_mp_apa_y2_l2a", "apa_mp_apa_y2_l2b", "apa_mp_apa_y2_l2c", "apa_mp_apa_y2_l2d", "apa_mp_apa_y3_l1a", "apa_mp_apa_y3_l1b", "apa_mp_apa_y3_l1c", "apa_mp_apa_y3_l1d", "apa_mp_apa_y3_l2a", "apa_mp_apa_y3_l2b", "apa_mp_apa_y3_l2c", "apa_mp_apa_y3_l2d", "apa_mp_apa_yacht", "apa_mp_apa_yacht_door", "apa_mp_apa_yacht_door2", "apa_mp_apa_yacht_o1_rail_a",  "apa_mp_apa_yacht_o2_rail_a", "apa_mp_apa_yacht_o2_rail_b", "apa_mp_apa_yacht_o3_rail_a", "apa_mp_apa_yacht_o3_rail_b", "apa_mp_apa_yacht_option1", "apa_mp_apa_yacht_option1_cola", "apa_mp_apa_yacht_option3", "apa_mp_apa_yacht_option3_cola", "apa_mp_apa_yacht_option3_colb", "apa_mp_apa_yacht_option3_cold", "apa_mp_apa_yacht_option3_cole", "apa_mp_apa_yacht_jacuzzi_cam", "apa_mp_apa_yacht_jacuzzi_ripple003", "apa_mp_apa_yacht_jacuzzi_ripple1", "apa_mp_apa_yacht_jacuzzi_ripple2",  "apa_mp_apa_yacht_win", "apa_mp_h_acc_rugwoolm_01", "apa_mp_h_acc_rugwoolm_02", "apa_mp_h_acc_rugwoolm_03", "apa_mp_h_acc_rugwoolm_04", "apa_mp_h_acc_rugwools_01", "apa_mp_h_acc_rugwools_03", "apa_mp_h_acc_scent_sticks_01", "apa_mp_h_acc_tray_01", "apa_mp_h_acc_vase_01", "apa_mp_h_acc_vase_02", "apa_mp_h_acc_vase_04", "apa_mp_h_acc_vase_05", "apa_mp_h_acc_vase_05", "apa_mp_h_acc_vase_flowers_01", "apa_mp_h_acc_vase_flowers_02", "apa_mp_h_acc_vase_flowers_03", "apa_mp_h_acc_vase_flowers_04", "apa_mp_h_bathtub_01", "apa_mp_h_bed_chestdrawer_02", "apa_mp_h_bed_double_08", "apa_mp_h_bed_double_09", "apa_mp_h_bed_table_wide_12", "apa_mp_h_bed_wide_05", "apa_mp_h_bed_with_table_02", "apa_mp_h_ceiling_light_01", "apa_mp_h_ceiling_light_01_day", "apa_mp_h_ceiling_light_02", "apa_mp_h_ceiling_light_2_day", "apa_mp_h_din_chair_04", "apa_mp_h_din_chair_08", "apa_mp_h_din_chair_09", "apa_mp_h_din_chair_12", "apa_mp_h_din_stool_04", "apa_mp_h_din_table_01", "apa_mp_h_din_table_04", "apa_mp_h_dintable_05", "apa_mp_h_din_table_06", "apa_mp_h_din_table_11", "apa_mp_h_floorlamp_a", "apa_mp_h_floorlamp_b", "apa_mp_h_floorlamp_c", "apa_mp_h_floor_lamp_int_08", "apa_mp_h_kit_kitchen_01_a", "apa_mp_h_kit_kitchen_01_b", "apa_mp_h_lampbulb_multiple_a", "apa_mp_h_lit_floorlampnight_05", "apa_mp_h_lit_floorlampnight_07", "apa_mp_h_lit_floorlampnight_14", "apa_mp_h_lit_floorlamp_01", "apa_mp_h_lit_floorlamp_02", "apa_mp_h_lit_floorlamp_03", "apa_mp_h_lit_floorlamp_05", "apa_mp_h_lit_floorlamp_06", "apa_mp_h_lit_floorlamp_10", "apa_mp_h_lit_floorlamp_13", "apa_mp_h_lit_floorlamp_17", "apa_mp_h_lit_lamptablenight_16", "apa_mp_h_lit_lamptablenight_24", "apa_mp_h_lit_lamptable_005", "apa_mp_h_lit_lamptable_02", "apa_mp_h_lit_lamptable_04", "apa_mp_h_lit_lamptable_09", "apa_mp_h_lit_lamptable_14", "apa_mp_h_lit_lamptable_17", "apa_mp_h_lit_lamptable_21", "apa_mp_h_lit_lightpendant_01", "apa_mp_h_lit_lightpendant_05", "apa_mp_h_lit_lightpendant_05b", "apa_mp_h_stn_chairarm_01", "apa_mp_h_stn_chairarm_02", "apa_mp_h_stn_chairarm_03", "apa_mp_h_stn_chairarm_09", "apa_mp_h_stn_chairarm_11", "apa_mp_h_stn_chairarm_12", "apa_mp_h_stn_chairarm_13", "apa_mp_h_stn_chairarm_23", "apa_mp_h_stn_chairarm_24", "apa_mp_h_stn_chairarm_25", "apa_mp_h_stn_chairarm_26", "apa_mp_h_stn_chairstool_12", "apa_mp_h_stn_chairstrip_01", "apa_mp_h_stn_chairstrip_02", "apa_mp_h_stn_chairstrip_03", "apa_mp_h_stn_chairstrip_04", "apa_mp_h_stn_chairstrip_05", "apa_mp_h_stn_chairstrip_06", "apa_mp_h_stn_chairstrip_07", "apa_mp_h_stn_chairstrip_08", "apa_mp_h_stn_foot_stool_01", "apa_mp_h_stn_foot_stool_02", "apa_mp_h_stn_sofa2seat_02", "apa_mp_h_stn_sofacorn_01", "apa_mp_h_stn_sofacorn_05", "apa_mp_h_stn_sofacorn_06", "apa_mp_h_stn_sofacorn_07", "apa_mp_h_stn_sofacorn_08", "apa_mp_h_stn_sofacorn_09", "apa_mp_h_stn_sofacorn_10", "apa_mp_h_stn_sofa_daybed_01", "apa_mp_h_stn_sofa_daybed_02", "apa_mp_h_str_", "apa_mp_h_str_avunitl_01_b", "apa_mp_h_str_avunitl_04", "apa_mp_h_str_avunitm_01", "apa_mp_h_str_avunitm_03", "apa_mp_h_str_avunits_01", "apa_mp_h_str_avunits_04", "apa_mp_h_str_shelffloorm_02", "apa_mp_h_str_shelffreel_01", "apa_mp_h_str_shelfwallm_01", "apa_mp_h_str_sideboardl_06", "apa_mp_h_str_sideboardl_09", "apa_mp_h_str_sideboardl_11", "apa_mp_h_str_sideboardl_13", "apa_mp_h_str_sideboardl_14", "apa_mp_h_str_sideboardm_02", "apa_mp_h_str_sideboardm_03", "apa_mp_h_str_sideboards_01", "apa_mp_h_str_sideboards_02", "apa_mp_h_table_lamp_int_08", "apa_mp_h_tab_coffee_07", "apa_mp_h_tab_coffee_08", "apa_mp_h_tab_sidelrg_01", "apa_mp_h_tab_sidelrg_02", "apa_mp_h_tab_sidelrg_04", "apa_mp_h_tab_sidelrg_07", "apa_mp_h_tab_sidesml_01", "apa_mp_h_tab_sidesml_02", "apa_mp_h_yacht_", "apa_mp_h_yacht_armchair_01", "apa_mp_h_yacht_armchair_03", "apa_mp_h_yacht_armchair_04", "apa_mp_h_yacht_barstool_01", "apa_mp_h_yacht_bed_01", "apa_mp_h_yacht_bed_02", "apa_mp_h_yacht_coffee_table_01",  "apa_mp_h_yacht_floor_lamp_01", "apa_mp_h_yacht_side_table_01", "apa_mp_h_yacht_side_table_02", "apa_mp_h_yacht_sofa_01", "apa_mp_h_yacht_sofa_02", "apa_mp_h_yacht_stool_01", "apa_mp_h_yacht_strip_chair_01", "apa_mp_h_yacht_table_lamp_01", "apa_mp_h_yacht_table_lamp_02", "apa_mp_h_yacht_table_lamp_03", "apa_p_apa_champ_flute_s", "apa_p_apdlc_crosstrainer_s", "apa_p_apdlc_treadmill_s", "apa_p_h_acc_artwalll_01", "apa_p_h_acc_artwalll_02", "apa_p_h_acc_artwalll_03", "apa_p_h_acc_artwalll_04", "apa_p_h_acc_artwallm_01", "apa_p_h_acc_artwallm_03", "apa_p_h_acc_artwallm_04", "apa_p_h_acc_artwalls_03", "apa_p_h_acc_artwalls_04", "apa_p_mp_door_01", "apa_p_mp_door_02", "apa_p_mp_door_03", "apa_p_mp_door_04", "apa_p_mp_door_05", "apa_p_mp_door_06", "apa_p_mp_door_07", "apa_p_mp_door_apartfrt_door", "apa_p_mp_door_apartfrt_door_black", "apa_p_mp_door_apart_door", "apa_p_mp_door_apart_door_black", "apa_p_mp_door_mpa", "apa_p_mp_door_mpa2_frnt", "apa_p_mp_door_stilt_door", "apa_p_mp_door_stilt_doorfrnt", "apa_p_mp_h_showerdoor_s", "apa_p_mp_yacht_bathroomdoor", "apa_p_mp_yacht_door", "apa_p_mp_yacht_door_01", "apa_p_mp_yacht_door_02", "apa_mp_apa_crashed_usaf_01a", "apa_mp_apa_yacht_launcher_01a", "apa_mp_h_acc_artwalll_01", "apa_mp_h_acc_artwalll_02", "apa_mp_h_acc_artwalll_03", "apa_mp_h_acc_artwallm_02", "apa_mp_h_acc_artwallm_03", "apa_mp_h_acc_artwallm_04", "apa_mp_h_acc_bottle_01", "apa_mp_h_acc_bottle_02", "apa_mp_h_acc_bowl_ceramic_01", "apa_mp_h_acc_box_trinket_01", "apa_mp_h_acc_box_trinket_02", "apa_mp_h_acc_candles_01", "apa_mp_h_acc_candles_02", "apa_mp_h_acc_candles_04", "apa_mp_h_acc_candles_05", "apa_mp_h_acc_candles_06", "apa_mp_h_acc_coffeemachine_01", "apa_mp_h_acc_dec_head_01", "apa_mp_h_acc_dec_plate_01", "apa_mp_h_acc_dec_plate_02", "apa_mp_h_acc_dec_sculpt_01", "apa_mp_h_acc_dec_sculpt_02", "apa_mp_h_acc_dec_sculpt_03", "apa_mp_h_acc_drink_tray_02", "apa_mp_h_acc_fruitbowl_01", "apa_mp_h_acc_fruitbowl_02", "apa_mp_h_acc_jar_02", "apa_mp_h_acc_jar_03", "apa_mp_h_acc_jar_04", "apa_mp_h_acc_phone_01", "apa_mp_h_acc_plant_palm_01", "apa_mp_h_acc_plant_tall_01", "apa_mp_h_acc_pot_pouri_01", "apa_mp_h_acc_rugwooll_03", "apa_mp_h_acc_rugwooll_04", "apa_prop_ap_name_text", "apa_prop_ap_port_text", "apa_prop_ap_starb_text", "apa_prop_ap_stern_text", "apa_prop_apa_bankdoor_new", "apa_prop_apa_cutscene_doora", "apa_prop_apa_cutscene_doorb", "apa_prop_apa_cutscene_showerdoor", "apa_prop_apa_tumbler_empty", "apa_prop_aptest", "apa_prop_cs_plastic_cup_01", "apa_prop_heist_cutscene_doora", "apa_prop_heist_cutscene_doorb", "apa_prop_hei_bankdoor_new", "apa_prop_ss1_mpint_door_l", "apa_prop_ss1_mpint_door_r", "apa_prop_ss1_mpint_garage2", "apa_prop_yacht_float_1a", "apa_prop_yacht_float_1b", "apa_prop_yacht_glass_01", "apa_prop_yacht_glass_02", "apa_prop_yacht_glass_03", "apa_prop_yacht_glass_04", "apa_prop_yacht_glass_05", "apa_prop_yacht_glass_06", "apa_v_ilev_fh_bedrmdoor", "apa_v_ilev_fh_heistdoor1", "apa_v_ilev_fh_heistdoor2", "apa_v_ilev_ss_door2", "apa_v_ilev_ss_door7", "apa_v_ilev_ss_door8", "cable1_root", "ce_xr_ctr2", "csx_coastbigroc01_", "csx_coastbigroc02_", "csx_coastbigroc03_", "csx_coastbigroc05_", "csx_coastboulder_00_", "csx_coastboulder_01_", "csx_coastboulder_02_", "csx_coastboulder_03_", "csx_coastboulder_04_", "csx_coastboulder_05_", "csx_coastboulder_06_", "csx_coastboulder_07_", "csx_coastrok1_", "csx_coastrok2_", "csx_coastrok3_", "csx_coastrok4_", "csx_coastsmalrock_01_", "csx_coastsmalrock_02_", "csx_coastsmalrock_03_", "csx_coastsmalrock_04_", "csx_coastsmalrock_05_", "csx_rvrbldr_biga_", "csx_rvrbldr_bigb_", "csx_rvrbldr_bigc_", "csx_rvrbldr_bigd_", "csx_rvrbldr_bige_", "csx_rvrbldr_meda_", "csx_rvrbldr_medb_", "csx_rvrbldr_medc_", "csx_rvrbldr_medd_", "csx_rvrbldr_mede_", "csx_rvrbldr_smla_", "csx_rvrbldr_smlb_", "csx_rvrbldr_smlc_", "csx_rvrbldr_smld_", "csx_rvrbldr_smle_", "csx_saltconcclustr_a_", "csx_saltconcclustr_b_", "csx_saltconcclustr_c_", "csx_saltconcclustr_d_", "csx_saltconcclustr_e_", "csx_saltconcclustr_f_", "csx_saltconcclustr_g_", "csx_seabed_bldr1_", "csx_seabed_bldr2_", "csx_seabed_bldr3_", "csx_seabed_bldr4_", "csx_seabed_bldr5_", "csx_seabed_bldr6_", "csx_seabed_bldr7_", "csx_seabed_bldr8_", "csx_seabed_rock1_", "csx_seabed_rock2_", "csx_seabed_rock3_", "csx_seabed_rock4_", "csx_seabed_rock5_", "csx_seabed_rock6_", "csx_seabed_rock7_", "csx_seabed_rock8_", "csx_searocks_02", "csx_searocks_03", "csx_searocks_04", "csx_searocks_05", "csx_searocks_06", "ch_prop_ch_vase_02a", "ch_prop_ch_vault_blue_01", "ch_prop_ch_vault_blue_02", "ch_prop_ch_vault_blue_03", "ch_prop_ch_vault_blue_04", "ch_prop_ch_vault_blue_05", "ch_prop_ch_vault_blue_06", "ch_prop_ch_vault_blue_07", "ch_prop_ch_vault_blue_08", "ch_prop_ch_vault_blue_09", "ch_prop_ch_vault_blue_10", "ch_prop_ch_vault_blue_11", "ch_prop_ch_vault_blue_12", "ch_prop_ch_vault_d_door_01a", "ch_prop_ch_vault_d_frame_01a", "ch_prop_ch_vault_green_01", "ch_prop_ch_vault_green_02", "ch_prop_ch_vault_green_03", "ch_prop_ch_vault_green_04", "ch_prop_ch_vault_green_05", "ch_prop_ch_vault_green_06", "ch_prop_ch_vault_slide_door_lrg", "ch_prop_ch_vault_slide_door_sm", "ch_prop_ch_vault_wall_damage", "ch_prop_ch_vaultdoor_frame01", "ch_prop_ch_vaultdoor01x", "ch_prop_ch_wallart_01a", "ch_prop_ch_wallart_02a", "ch_prop_ch_wallart_03a", "ch_prop_ch_wallart_04a", "ch_prop_ch_wallart_05a", "ch_prop_ch_wallart_06a", "ch_prop_ch_wallart_07a", "ch_prop_ch_wallart_08a", "ch_prop_ch_wallart_09a", "ch_prop_champagne_01a", "ch_prop_chip_tray_01a", "ch_prop_chip_tray_01b", "ch_prop_collectibles_garbage_01a", "ch_prop_collectibles_limb_01a", "ch_prop_crate_stack_01a", "ch_prop_davies_door_01a", "ch_prop_diamond_trolly_01a", "ch_prop_diamond_trolly_01b", "ch_prop_diamond_trolly_01c", "ch_prop_drills_hat01x", "ch_prop_drills_hat02x", "ch_prop_drills_hat03x", "ch_prop_emp_01a", "ch_prop_emp_01b", "ch_prop_fingerprint_damaged_01", "ch_prop_fingerprint_scanner_01a", "ch_prop_fingerprint_scanner_01b", "ch_prop_fingerprint_scanner_01c", "ch_prop_fingerprint_scanner_01d", "ch_prop_fingerprint_scanner_01e", "ch_prop_fingerprint_scanner_error_01b", "ch_prop_gold_bar_01a", "ch_prop_gold_trolly_01a", "ch_prop_gold_trolly_01b", "ch_prop_gold_trolly_01c", "ch_prop_grapessed_door_l_01a", "ch_prop_grapessed_door_r_01a", "ch_prop_heist_drill_bag_01a", "ch_prop_heist_drill_bag_01b", "ch_prop_laptop_01a", "ch_prop_laserdrill_01a", "ch_prop_marker_01a", "ch_prop_mesa_door_01a", "ch_prop_mil_crate_02b", "ch_prop_paleto_bay_door_01a", "ch_prop_parking_hut_2", "ch_prop_pit_sign_01a", "ch_prop_podium_casino_01a", "ch_prop_rockford_door_l_01a", "ch_prop_rockford_door_r_01a", "ch_prop_stunt_landing_zone_01a", "ch_prop_swipe_card_01a", "ch_prop_swipe_card_01b", "ch_prop_swipe_card_01c", "ch_prop_swipe_card_01d", "ch_prop_table_casino_short_01a", "ch_prop_table_casino_short_02a", "ch_prop_table_casino_tall_01a", "ch_prop_toolbox_01a", "ch_prop_toolbox_01b", "ch_prop_track_bend_bar_lc", "ch_prop_track_bend_lc", "ch_prop_track_ch_bend_45", "ch_prop_track_ch_bend_135", "ch_prop_track_ch_bend_180d", "ch_prop_track_ch_bend_bar_45d", "ch_prop_track_ch_bend_bar_135", "ch_prop_track_ch_bend_bar_l_b", "ch_prop_track_ch_bend_bar_l_out", "ch_prop_track_ch_bend_bar_m_in", "ch_prop_track_ch_bend_bar_m_out", "ch_prop_track_ch_straight_bar_m", "ch_prop_track_ch_straight_bar_s", "ch_prop_track_ch_straight_bar_s_s", "ch_prop_track_paddock_01", "ch_prop_track_pit_garage_01a", "ch_prop_track_pit_stop_01", "ch_prop_tree_01a", "ch_prop_tree_02a", "ch_prop_tree_03a", "ch_prop_tunnel_hang_lamp", "ch_prop_tunnel_hang_lamp2", "ch_prop_tunnel_tripod_lampa", "ch_prop_vault_dimaondbox_01a", "ch_prop_vault_drill_01a", "ch_prop_vault_key_card_01a", "ch_prop_vault_painting_01a", "ch_prop_vault_painting_01b", "ch_prop_vault_painting_01c", "ch_prop_vault_painting_01d", "ch_prop_vault_painting_01e", "ch_prop_vault_painting_01f", "ch_prop_vault_painting_01g", "ch_prop_vault_painting_01h", "ch_prop_vault_painting_01i", "ch_prop_vault_painting_01j", "ch_prop_vault_painting_roll_01a", "ch_prop_west_door_l_01a", "ch_prop_west_door_r_01a", "ch_prop_whiteboard", "ch_prop_whiteboard_02", "ch_prop_whiteboard_03", "ch_prop_whiteboard_04", "ch_des_heist3_tunnel_01", "ch_des_heist3_tunnel_02", "ch_des_heist3_tunnel_03", "ch_des_heist3_tunnel_04", "ch_des_heist3_tunnel_end", "ch_des_heist3_vault_01", "ch_des_heist3_vault_02", "ch_des_heist3_vault_end", "ch_p_ch_jimmy_necklace_2_s", "ch_p_ch_rope_tie_01a", "ch_p_m_bag_var01_arm_s", "ch_p_m_bag_var02_arm_s", "ch_p_m_bag_var03_arm_s", "ch_p_m_bag_var04_arm_s", "ch_p_m_bag_var05_arm_s", "ch_p_m_bag_var06_arm_s", "ch_p_m_bag_var07_arm_s", "ch_p_m_bag_var08_arm_s", "ch_p_m_bag_var09_arm_s", "ch_p_m_bag_var10_arm_s", "ch_prop_10dollar_pile_01a", "ch_prop_20dollar_pile_01a", "ch_prop_adv_case_sm_flash", "ch_prop_arc_love_btn_burn", "ch_prop_arc_love_btn_clam", "ch_prop_arc_love_btn_cold", "ch_prop_arc_love_btn_flush", "ch_prop_arc_love_btn_gett", "ch_prop_arc_love_btn_hot", "ch_prop_arc_love_btn_ice", "ch_prop_arc_love_btn_sizz", "ch_prop_arc_love_btn_thaw", "ch_prop_arc_love_btn_warm", "ch_prop_arcade_degenatron_01a", "ch_prop_arcade_drone_01a", "ch_prop_arcade_drone_01b", "ch_prop_arcade_drone_01c", "ch_prop_arcade_drone_01d", "ch_prop_arcade_drone_01e", "ch_prop_arcade_fortune_01a", "ch_prop_arcade_fortune_coin_01a", "ch_prop_arcade_fortune_door_01a", "ch_prop_arcade_gun_01a", "ch_prop_arcade_gun_bird_01a", "ch_prop_arcade_invade_01a", "ch_prop_arcade_invade_01a_scrn_uv", "ch_prop_arcade_jukebox_01a", "ch_prop_arcade_love_01a", "ch_prop_arcade_monkey_01a", "ch_prop_arcade_penetrator_01a", "ch_prop_arcade_race_01a", "ch_prop_arcade_race_01b", "ch_prop_arcade_race_02a", "ch_prop_arcade_race_bike_02a", "ch_prop_arcade_race_car_01a", "ch_prop_arcade_race_truck_01a", "ch_prop_arcade_race_truck_01b", "ch_prop_arcade_space_01a", "ch_prop_arcade_space_01a_scrn_uv", "ch_prop_arcade_street_01a", "ch_prop_arcade_street_01a_off", "ch_prop_arcade_street_01a_scrn_uv", "ch_prop_arcade_street_01b", "ch_prop_arcade_street_01b_off", "ch_prop_arcade_street_01c", "ch_prop_arcade_street_01c_off", "ch_prop_arcade_street_01d", "ch_prop_arcade_street_01d_off", "ch_prop_arcade_street_02b", "ch_prop_arcade_wizard_01a", "ch_prop_arcade_wizard_01a_scrn_uv", "ch_prop_arcade_wpngun_01a", "ch_prop_baggage_scanner_01a", "ch_prop_board_wpnwall_01a", "ch_prop_board_wpnwall_02a", "ch_prop_boring_machine_01a", "ch_prop_boring_machine_01b", "ch_prop_box_ammo01a", "ch_prop_box_ammo01b", "ch_prop_calculator_01a", "ch_prop_cash_low_trolly_01a", "ch_prop_cash_low_trolly_01b", "ch_prop_cash_low_trolly_01c", "ch_prop_casino_bin_01a", "ch_prop_casino_blackjack_01a", "ch_prop_casino_blackjack_01b", "ch_prop_casino_chair_01a", "ch_prop_casino_chair_01b", "ch_prop_casino_chair_01c", "ch_prop_casino_diamonds_01a", "ch_prop_casino_diamonds_01b", "ch_prop_casino_diamonds_02a", "ch_prop_casino_diamonds_03a", "ch_prop_casino_door_01a", "ch_prop_casino_door_01b", "ch_prop_casino_door_01c", "ch_prop_casino_door_01d", "ch_prop_casino_door_01e", "ch_prop_casino_door_01f", "ch_prop_casino_door_01g", "ch_prop_casino_door_02a", "ch_prop_casino_drinks_trolley01", "ch_prop_casino_drone_01a", "ch_prop_casino_drone_02a", "ch_prop_casino_drone_broken01a", "ch_prop_casino_keypad_01", "ch_prop_casino_keypad_02", "ch_prop_casino_lucky_wheel_01a", "ch_prop_casino_poker_01a", "ch_prop_casino_poker_01b", "ch_prop_casino_roulette_01a", "ch_prop_casino_roulette_01b", "ch_prop_casino_slot_01a", "ch_prop_casino_slot_02a", "ch_prop_casino_slot_03a", "ch_prop_casino_slot_04a", "ch_prop_casino_slot_04b", "ch_prop_casino_slot_05a", "ch_prop_casino_slot_06a", "ch_prop_casino_slot_07a", "ch_prop_casino_slot_08a", "ch_prop_casino_stool_02a", "ch_prop_casino_till_01a", "ch_prop_casino_track_chair_01", "ch_prop_casino_videowall", "ch_prop_ch_aircon_l_broken03", "ch_prop_ch_arcade_big_screen", "ch_prop_ch_arcade_fan_axis", "ch_prop_ch_arcade_safe_body", "ch_prop_ch_arcade_safe_door", "ch_prop_ch_bag_01a", "ch_prop_ch_bag_02a", "ch_prop_ch_bay_elev_door", "ch_prop_ch_bloodymachete_01a", "ch_prop_ch_blueprint_board_01a", "ch_prop_ch_boodyhand_01a", "ch_prop_ch_boodyhand_01b", "ch_prop_ch_boodyhand_01c", "ch_prop_ch_boodyhand_01d", "ch_prop_ch_bottle_holder_01a", "ch_prop_ch_box_ammo_06a", "ch_prop_ch_camera_01", "ch_prop_ch_cartridge_01a", "ch_prop_ch_cartridge_01b", "ch_prop_ch_cartridge_01c", "ch_prop_ch_case_01a", "ch_prop_ch_case_sm_01x", "ch_prop_ch_cash_trolly_01a", "ch_prop_ch_cash_trolly_01b", "ch_prop_ch_cash_trolly_01c", "ch_prop_ch_cashtrolley_01a", "ch_prop_ch_casino_button_01a", "ch_prop_ch_casino_button_01b", "ch_prop_ch_casino_door_01c", "ch_prop_ch_casino_shutter01x", "ch_prop_ch_cctv_cam_01a", "ch_prop_ch_cctv_cam_02a", "ch_prop_ch_cctv_wall_atta_01a", "ch_prop_ch_chemset_01a", "ch_prop_ch_chemset_01b", "ch_prop_ch_cockroach_tub_01a", "ch_prop_ch_coffe_table_02", "ch_prop_ch_corridor_door_beam", "ch_prop_ch_corridor_door_derelict", "ch_prop_ch_corridor_door_flat", "ch_prop_ch_crate_01a", "ch_prop_ch_crate_empty_01a", "ch_prop_ch_crate_full_01a", "ch_prop_ch_desk_lamp", "ch_prop_ch_diamond_xmastree", "ch_prop_ch_duffbag_gruppe_01a", "ch_prop_ch_duffbag_stealth_01a", "ch_prop_ch_duffelbag_01x", "ch_prop_ch_entrance_door_beam", "ch_prop_ch_entrance_door_derelict", "ch_prop_ch_entrance_door_flat", "ch_prop_ch_explosive_01a", "ch_prop_ch_fib_01a", "ch_prop_ch_fuse_box_01a", "ch_prop_ch_gazebo_01", "ch_prop_ch_gendoor_01", "ch_prop_ch_generator_01a", "ch_prop_ch_glassdoor_01", "ch_prop_ch_guncase_01a", "ch_prop_ch_hatch_liftshaft_01a", "ch_prop_ch_heist_drill", "ch_prop_ch_hole_01a", "ch_prop_ch_lamp_01", "ch_prop_ch_lamp_ceiling_01a", "ch_prop_ch_lamp_ceiling_02a", "ch_prop_ch_lamp_ceiling_02b", "ch_prop_ch_lamp_ceiling_03a", "ch_prop_ch_lamp_ceiling_04a", "ch_prop_ch_lamp_ceiling_g_01a", "ch_prop_ch_lamp_ceiling_g_01b", "ch_prop_ch_lamp_ceiling_w_01a", "ch_prop_ch_lamp_ceiling_w_01b", "ch_prop_ch_lamp_wall_01a", "ch_prop_ch_laundry_machine_01a", "ch_prop_ch_laundry_shelving_01a", "ch_prop_ch_laundry_shelving_01b", "ch_prop_ch_laundry_shelving_01c", "ch_prop_ch_laundry_shelving_02a", "ch_prop_ch_laundry_trolley_01a", "ch_prop_ch_laundry_trolley_01b", "ch_prop_ch_ld_bomb_01a", "ch_prop_ch_liftdoor_l_01a", "ch_prop_ch_liftdoor_r_01a", "ch_prop_ch_lobay_gate01", "ch_prop_ch_lobay_pillar", "ch_prop_ch_lobay_pillar02", "ch_prop_ch_lobby_pillar_03a", "ch_prop_ch_lobby_pillar_04a", "ch_prop_ch_maint_sign_01", "ch_prop_ch_malldoors_l_01a", "ch_prop_ch_malldoors_r_01a", "ch_prop_ch_metal_detector_01a", "ch_prop_ch_mobile_jammer_01x", "ch_prop_ch_moneybag_01a", "ch_prop_ch_monitor_01a", "ch_prop_ch_morgue_01a", "ch_prop_ch_ped_rug_01a", "ch_prop_ch_penthousedoor_01a", "ch_prop_ch_phone_ing_01a", "ch_prop_ch_phone_ing_02a", "ch_prop_ch_planter_01", "ch_prop_ch_race_gantry_02", "ch_prop_ch_race_gantry_03", "ch_prop_ch_race_gantry_04", "ch_prop_ch_race_gantry_05", "ch_prop_ch_ramp_lock_01a", "ch_prop_ch_room_trolly_01a", "ch_prop_ch_rubble_pile", "ch_prop_ch_schedule_01a", "ch_prop_ch_sec_cabinet_01a", "ch_prop_ch_sec_cabinet_01b", "ch_prop_ch_sec_cabinet_01c", "ch_prop_ch_sec_cabinet_01d", "ch_prop_ch_sec_cabinet_01e", "ch_prop_ch_sec_cabinet_01f", "ch_prop_ch_sec_cabinet_01g", "ch_prop_ch_sec_cabinet_01h", "ch_prop_ch_sec_cabinet_01i", "ch_prop_ch_sec_cabinet_01j", "ch_prop_ch_sec_cabinet_02a", "ch_prop_ch_sec_cabinet_03a", "ch_prop_ch_sec_cabinet_04a", "ch_prop_ch_sec_cabinet_05a", "ch_prop_ch_secure_door_l", "ch_prop_ch_secure_door_r", "ch_prop_ch_securesupport_half01x", "ch_prop_ch_security_case_01a", "ch_prop_ch_security_case_02a", "ch_prop_ch_security_monitor_01a", "ch_prop_ch_security_monitor_01b", "ch_prop_ch_serialkiller_01a", "ch_prop_ch_service_door_01a", "ch_prop_ch_service_door_01b", "ch_prop_ch_service_door_02a", "ch_prop_ch_service_door_02b", "ch_prop_ch_service_door_02c", "ch_prop_ch_service_door_02d", "ch_prop_ch_service_door_03a", "ch_prop_ch_service_door_03b", "ch_prop_ch_service_locker_01a", "ch_prop_ch_service_locker_01b", "ch_prop_ch_service_locker_01c", "ch_prop_ch_service_locker_02a", "ch_prop_ch_service_locker_02b", "ch_prop_ch_service_pillar_01a", "ch_prop_ch_service_pillar_02a", "ch_prop_ch_service_trolley_01a", "ch_prop_ch_side_panel01", "ch_prop_ch_side_panel02", "ch_prop_ch_toilet_door_beam", "ch_prop_ch_toilet_door_derelict", "ch_prop_ch_toilet_door_flat", "ch_prop_ch_top_panel01", "ch_prop_ch_top_panel02", "ch_prop_ch_tray_01a", "ch_prop_ch_trolly_01a", "ch_prop_ch_trophy_brawler_01a", "ch_prop_ch_trophy_cabs_01a", "ch_prop_ch_trophy_claw_01a", "ch_prop_ch_trophy_gunner_01a", "ch_prop_ch_trophy_king_01a", "ch_prop_ch_trophy_love_01a", "ch_prop_ch_trophy_monkey_01a", "ch_prop_ch_trophy_patriot_01a", "ch_prop_ch_trophy_racer_01a", "ch_prop_ch_trophy_retro_01a", "ch_prop_ch_trophy_strife_01a", "ch_prop_ch_trophy_teller_01a", "ch_prop_ch_tunnel_door_01_l", "ch_prop_ch_tunnel_door_01_r", "ch_prop_ch_tunnel_door01a", "ch_prop_ch_tunnel_fake_wall", "ch_prop_ch_tunnel_worklight", "ch_prop_ch_tv_rt_01a", "ch_prop_ch_uni_stacks_01a", "ch_prop_ch_uni_stacks_02a", "ch_prop_ch_unplugged_01a", "ch_prop_ch_usb_drive01x", "ch_prop_ch_utility_door_01a", "ch_prop_ch_utility_door_01b", "ch_prop_ch_utility_light_wall_01a", "ch_prop_ch_valet_01a", "ch_prop_ch_vase_01a", "db_apart_01_", "db_apart_02d_", "db_apart_02_", "db_apart_03d_", "db_apart_03_", "db_apart_05d_", "db_apart_05_", "db_apart_06", "db_apart_06d_", "db_apart_07d_", "db_apart_07_", "db_apart_08d_", "db_apart_08_", "db_apart_09d_", "db_apart_09_", "db_apart_10d_", "db_apart_10_", "des_cables_root", "des_door_root", "des_door_start", "des_farmhs_root1", "des_farmhs_root2", "des_farmhs_root3", "des_farmhs_root4", "des_farmhs_root5", "des_farmhs_root6", "des_farmhs_root7", "des_farmhs_root8", "des_fibstair_end", "des_fibstair_root", "des_fibstair_start", "des_fib_ceil2_end", "des_fib_ceil2_root", "des_fib_ceil2_start", "des_fib_ceil_end", "des_fib_ceil_root", "des_fib_ceil_rootb", "des_fib_ceil_start", "des_finale_tunnel_end", "des_finale_tunnel_root000", "des_finale_tunnel_root001", "des_finale_tunnel_root002", "des_finale_tunnel_root003", "des_finale_tunnel_root004", "des_finale_tunnel_start", "des_finale_vault_end", "des_finale_vault_root001", "des_finale_vault_root002", "des_finale_vault_root003", "des_finale_vault_root004", "des_finale_vault_start", "des_floor_end", "des_floor_root", "des_floor_start", "des_frenchdoors_end", "des_frenchdoors_root", "des_frenchdoors_rootb", "des_frenchdoors_start", "des_gasstation_skin01", "des_gasstation_skin02", "des_gasstation_tiles_root", "des_glass_end", "des_glass_root", "des_glass_root2", "des_glass_root3", "des_glass_root4", "des_glass_start", "des_hospitaldoors_end", "des_hospitaldoors_skin_root1", "des_hospitaldoors_skin_root2", "des_hospitaldoors_skin_root3", "des_hospitaldoors_start", "des_hospitaldoors_start_old", "des_jewel_cab2_end", "des_jewel_cab2_root", "des_jewel_cab2_rootb", "des_jewel_cab2_start", "des_jewel_cab3_end", "des_jewel_cab3_root", "des_jewel_cab3_rootb", "des_jewel_cab3_start", "des_jewel_cab4_root", "des_jewel_cab4_rootb", "des_jewel_cab4_start", "des_jewel_cab_end", "des_jewel_cab_root", "des_jewel_cab_root2", "des_jewel_cab_start", "des_light_panel_end", "des_light_panel_root", "des_light_panel_start", "des_methtrailer_skin_root003", "des_plog_decal_root", "des_plog_door_end", "des_plog_door_root", "des_plog_door_start", "des_plog_light_root", "des_plog_vent_root", "des_protree_root", "des_railing_root", "des_scaffolding_root", "des_scaffolding_tank_root", "des_server_root", "des_server_start", "des_shipsink_02", "des_shipsink_03",  "des_showroom_end", "des_showroom_root", "des_showroom_root2", "des_showroom_root3", "des_showroom_root4", "des_showroom_root5", "des_showroom_start", "des_smash2_root005", "des_smash2_root006", "des_smash2_root2", "des_smash2_root3", "des_smash2_root4", "des_stilthouse_root", "des_stilthouse_root2", "des_stilthouse_root3", "des_stilthouse_root4", "des_stilthouse_root5", "des_stilthouse_root7", "des_stilthouse_root8", "des_stilthouse_root9",  "des_tankerexplosion_01", "des_tankerexplosion_02", "des_trailerparka_02", "des_trailerparkb_02", "des_trailerparkc_02", "des_trailerparkd_02", "des_traincrash_root2", "des_traincrash_root3", "des_traincrash_root4", "des_traincrash_root5", "des_traincrash_root6", "des_traincrash_root7", "des_tvsmash_end", "des_tvsmash_root", "des_tvsmash_start", "des_vaultdoor001_root001", "des_vaultdoor001_root002", "des_vaultdoor001_root003", "des_vaultdoor001_root004", "des_vaultdoor001_root005", "des_vaultdoor001_root006", "des_vaultdoor001_skin001", "des_vaultdoor001_start", "ela_wdn_02_", "ela_wdn_02_decal", "ela_wdn_04_", "ela_wdn_04_decals", "exile1_lightrig", "exile1_reflecttrig", "fib_3_qte_lightrig", "fib_5_mcs_10_lightrig", "fib_cl2_cbl2_root", "fib_cl2_cbl_root", "fib_cl2_frm_root", "fib_cl2_vent_root", "fire_mesh_root", "hei_bio_heist_card", "hei_bio_heist_gear", "hei_bio_heist_nv_goggles", "hei_bio_heist_parachute", "hei_bio_heist_rebreather", "hei_bio_heist_specialops", "hei_heist_acc_artgolddisc_01", "hei_heist_acc_artgolddisc_02", "hei_heist_acc_artgolddisc_03", "hei_heist_acc_artgolddisc_04", "hei_heist_acc_artwalll_01", "hei_heist_acc_artwallm_01", "hei_heist_acc_bowl_01", "hei_heist_acc_bowl_02", "hei_heist_acc_box_trinket_01", "hei_heist_acc_box_trinket_02", "hei_heist_acc_candles_01", "hei_heist_acc_flowers_01", "hei_heist_acc_flowers_02", "hei_heist_acc_jar_01", "hei_heist_acc_jar_02", "hei_heist_acc_plant_tall_01", "hei_heist_acc_rughidel_01", "hei_heist_acc_rugwooll_01", "hei_heist_acc_rugwooll_02", "hei_heist_acc_rugwooll_03", "hei_heist_acc_sculpture_01", "hei_heist_acc_storebox_01", "hei_heist_acc_tray_01", "hei_heist_acc_vase_01", "hei_heist_acc_vase_02", "hei_heist_acc_vase_03", "hei_heist_apart2_door", "hei_heist_bank_usb_drive", "hei_heist_bed_chestdrawer_04", "hei_heist_bed_double_08", "hei_heist_bed_table_dble_04", "hei_heist_crosstrainer_s", "hei_heist_cs_beer_box", "hei_heist_din_chair_01", "hei_heist_din_chair_02", "hei_heist_din_chair_03", "hei_heist_din_chair_04", "hei_heist_din_chair_05", "hei_heist_din_chair_06", "hei_heist_din_chair_08", "hei_heist_din_chair_09", "hei_heist_din_table_01", "hei_heist_din_table_04", "hei_heist_din_table_06", "hei_heist_din_table_07", "hei_heist_flecca_crate", "hei_heist_flecca_items", "hei_heist_flecca_weapons", "hei_heist_kit_bin_01", "hei_heist_kit_coffeemachine_01", "hei_heist_lit_floorlamp_01", "hei_heist_lit_floorlamp_02", "hei_heist_lit_floorlamp_03", "hei_heist_lit_floorlamp_04", "hei_heist_lit_floorlamp_05", "hei_heist_lit_lamptable_02", "hei_heist_lit_lamptable_03", "hei_heist_lit_lamptable_04", "hei_heist_lit_lamptable_06", "hei_heist_lit_lightpendant_003", "hei_heist_lit_lightpendant_01", "hei_heist_lit_lightpendant_02", "hei_heist_sh_bong_01", "hei_heist_stn_benchshort", "hei_heist_stn_chairarm_01", "hei_heist_stn_chairarm_03", "hei_heist_stn_chairarm_04", "hei_heist_stn_chairarm_06", "hei_heist_stn_chairstrip_01", "hei_heist_stn_sofa2seat_02", "hei_heist_stn_sofa2seat_03", "hei_heist_stn_sofa2seat_06", "hei_heist_stn_sofa3seat_01", "hei_heist_stn_sofa3seat_02", "hei_heist_stn_sofa3seat_06", "hei_heist_stn_sofacorn_05", "hei_heist_stn_sofacorn_06", "hei_heist_str_avunitl_01", "hei_heist_str_avunitl_03", "hei_heist_str_avunits_01", "hei_heist_str_sideboardl_02", "hei_heist_str_sideboardl_03", "hei_heist_str_sideboardl_04", "hei_heist_str_sideboardl_05", "hei_heist_str_sideboards_02", "hei_heist_tab_coffee_05", "hei_heist_tab_coffee_06", "hei_heist_tab_coffee_07", "hei_heist_tab_sidelrg_01", "hei_heist_tab_sidelrg_02", "hei_heist_tab_sidelrg_04", "hei_heist_tab_sidesml_01", "hei_heist_tab_sidesml_02", "hei_hw1_06_glue2", "hei_hw1_06_grnd_low2", "hei_hw1_06_road", "hei_hw1_24_details", "hei_hw1_24_ov03", "hei_hw1_blimp_dummy", "hei_id2_lod_emissive_ref", "hei_id2_lod_id2_water_lod_slod4", "hei_id2_lod_slod4", "hei_mph_selectclothslrig", "hei_mph_selectclothslrig_01", "hei_mph_selectclothslrig_02", "hei_mph_selectclothslrig_03", "hei_mph_selectclothslrig_04", "hei_prison_heist_clothes", "hei_prison_heist_docs", "hei_prison_heist_jerry_can", "hei_prison_heist_parachute", "hei_prison_heist_schedule", "hei_prison_heist_weapons", "hei_prop_bank_alarm_01", "hei_prop_bank_plug", "hei_prop_bank_transponder", "hei_prop_bh1_08_hdoor", "hei_prop_bh1_08_mp_gar2", "hei_prop_bh1_09_mph_l", "hei_prop_bh1_09_mph_r", "hei_prop_bh1_09_mp_gar2", "hei_prop_carrier_bombs_1", "hei_prop_carrier_cargo_01a", "hei_prop_carrier_cargo_02a", "hei_prop_carrier_cargo_04a", "hei_prop_carrier_cargo_04b", "hei_prop_carrier_cargo_04b_s", "hei_prop_carrier_cargo_04c", "hei_prop_carrier_cargo_05a", "hei_prop_carrier_cargo_05a_s", "hei_prop_carrier_cargo_05b", "hei_prop_carrier_cargo_05b_s", "hei_prop_carrier_crate_01a", "hei_prop_carrier_crate_01a_s", "hei_prop_carrier_crate_01b", "hei_prop_carrier_crate_01b_s", "hei_prop_carrier_docklight_01", "hei_prop_carrier_docklight_02", "hei_prop_carrier_jet", "hei_prop_carrier_ord_01", "hei_prop_carrier_phone_01", "hei_prop_carrier_phone_02", "hei_prop_carrier_radar_1_l1", "hei_prop_carrier_stair_01a", "hei_prop_carrier_stair_01b", "hei_prop_carrier_trailer_01", "hei_prop_cash_crate_empty", "hei_prop_cash_crate_half_full", "hei_prop_cc_metalcover_01", "hei_prop_cntrdoor_mph_l", "hei_prop_cntrdoor_mph_r", "hei_prop_com_mp_gar2", "hei_prop_container_lock", "hei_prop_crate_stack_01", "hei_prop_dlc_heist_board", "hei_prop_dlc_heist_map", "hei_prop_dlc_tablet", "hei_prop_drug_statue_01", "hei_prop_drug_statue_base_01", "hei_prop_drug_statue_base_02", "hei_prop_drug_statue_box_01", "hei_prop_drug_statue_box_01b", "hei_prop_drug_statue_box_big", "hei_prop_drug_statue_stack", "hei_prop_drug_statue_top", "hei_prop_dt1_20_mph_door_l", "hei_prop_dt1_20_mph_door_r", "hei_prop_dt1_20_mp_gar2", "hei_prop_gold_trolly_empty", "hei_prop_gold_trolly_half_full", "hei_prop_heist_ammo_box", "hei_prop_heist_apecrate", "hei_prop_heist_binbag", "hei_prop_heist_box", "hei_prop_heist_card_hack", "hei_prop_heist_card_hack_02", "hei_prop_heist_carrierdoorl", "hei_prop_heist_carrierdoorr", "hei_prop_heist_cash_bag_01", "hei_prop_heist_cash_pile", "hei_prop_heist_cutscene_doora", "hei_prop_heist_cutscene_doorb", "hei_prop_heist_cutscene_doorc_l", "hei_prop_heist_cutscene_doorc_r", "hei_prop_heist_deposit_box", "hei_prop_heist_docs_01", "hei_prop_heist_drill", "hei_prop_heist_drug_tub_01", "hei_prop_heist_emp", "hei_prop_heist_gold_bar", "hei_prop_heist_hook_01", "hei_prop_heist_hose_01", "hei_prop_heist_lockerdoor", "hei_prop_heist_magnet", "hei_prop_heist_off_chair", "hei_prop_heist_overlay_01", "hei_prop_heist_pc_01", "hei_prop_heist_pic_01", "hei_prop_heist_pic_02", "hei_prop_heist_pic_03", "hei_prop_heist_pic_04", "hei_prop_heist_pic_05", "hei_prop_heist_pic_06", "hei_prop_heist_pic_07", "hei_prop_heist_pic_08", "hei_prop_heist_pic_09", "hei_prop_heist_pic_10", "hei_prop_heist_pic_11", "hei_prop_heist_pic_12", "hei_prop_heist_pic_13", "hei_prop_heist_pic_14", "hei_prop_heist_plinth", "hei_prop_heist_roller", "hei_prop_heist_roller_base", "hei_prop_heist_roller_up", "hei_prop_heist_safedepdoor", "hei_prop_heist_safedeposit", "hei_prop_heist_sec_door", "hei_prop_heist_thermite", "hei_prop_heist_thermite_case", "hei_prop_heist_thermite_flash", "hei_prop_heist_transponder", "hei_prop_heist_trevor_case", "hei_prop_heist_tub_truck", "hei_prop_heist_tug", "hei_prop_heist_tumbler_empty", "hei_prop_heist_weed_block_01", "hei_prop_heist_weed_block_01b", "hei_prop_heist_weed_pallet", "hei_prop_heist_weed_pallet_02", "hei_prop_heist_wooden_box", "hei_prop_hei_ammo_pile", "hei_prop_hei_ammo_pile_02", "hei_prop_hei_ammo_single", "hei_prop_hei_bankdoor_new", "hei_prop_hei_bio_panel", "hei_prop_hei_cash_trolly_01", "hei_prop_hei_cash_trolly_02", "hei_prop_hei_cash_trolly_03", "hei_prop_hei_cont_light_01", "hei_prop_hei_cs_keyboard", "hei_prop_hei_cs_stape_01", "hei_prop_hei_cs_stape_02", "hei_prop_hei_drill_hole", "hei_prop_hei_drug_case", "hei_prop_hei_drug_pack_01a", "hei_prop_hei_drug_pack_01b", "hei_prop_hei_drug_pack_02", "hei_prop_hei_garage_plug", "hei_prop_hei_hose_nozzle", "hei_prop_hei_id_bank", "hei_prop_hei_id_bio", "hei_prop_hei_keypad_01", "hei_prop_hei_keypad_02", "hei_prop_hei_keypad_03", "hei_prop_hei_med_benchset1", "hei_prop_hei_monitor_overlay", "hei_prop_hei_monitor_police_01", "hei_prop_hei_muster_01", "hei_prop_hei_new_plant", "hei_prop_hei_paper_bag", "hei_prop_hei_pic_hl_gurkhas", "hei_prop_hei_pic_hl_keycodes", "hei_prop_hei_pic_hl_raid", "hei_prop_hei_pic_hl_valkyrie", "hei_prop_hei_pic_pb_break", "hei_prop_hei_pic_pb_bus", "hei_prop_hei_pic_pb_plane", "hei_prop_hei_pic_pb_station", "hei_prop_hei_pic_ps_bike", "hei_prop_hei_pic_ps_convoy", "hei_prop_hei_pic_ps_hack", "hei_prop_hei_pic_ps_job", "hei_prop_hei_pic_ps_trucks", "hei_prop_hei_pic_ps_witsec", "hei_prop_hei_pic_ub_prep", "hei_prop_hei_pic_ub_prep02", "hei_prop_hei_pic_ub_prep02b", "hei_prop_hei_post_note_01", "hei_prop_hei_securitypanel", "hei_prop_hei_security_case", "hei_prop_hei_shack_door", "hei_prop_hei_shack_window", "hei_prop_hei_skid_chair", "hei_prop_hei_timetable", "hei_prop_hei_tree_fallen_02", "hei_prop_hei_warehousetrolly_02", "hei_prop_hst_icon_01", "hei_prop_hst_laptop", "hei_prop_hst_usb_drive", "hei_prop_hst_usb_drive_light", "hei_prop_mini_sever_01", "hei_prop_mini_sever_02", "hei_prop_mini_sever_03", "hei_prop_mini_sever_broken", "hei_prop_pill_bag_01", "hei_prop_server_piece_01", "hei_prop_server_piece_lights", "hei_prop_sm_14_mph_door_l", "hei_prop_sm_14_mph_door_r", "hei_prop_sm_14_mp_gar2", "hei_prop_ss1_mpint_door_l", "hei_prop_ss1_mpint_door_r", "hei_prop_ss1_mpint_garage2", "hei_prop_station_gate", "hei_prop_sync_door01a", "hei_prop_sync_door01b", "hei_prop_sync_door02a", "hei_prop_sync_door02b", "hei_prop_sync_door03", "hei_prop_sync_door04", "hei_prop_sync_door05a", "hei_prop_sync_door05b", "hei_prop_sync_door07", "hei_prop_sync_door_06", "hei_prop_sync_door_08", "hei_prop_sync_door_09", "hei_prop_sync_door_10", "hei_prop_wall_alarm_off", "hei_prop_wall_alarm_on", "hei_prop_wall_light_10a_cr", "hei_prop_yah_lounger", "hei_prop_yah_seat_01", "hei_prop_yah_seat_02", "hei_prop_yah_seat_03", "hei_prop_yah_table_01", "hei_prop_yah_table_02", "hei_prop_yah_table_03", "hei_prop_zip_tie_positioned", "hei_prop_zip_tie_straight", "hei_p_attache_case_01b_s", "hei_p_attache_case_shut", "hei_p_attache_case_shut_s", "hei_p_f_bag_var20_arm_s", "hei_p_f_bag_var6_bus_s", "hei_p_f_bag_var7_bus_s", "hei_p_generic_heist_guns", "hei_p_heist_flecca_bag", "hei_p_heist_flecca_drill", "hei_p_heist_flecca_mask", "hei_p_hei_champ_flute_s", "hei_p_m_bag_var18_bus_s", "hei_p_m_bag_var22_arm_s", "hei_p_parachute_s_female", "hei_p_post_heist_biker_stash", "hei_p_post_heist_coke_stash", "hei_p_post_heist_meth_stash", "hei_p_post_heist_trash_stash", "hei_p_post_heist_weed_stash", "hei_p_pre_heist_biker", "hei_p_pre_heist_biker_guns", "hei_p_pre_heist_coke", "hei_p_pre_heist_steal_meth", "hei_p_pre_heist_trash", "hei_p_pre_heist_weed", "hei_ss1_02_garagedtls", "hei_ss1_02_grd01", "hei_ss1_11_detail01b", "hei_ss1_11_flats", "hei_ss1_11_flatsgrd01", "hei_ss1_11_land01", "hei_ss1_11_lobbysofa", "hei_v_ilev_bk_gate2_molten", "hei_v_ilev_bk_gate2_pris", "hei_v_ilev_bk_gate_molten", "hei_v_ilev_bk_gate_pris", "hei_v_ilev_bk_safegate_molten", "hei_v_ilev_bk_safegate_pris", "hei_v_ilev_fh_heistdoor1", "hei_v_ilev_fh_heistdoor2", "ind_prop_dlc_flag_02", "ind_prop_dlc_roller_car", "ind_prop_dlc_roller_car_02", "ind_prop_firework_01", "ind_prop_firework_02", "ind_prop_firework_03", "ind_prop_firework_04", "lf_house_01d_", "lf_house_04d_", "lf_house_04_", "lf_house_05d_", "lf_house_05_", "lf_house_07d_", "lf_house_07_", "lf_house_08d_", "lf_house_08_", "lf_house_09d_", "lf_house_09_", "lf_house_10d_", "lf_house_10_", "lf_house_11d_", "lf_house_11_", "lf_house_13d_", "lf_house_13_", "lf_house_14d_", "lf_house_14_", "lf_house_15d_", "lf_house_15_", "lf_house_16d_", "lf_house_16_", "lf_house_17d_", "lf_house_17_", "lf_house_18d_", "lf_house_18_", "lf_house_19d_", "lf_house_19_", "lf_house_20d_", "lf_house_20_", "lts_prop_lts_elecbox_24", "lts_prop_lts_elecbox_24b", "lts_prop_lts_offroad_tyres01", "lts_prop_lts_ramp_01", "lts_prop_lts_ramp_02", "lts_prop_lts_ramp_03", "lts_prop_tumbler_01_s2", "lts_prop_tumbler_cs2_s2", "lts_p_para_bag_lts_s", "lts_p_para_bag_pilot2_s", "lts_p_para_pilot2_sp_s", "lr_bobbleheadlightrig", "lux_prop_ashtray_luxe_01", "lr_prop_boathousedoor_l", "lr_prop_boathousedoor_r", "lr_prop_carburettor_01", "lr_prop_carkey_fob", "lr_prop_clubstool_01", "lr_prop_rail_col_01", "lr_prop_suitbag_01", "lr_prop_supermod_door_01", "lr_prop_supermod_lframe", "lr2_prop_gc_grenades", "lr2_prop_gc_grenades_02", "lr2_prop_ibi_01", "lr2_prop_ibi_02", "lux_p_champ_flute_s", "lux_p_pour_champagne_luxe", "lux_p_pour_champagne_s", "lux_prop_chassis_ref_luxe", "lux_prop_cigar_01_luxe", "lux_prop_lighter_luxe", "marina_xr_rocks_02", "marina_xr_rocks_03", "marina_xr_rocks_04", "marina_xr_rocks_05", "marina_xr_rocks_06", "miss_rub_couch_01_l1", "ng_proc_beerbottle_01a", "ng_proc_beerbottle_01b", "ng_proc_beerbottle_01c", "ng_proc_box_02a", "ng_proc_box_02b", "ng_proc_brkbottle_02a", "ng_proc_brkbottle_02b", "ng_proc_brkbottle_02c", "ng_proc_brkbottle_02d", "ng_proc_brkbottle_02e", "ng_proc_brkbottle_02f", "ng_proc_brkbottle_02g", "ng_proc_candy01a", "ng_proc_cigar01a", "ng_proc_cigarette01a", "ng_proc_cigbuts01a", "ng_proc_cigbuts02a", "ng_proc_cigbuts03a", "ng_proc_ciglight01a", "ng_proc_cigpak01a", "ng_proc_cigpak01b", "ng_proc_cigpak01c", "ng_proc_coffee_01a", "ng_proc_coffee_02a", "ng_proc_coffee_03b", "ng_proc_coffee_04b", "ng_proc_concchips01", "ng_proc_concchips02", "ng_proc_concchips03", "ng_proc_concchips04", "ng_proc_crate_01a", "ng_proc_crate_02a", "ng_proc_crate_03a", "ng_proc_crate_04a", "ng_proc_drug01a002", "ng_proc_food_aple1a", "ng_proc_food_aple2a", "ng_proc_food_burg01a", "ng_proc_food_burg02a", "ng_proc_food_burg02c", "ng_proc_food_chips01a", "ng_proc_food_chips01b", "ng_proc_food_chips01c", "ng_proc_food_nana1a", "ng_proc_food_nana2a", "ng_proc_food_ornge1a", "ng_proc_inhaler01a", "ng_proc_leaves01", "ng_proc_leaves02", "ng_proc_leaves03", "ng_proc_leaves04", "ng_proc_leaves05", "ng_proc_leaves06", "ng_proc_leaves07", "ng_proc_leaves08", "ng_proc_litter_plasbot1", "ng_proc_litter_plasbot2", "ng_proc_litter_plasbot3", "ng_proc_oilcan01a", "ng_proc_ojbot_01a", "ng_proc_paintcan01a_sh", "ng_proc_paper_01a", "ng_proc_paper_02a", "ng_proc_paper_03a", "ng_proc_paper_03a001", "ng_proc_paper_burger01a", "ng_proc_paper_mag_1a", "ng_proc_paper_mag_1b", "ng_proc_paper_news_globe", "ng_proc_paper_news_meteor", "ng_proc_paper_news_quik", "ng_proc_paper_news_rag", "ng_proc_pizza01a", "ng_proc_rebar_01a", "ng_proc_sodabot_01a", "ng_proc_sodacan_01a", "ng_proc_sodacan_01b", "ng_proc_sodacan_02a", "ng_proc_sodacan_02b", "ng_proc_sodacan_02c", "ng_proc_sodacan_02d", "ng_proc_sodacan_03a", "ng_proc_sodacan_03b", "ng_proc_sodacan_04a", "ng_proc_sodacup_01a", "ng_proc_sodacup_01b", "ng_proc_sodacup_01c", "ng_proc_sodacup_02a", "ng_proc_sodacup_02b", "ng_proc_sodacup_02b001", "ng_proc_sodacup_02c", "ng_proc_sodacup_03a", "ng_proc_sodacup_03c", "ng_proc_sodacup_lid", "ng_proc_spraycan01a", "ng_proc_spraycan01b", "ng_proc_syrnige01a", "ng_proc_tyre_01", "ng_proc_tyre_dam1", "ng_proc_wood_01a", "ng_proc_wood_02a", "physics_glasses", "physics_hat", "physics_hat2", "pil_prop_fs_safedoor", "pil_prop_fs_target_base", "pil_prop_pilot_icon_01", "pil_p_para_bag_pilot_s", "pil_p_para_pilot_sp_s", "po1_lod_emi_proxy_slod3", "pop_v_bank_door_l", "pop_v_bank_door_r", "port_xr_bins", "port_xr_contpod_01", "port_xr_contpod_02", "port_xr_contpod_03", "port_xr_cont_01", "port_xr_cont_02", "port_xr_cont_03", "port_xr_cont_04", "port_xr_cont_sm", "port_xr_cranelg", "port_xr_door_01", "port_xr_door_04", "port_xr_door_05", "port_xr_elecbox_1", "port_xr_elecbox_2", "port_xr_elecbox_3", "port_xr_fire", "port_xr_firehose", "port_xr_lifeboat", "port_xr_lifep", "port_xr_lightdoor", "port_xr_lighthal", "port_xr_lightspot", "port_xr_railbal", "port_xr_railside", "port_xr_railst", "port_xr_spoolsm", "port_xr_stairs_01", "port_xr_tiedown", "proair_hoc_puck", "proc_litter_01", "proc_litter_02",  "proc_mntn_stone02", "proc_mntn_stone03", "proc_searock_01", "proc_searock_02", "proc_searock_03", "proc_sml_stones01", "proc_sml_stones02", "proc_sml_stones03", "prop_1st_hostage_scene", "prop_1st_prologue_scene", "prop_2nd_hostage_scene", "prop_50s_jukebox", "prop_a4_pile_01", "prop_a4_sheet_01", "prop_a4_sheet_02", "prop_a4_sheet_03", "prop_a4_sheet_04", "prop_a4_sheet_05", "prop_abat_roller_static", "prop_abat_slide", "prop_acc_guitar_01", "prop_acc_guitar_01_d1", "prop_aerial_01a", "prop_aerial_01b", "prop_aerial_01c", "prop_aerial_01d", "prop_afsign_amun", "prop_afsign_vbike", "prop_agave_01", "prop_agave_02", "prop_aiprort_sign_01", "prop_aiprort_sign_02", "prop_aircon_m_09", "prop_aircon_s_01a", "prop_aircon_s_02a", "prop_aircon_s_02b", "prop_aircon_s_03a", "prop_aircon_s_03b", "prop_aircon_s_04a", "prop_aircon_s_05a", "prop_aircon_s_06a", "prop_aircon_s_07a", "prop_aircon_s_07b", "prop_airdancer_base", "prop_airhockey_01", "prop_airport_sale_sign", "prop_air_bagloader", "prop_air_bagloader2", "prop_air_bagloader2_cr", "prop_air_barrier", "prop_air_bench_01", "prop_air_bench_02", "prop_air_bigradar_slod", "prop_air_blastfence_01", "prop_air_blastfence_02", "prop_air_bridge01", "prop_air_bridge02", "prop_air_cargoloader_01", "prop_air_cargo_03a", "prop_air_cargo_04a", "prop_air_cargo_04b", "prop_air_cargo_04c", "prop_air_chock_01", "prop_air_chock_03", "prop_air_chock_04", "prop_air_fueltrail1", "prop_air_fueltrail2", "prop_air_gasbogey_01", "prop_air_generator_01", "prop_air_generator_03", "prop_air_hoc_paddle_01", "prop_air_hoc_paddle_02", "prop_air_lights_01a", "prop_air_lights_01b", "prop_air_lights_03a", "prop_air_luggtrolley", "prop_air_mast_01", "prop_air_mast_02", "prop_air_monhut_01", "prop_air_monhut_02", "prop_air_monhut_03", "prop_air_monhut_03_cr", "prop_air_propeller01", "prop_air_stair_01", "prop_air_stair_02", "prop_air_stair_03", "prop_air_stair_04a", "prop_air_stair_04a_cr", "prop_air_stair_04b", "prop_air_stair_04b_cr", "prop_air_towbar_01", "prop_air_towbar_02", "prop_air_towbar_03", "prop_air_trailer_4a", "prop_air_trailer_4b", "prop_air_trailer_4c", "prop_air_watertank1", "prop_air_watertank2", "prop_air_windsock_base", "prop_air_woodsteps", "prop_alarm_01", "prop_alarm_02", "prop_alien_egg_01", "prop_aloevera_01", "prop_amanda_note_01", "prop_amanda_note_01b", "prop_amb_40oz_03", "prop_amb_beer_bottle", "prop_amb_ciggy_01", "prop_amb_donut", "prop_amb_handbag_01", "prop_amb_phone", "prop_amp_01", "prop_am_box_wood_01", "prop_anim_cash_note", "prop_anim_cash_note_b", "prop_anim_cash_pile_01", "prop_anim_cash_pile_02", "prop_apple_box_01", "prop_apple_box_02", "prop_arcade_01", "prop_arcade_02", "prop_arc_blueprints_01", "prop_armchair_01", "prop_armenian_gate", "prop_armour_pickup", "prop_arm_gate_l", "prop_arm_wrestle_01", "prop_artgallery_02_dl", "prop_artgallery_02_dr", "prop_artgallery_dl", "prop_artgallery_dr", "prop_artifact_01", "prop_ar_arrow_1", "prop_ar_arrow_2", "prop_ar_arrow_3", "prop_ar_ring_01", "prop_ashtray_01", "prop_asteroid_01", "prop_atm_02", "prop_atm_03", "prop_attache_case_01", "prop_aviators_01", "prop_a_base_bars_01", "prop_a_trailer_door_01", "prop_bahammenu", "prop_ballistic_shield", "prop_ballistic_shield_lod1", "prop_bandsaw_01", "prop_bank_shutter", "prop_bank_vaultdoor", "prop_barbell_01", "prop_barbell_02", "prop_barbell_100kg", "prop_barbell_10kg", "prop_barbell_20kg", "prop_barbell_30kg", "prop_barbell_40kg", "prop_barbell_50kg", "prop_barbell_60kg", "prop_barbell_80kg", "prop_barier_conc_01b", "prop_barier_conc_01c", "prop_barier_conc_02b", "prop_barier_conc_02c", "prop_barier_conc_03a", "prop_barier_conc_04a", "prop_barier_conc_05a", "prop_barier_conc_05b", "prop_barn_door_l", "prop_barn_door_r", "prop_barrachneon", "prop_barrel_01a", "prop_barrel_02a", "prop_barrel_02b", "prop_barrel_03a", "prop_barrel_03d", "prop_barrel_float_1", "prop_barrel_float_2", "prop_barriercrash_03", "prop_barriercrash_04", "prop_barrier_wat_01a", "prop_barrier_wat_03b", "prop_barrier_work01c", "prop_barry_table_detail", "prop_bar_beerfridge_01", "prop_bar_coastbarr", "prop_bar_coastchamp", "prop_bar_coastdusc", "prop_bar_coastmount", "prop_bar_cooler_01", "prop_bar_cooler_03", "prop_bar_fridge_01", "prop_bar_fridge_02", "prop_bar_fridge_03", "prop_bar_fridge_04", "prop_bar_ice_01", "prop_bar_napkindisp", "prop_bar_pump_01", "prop_bar_pump_04", "prop_bar_pump_05", "prop_bar_pump_06", "prop_bar_pump_07", "prop_bar_pump_08", "prop_bar_pump_09", "prop_bar_pump_10", "prop_bar_sink_01", "prop_bar_stool_01", "prop_basejump_target_01", "prop_basketball_net", "prop_battery_01", "prop_battery_02", "prop_bball_arcade_01", "prop_bbq_2", "prop_bbq_3", "prop_bbq_4_l1", "prop_beachbag_01", "prop_beachbag_02", "prop_beachbag_03", "prop_beachbag_04", "prop_beachbag_05", "prop_beachbag_06", "prop_beachbag_combo_01", "prop_beachbag_combo_02", "prop_beachball_02", "prop_beachflag_le", "prop_beachf_01_cr", "prop_beach_bars_01", "prop_beach_bars_02", "prop_beach_bbq", "prop_beach_dip_bars_01", "prop_beach_dip_bars_02", "prop_beach_fire", "prop_beach_lg_float", "prop_beach_lg_stretch", "prop_beach_lg_surf", "prop_beach_punchbag", "prop_beach_rings_01", "prop_beach_sculp_01", "prop_beach_towel_02", "prop_beach_volball01", "prop_beach_volball02", "prop_beerneon", "prop_beer_bison", "prop_beer_box_01", "prop_beer_neon_01", "prop_beer_neon_02", "prop_beer_neon_03", "prop_beer_neon_04", "prop_beggers_sign_01", "prop_beggers_sign_02", "prop_beggers_sign_03", "prop_beggers_sign_04", "prop_bench_01b", "prop_bench_01c", "prop_bench_04", "prop_bench_05", "prop_bench_09", "prop_beta_tape", "prop_beware_dog_sign", "prop_bh1_03_gate_l", "prop_bh1_03_gate_r", "prop_bh1_08_mp_gar", "prop_bh1_09_mp_gar", "prop_bh1_09_mp_l", "prop_bh1_09_mp_r", "prop_bh1_16_display", "prop_bh1_44_door_01l", "prop_bh1_44_door_01r", "prop_bh1_48_backdoor_l", "prop_bh1_48_backdoor_r", "prop_bh1_48_gate_1", "prop_bhhotel_door_l", "prop_bhhotel_door_r", "prop_big_bag_01", "prop_big_cin_screen", "prop_big_clock_01", "prop_big_shit_01", "prop_big_shit_02", "prop_bikerack_2", "prop_bikini_disp_01", "prop_bikini_disp_02", "prop_bikini_disp_03", "prop_bikini_disp_04", "prop_bikini_disp_05", "prop_bikini_disp_06", "prop_billboard_01", "prop_billboard_02", "prop_billboard_03", "prop_billboard_04", "prop_billboard_05", "prop_billboard_06", "prop_billboard_07", "prop_billboard_08", "prop_billboard_09", "prop_billboard_09wall", "prop_billboard_10", "prop_billboard_11", "prop_billboard_12", "prop_billboard_13", "prop_billboard_14", "prop_billboard_15", "prop_billboard_16", "prop_billb_frame01a", "prop_billb_frame01b", "prop_billb_frame03a", "prop_billb_frame03b", "prop_billb_frame03c", "prop_billb_frame04a", "prop_billb_frame04b", "prop_binoc_01", "prop_bin_04a", "prop_bin_10a", "prop_bin_10b", "prop_bin_11a", "prop_bin_11b", "prop_bin_12a", "prop_bin_13a", "prop_bin_14a", "prop_bin_14b", "prop_bin_beach_01d", "prop_bin_delpiero", "prop_bin_delpiero_b", "prop_biolab_g_door", "prop_biotech_store", "prop_bird_poo", "prop_bison_winch", "prop_blackjack_01", "prop_bleachers_01", "prop_bleachers_02", "prop_bleachers_03", "prop_bleachers_04", "prop_bleachers_04_cr", "prop_bleachers_05", "prop_bleachers_05_cr", "prop_blox_spray", "prop_bmu_01", "prop_bmu_01_b", "prop_bmu_02", "prop_bmu_02_ld", "prop_bmu_02_ld_cab", "prop_bmu_02_ld_sup", "prop_bmu_track01", "prop_bmu_track02", "prop_bmu_track03", "prop_bodyarmour_02", "prop_bodyarmour_03", "prop_bodyarmour_04", "prop_bodyarmour_05", "prop_bodyarmour_06", "prop_bollard_01a", "prop_bollard_01b", "prop_bollard_01c", "prop_bollard_03a", "prop_bomb_01", "prop_bomb_01_s", "prop_bonesaw", "prop_bongos_01", "prop_bong_01", "prop_boogieboard_01", "prop_boogieboard_02", "prop_boogieboard_03", "prop_boogieboard_04", "prop_boogieboard_05", "prop_boogieboard_06", "prop_boogieboard_07", "prop_boogieboard_08", "prop_boogieboard_09", "prop_boogieboard_10", "prop_boombox_01", "prop_bottle_cap_01", "prop_bowling_ball", "prop_bowling_pin", "prop_bowl_crisps", "prop_boxcar5_handle", "prop_boxing_glove_01", "prop_boxpile_10a", "prop_boxpile_10b", "prop_box_ammo01a", "prop_box_ammo02a", "prop_box_ammo03a_set", "prop_box_ammo03a_set2", "prop_box_ammo04a", "prop_box_ammo05b", "prop_box_ammo07a", "prop_box_ammo07b", "prop_box_guncase_01a", "prop_box_guncase_02a", "prop_box_guncase_03a", "prop_box_tea01a", "prop_box_wood05a", "prop_box_wood05b", "prop_box_wood08a", "prop_breadbin_01", "prop_bread_rack_01", "prop_bread_rack_02", "prop_broken_cboard_p1", "prop_broken_cboard_p2", "prop_broken_cell_gate_01", "prop_bskball_01", "prop_bs_map_door_01", "prop_buckets_02", "prop_bucket_01a", "prop_bucket_01b", "prop_bucket_02a", "prop_buck_spade_01", "prop_buck_spade_02", "prop_buck_spade_03", "prop_buck_spade_04", "prop_buck_spade_05", "prop_buck_spade_06", "prop_buck_spade_07", "prop_buck_spade_08", "prop_buck_spade_09", "prop_buck_spade_10", "prop_bumper_01", "prop_bumper_02", "prop_bumper_03", "prop_bumper_04", "prop_bumper_05", "prop_bumper_06", "prop_bumper_car_01", "prop_burto_gate_01", "prop_bush_dead_02", "prop_bush_grape_01", "prop_bush_ivy_01_1m", "prop_bush_ivy_01_2m", "prop_bush_ivy_01_bk", "prop_bush_ivy_01_l", "prop_bush_ivy_01_pot", "prop_bush_ivy_01_r", "prop_bush_ivy_01_top", "prop_bush_ivy_02_1m", "prop_bush_ivy_02_2m", "prop_bush_ivy_02_l", "prop_bush_ivy_02_pot", "prop_bush_ivy_02_r", "prop_bush_ivy_02_top", "prop_bush_lrg_01", "prop_bush_lrg_01b", "prop_bush_lrg_01c", "prop_bush_lrg_01c_cr", "prop_bush_lrg_01d", "prop_bush_lrg_01e", "prop_bush_lrg_01e_cr", "prop_bush_lrg_01e_cr2", "prop_bush_lrg_02", "prop_bush_lrg_02b", "prop_bush_lrg_03", "prop_bush_lrg_04b", "prop_bush_lrg_04c", "prop_bush_lrg_04d", "prop_bush_med_01", "prop_bush_med_02", "prop_bush_med_03", "prop_bush_med_03_cr", "prop_bush_med_03_cr2", "prop_bush_med_05", "prop_bush_med_06", "prop_bush_med_07", "prop_bush_neat_01", "prop_bush_neat_02", "prop_bush_neat_03", "prop_bush_neat_04", "prop_bush_neat_05", "prop_bush_neat_06", "prop_bush_neat_07", "prop_bush_neat_08", "prop_bush_ornament_01", "prop_bush_ornament_02", "prop_bush_ornament_03", "prop_bush_ornament_04", "prop_busker_hat_01", "prop_byard_bench01", "prop_byard_bench02", "prop_byard_block_01", "prop_byard_boat01", "prop_byard_boat02", "prop_byard_chains01", "prop_byard_dingy", "prop_byard_elecbox01", "prop_byard_elecbox02", "prop_byard_elecbox03", "prop_byard_elecbox04", "prop_byard_floatpile", "prop_byard_float_01", "prop_byard_float_01b", "prop_byard_float_02", "prop_byard_float_02b", "prop_byard_hoist", "prop_byard_hoist_2", "prop_byard_hoses01", "prop_byard_hoses02", "prop_byard_ladder01", "prop_byard_machine01", "prop_byard_machine02", "prop_byard_machine03", "prop_byard_motor_01", "prop_byard_motor_02", "prop_byard_motor_03", "prop_byard_net02", "prop_byard_phone", "prop_byard_pipes01", "prop_byard_pipe_01", "prop_byard_planks01", "prop_byard_pulley01", "prop_byard_rack", "prop_byard_ramp", "prop_byard_rampold", "prop_byard_rampold_cr", "prop_byard_rowboat1", "prop_byard_rowboat2", "prop_byard_rowboat3", "prop_byard_rowboat4", "prop_byard_rowboat5", "prop_byard_scfhold01", "prop_byard_sleeper01", "prop_byard_sleeper02", "prop_byard_steps_01", "prop_byard_tank_01", "prop_byard_trailer01", "prop_byard_trailer02", "prop_b_board_blank", "prop_c4_final", "prop_c4_final_green", "prop_c4_num_0001", "prop_c4_num_0002", "prop_c4_num_0003", "prop_cabinet_01", "prop_cabinet_01b", "prop_cabinet_02b", "prop_cablespool_01a", "prop_cablespool_01b", "prop_cablespool_02", "prop_cablespool_03", "prop_cablespool_04", "prop_cablespool_05", "prop_cablespool_06", "prop_cable_hook_01", "prop_camera_strap", "prop_candy_pqs", "prop_can_canoe", "prop_cap_01", "prop_cap_01b", "prop_cap_row_01", "prop_cap_row_01b", "prop_cap_row_02", "prop_cap_row_02b", "prop_carcreeper", "prop_cargo_int", "prop_carjack", "prop_carjack_l2", "prop_carrier_bag_01", "prop_carrier_bag_01_lod", "prop_cartwheel_01", "prop_carwash_roller_horz", "prop_carwash_roller_vert", "prop_car_battery_01", "prop_car_bonnet_01", "prop_car_bonnet_02", "prop_car_door_01", "prop_car_door_02", "prop_car_door_03", "prop_car_door_04", "prop_car_engine_01", "prop_car_exhaust_01", "prop_car_ignition", "prop_car_seat", "prop_casey_sec_id", "prop_cash_case_01", "prop_cash_case_02", "prop_cash_crate_01", "prop_cash_dep_bag_01", "prop_cash_envelope_01", "prop_cash_note_01", "prop_cash_pile_01", "prop_cash_pile_02", "prop_cash_trolly", "prop_casino_door_01l", "prop_casino_door_01r", "prop_cattlecrush", "prop_cat_tail_01", "prop_cctv_02_sm", "prop_cctv_cont_01", "prop_cctv_cont_03", "prop_cctv_cont_04", "prop_cctv_cont_05", "prop_cctv_cont_06", "prop_cctv_mon_02", "prop_cctv_unit_01", "prop_cctv_unit_02", "prop_cctv_unit_05", "prop_cementmixer_01a", "prop_cementmixer_02a", "prop_ceramic_jug_01", "prop_ceramic_jug_cork", "prop_ch1_07_door_01l", "prop_ch1_07_door_01r", "prop_ch1_07_door_02l", "prop_ch1_07_door_02r", "prop_ch2_05d_g_door", "prop_ch2_07b_20_g_door", "prop_ch2_09b_door", "prop_ch2_09c_garage_door", "prop_ch3_01_trlrdoor_l", "prop_ch3_01_trlrdoor_r", "prop_ch3_04_door_01l", "prop_ch3_04_door_01r", "prop_ch3_04_door_02", "prop_chair_01a", "prop_chair_01b", "prop_chair_02", "prop_chair_03", "prop_chair_04a", "prop_chair_04b", "prop_chair_05", "prop_chair_06", "prop_chair_07", "prop_chair_08", "prop_chair_09", "prop_chair_10", "prop_chair_pile_01", "prop_chall_lamp_01", "prop_chall_lamp_01n", "prop_chall_lamp_02", "prop_chateau_chair_01", "prop_cheetah_covered", "prop_chem_grill", "prop_chem_grill_bit", "prop_chem_vial_02", "prop_chem_vial_02b", "prop_cherenneon", "prop_chickencoop_a", "prop_chip_fryer", "prop_choc_ego", "prop_choc_meto", "prop_choc_pq", "prop_ch_025c_g_door_01", "prop_cigar_01", "prop_cigar_02", "prop_cigar_03", "prop_cigar_pack_01", "prop_cigar_pack_02", "prop_cj_big_boat", "prop_clapper_brd_01", "prop_cleaver", "prop_cliff_paper", "prop_clippers_01", "prop_clothes_rail_02", "prop_clothes_rail_03", "prop_clothes_rail_2b", "prop_clothes_tub_01", "prop_clown_chair", "prop_cntrdoor_ld_l", "prop_cntrdoor_ld_r", "prop_coathook_01", "prop_cockneon", "prop_coffee_cup_trailer", "prop_coffin_02", "prop_coffin_02b", "prop_coke_block_01", "prop_coke_block_half_a", "prop_coke_block_half_b", "prop_compressor_01", "prop_compressor_02", "prop_compressor_03", "prop_com_gar_door_01", "prop_com_ls_door_01", "prop_conc_sacks_02a", "prop_cone_float_1", "prop_conschute", "prop_consign_01c", "prop_consign_02a", "prop_conslift_base", "prop_conslift_brace", "prop_conslift_cage", "prop_conslift_door", "prop_conslift_lift", "prop_conslift_rail", "prop_conslift_rail2", "prop_conslift_steps", "prop_console_01", "prop_construcionlamp_01", "prop_const_fence01a", "prop_const_fence01b", "prop_const_fence01b_cr", "prop_const_fence02a", "prop_const_fence02b", "prop_const_fence03a_cr", "prop_const_fence03b", "prop_const_fence03b_cr", "prop_cons_crate", "prop_cons_plank", "prop_cons_ply01", "prop_cons_ply02", "prop_container_01a", "prop_container_01b", "prop_container_01c", "prop_container_01d", "prop_container_01e", "prop_container_01f", "prop_container_01g", "prop_container_01h", "prop_container_01mb", "prop_container_02a", "prop_container_03a", "prop_container_03b", "prop_container_03mb", "prop_container_03_ld", "prop_container_04a", "prop_container_04mb", "prop_container_05mb", "prop_container_door_mb_l", "prop_container_door_mb_r", "prop_container_hole", "prop_container_ld", "prop_container_ld2", "prop_container_old1", "prop_contnr_pile_01a", "prop_controller_01", "prop_control_rm_door_01", "prop_cont_chiller_01", "prop_cooker_03", "prop_copier_01", "prop_copper_pan", "prop_coral_01", "prop_coral_02", "prop_coral_03", "prop_coral_bush_01", "prop_coral_flat_01", "prop_coral_flat_01_l1", "prop_coral_flat_02", "prop_coral_flat_brainy", "prop_coral_flat_clam", "prop_coral_grass_01", "prop_coral_grass_02", "prop_coral_kelp_01", "prop_coral_kelp_01_l1", "prop_coral_kelp_02", "prop_coral_kelp_02_l1", "prop_coral_kelp_03", "prop_coral_kelp_03a", "prop_coral_kelp_03b", "prop_coral_kelp_03c", "prop_coral_kelp_03d", "prop_coral_kelp_03_l1", "prop_coral_kelp_04", "prop_coral_kelp_04_l1", "prop_coral_pillar_01", "prop_coral_pillar_02", "prop_coral_spikey_01", "prop_coral_stone_03", "prop_coral_stone_04", "prop_coral_sweed_01", "prop_coral_sweed_02", "prop_coral_sweed_03", "prop_coral_sweed_04", "prop_cora_clam_01", "prop_cork_board", "prop_couch_01", "prop_couch_03", "prop_couch_04", "prop_couch_lg_02", "prop_couch_lg_05", "prop_couch_lg_06", "prop_couch_lg_07", "prop_couch_lg_08", "prop_couch_sm1_07", "prop_couch_sm2_07", "prop_couch_sm_02", "prop_couch_sm_05", "prop_couch_sm_06", "prop_couch_sm_07", "prop_crane_01_truck1", "prop_crane_01_truck2", "prop_cranial_saw", "prop_crashed_heli", "prop_cratepile_07a_l1", "prop_crate_01a", "prop_crate_02a", "prop_crate_08a", "prop_crate_09a", "prop_crate_10a", "prop_crate_11a", "prop_crate_11b", "prop_crate_11c", "prop_crate_11d", "prop_crate_float_1", "prop_creosote_b_01", "prop_crisp", "prop_crisp_small", "prop_crosssaw_01", "prop_cs1_14b_traind", "prop_cs1_14b_traind_dam", "prop_cs4_05_tdoor", "prop_cs4_10_tr_gd_01", "prop_cs4_11_door", "prop_cs6_03_door_l", "prop_cs6_03_door_r", "prop_cs_20m_rope", "prop_cs_30m_rope", "prop_cs_abattoir_switch", "prop_cs_aircon_01", "prop_cs_aircon_fan", "prop_cs_amanda_shoe", "prop_cs_ashtray", "prop_cs_bandana", "prop_cs_bar", "prop_cs_beachtowel_01", "prop_cs_beer_bot_01", "prop_cs_beer_bot_01b", "prop_cs_beer_bot_01lod", "prop_cs_beer_bot_02", "prop_cs_beer_bot_03", "prop_cs_beer_bot_40oz", "prop_cs_beer_bot_40oz_02", "prop_cs_beer_bot_40oz_03", "prop_cs_beer_bot_test", "prop_cs_beer_box", "prop_cs_binder_01", "prop_cs_bin_01", "prop_cs_bin_01_lid", "prop_cs_bin_01_skinned", "prop_cs_bin_02", "prop_cs_bin_03", "prop_cs_book_01", "prop_cs_bottle_opener", "prop_cs_bowie_knife", "prop_cs_bowl_01", "prop_cs_bowl_01b", "prop_cs_box_clothes", "prop_cs_box_step", "prop_cs_brain_chunk", "prop_cs_bs_cup", "prop_cs_bucket_s", "prop_cs_bucket_s_lod", "prop_cs_burger_01", "prop_cs_business_card", "prop_cs_cardbox_01", "prop_cs_cashenvelope", "prop_cs_cash_note_01", "prop_cs_cctv", "prop_cs_champ_flute", "prop_cs_ciggy_01", "prop_cs_ciggy_01b", "prop_cs_clothes_box", "prop_cs_coke_line", "prop_cs_cont_latch", "prop_cs_crackpipe", "prop_cs_credit_card", "prop_cs_creeper_01", "prop_cs_crisps_01", "prop_cs_cuffs_01", "prop_cs_diaphram", "prop_cs_dildo_01", "prop_cs_documents_01", "prop_cs_dog_lead_2a", "prop_cs_dog_lead_2b", "prop_cs_dog_lead_2c", "prop_cs_dog_lead_3a", "prop_cs_dog_lead_3b", "prop_cs_dog_lead_a", "prop_cs_dog_lead_a_s", "prop_cs_dog_lead_b", "prop_cs_dog_lead_b_s", "prop_cs_dog_lead_c", "prop_cs_duffel_01", "prop_cs_duffel_01b", "prop_cs_dumpster_01a", "prop_cs_dumpster_lidl", "prop_cs_dumpster_lidr", "prop_cs_dvd", "prop_cs_dvd_case", "prop_cs_dvd_player", "prop_cs_envolope_01", "prop_cs_fertilizer", "prop_cs_film_reel_01", "prop_cs_focussheet1", "prop_cs_folding_chair_01", "prop_cs_fork", "prop_cs_frank_photo", "prop_cs_freightdoor_l1", "prop_cs_freightdoor_r1", "prop_cs_fridge", "prop_cs_fridge_door", "prop_cs_fuel_hose", "prop_cs_fuel_nozle", "prop_cs_gascutter_1", "prop_cs_gascutter_2", "prop_cs_glass_scrap", "prop_cs_gravyard_gate_l", "prop_cs_gravyard_gate_r", "prop_cs_gunrack", "prop_cs_hand_radio", "prop_cs_heist_bag_01", "prop_cs_heist_bag_02", "prop_cs_heist_bag_strap_01", "prop_cs_heist_rope", "prop_cs_heist_rope_b", "prop_cs_hotdog_01", "prop_cs_hotdog_02", "prop_cs_h_bag_strap_01", "prop_cs_ice_locker", "prop_cs_ice_locker_door_l", "prop_cs_ice_locker_door_r", "prop_cs_ilev_blind_01", "prop_cs_ironing_board", "prop_cs_katana_01", "prop_cs_kettle_01", "prop_cs_keyboard_01", "prop_cs_keys_01", "prop_cs_kitchen_cab_l2", "prop_cs_kitchen_cab_ld", "prop_cs_kitchen_cab_rd", "prop_cs_lazlow_ponytail", "prop_cs_lazlow_shirt_01", "prop_cs_lazlow_shirt_01b", "prop_cs_leaf", "prop_cs_leg_chain_01", "prop_cs_lester_crate", "prop_cs_lipstick", "prop_cs_magazine", "prop_cs_marker_01", "prop_cs_meth_pipe", "prop_cs_milk_01", "prop_cs_mini_tv", "prop_cs_mopbucket_01", "prop_cs_mop_s", "prop_cs_mouse_01", "prop_cs_nail_file", "prop_cs_newspaper", "prop_cs_office_chair", "prop_cs_overalls_01", "prop_cs_package_01", "prop_cs_padlock", "prop_cs_pamphlet_01", "prop_cs_panel_01", "prop_cs_panties", "prop_cs_panties_02", "prop_cs_panties_03", "prop_cs_paper_cup", "prop_cs_para_ropebit", "prop_cs_para_ropes", "prop_cs_pebble", "prop_cs_pebble_02", "prop_cs_petrol_can", "prop_cs_phone_01", "prop_cs_photoframe_01", "prop_cs_pills", "prop_cs_plane_int_01", "prop_cs_planning_photo", "prop_cs_plant_01", "prop_cs_plate_01", "prop_cs_polaroid", "prop_cs_police_torch", "prop_cs_pour_tube", "prop_cs_power_cell", "prop_cs_power_cord", "prop_cs_protest_sign_01", "prop_cs_protest_sign_02", "prop_cs_protest_sign_02b", "prop_cs_protest_sign_03", "prop_cs_protest_sign_04a", "prop_cs_protest_sign_04b", "prop_cs_rage_statue_p1", "prop_cs_rage_statue_p2", "prop_cs_remote_01", "prop_cs_rolled_paper", "prop_cs_rope_tie_01", "prop_cs_rub_binbag_01", "prop_cs_rub_box_01", "prop_cs_rub_box_02", "prop_cs_r_business_card", "prop_cs_sack_01", "prop_cs_saucer_01", "prop_cs_sc1_11_gate", "prop_cs_scissors", "prop_cs_script_bottle", "prop_cs_script_bottle_01", "prop_cs_server_drive", "prop_cs_sheers", "prop_cs_shirt_01", "prop_cs_shopping_bag", "prop_cs_shot_glass", "prop_cs_silver_tray", "prop_cs_sink_filler", "prop_cs_sink_filler_02", "prop_cs_sink_filler_03", "prop_cs_sm_27_gate", "prop_cs_sol_glasses", "prop_cs_spray_can", "prop_cs_steak", "prop_cs_stock_book", "prop_cs_street_binbag_01", "prop_cs_street_card_01", "prop_cs_street_card_02", "prop_cs_sub_hook_01", "prop_cs_sub_rope_01", "prop_cs_swipe_card", "prop_cs_tablet", "prop_cs_tablet_02", "prop_cs_toaster", "prop_cs_trev_overlay", "prop_cs_trolley_01", "prop_cs_trowel", "prop_cs_truck_ladder", "prop_cs_tshirt_ball_01", "prop_cs_tv_stand", "prop_cs_t_shirt_pile", "prop_cs_valve", "prop_cs_vent_cover", "prop_cs_vial_01", "prop_cs_walkie_talkie", "prop_cs_walking_stick", "prop_cs_whiskey_bottle", "prop_cs_whiskey_bot_stop", "prop_cs_wrench", "prop_cub_door_lifeblurb", "prop_cub_lifeblurb", "prop_cuff_keys_01", "prop_cup_saucer_01", "prop_curl_bar_01", "prop_damdoor_01", "prop_dart_1", "prop_dart_2", "prop_dart_bd_01", "prop_dart_bd_cab_01", "prop_defilied_ragdoll_01", "prop_desert_iron_01", "prop_detergent_01a", "prop_detergent_01b", "prop_devin_box_01", "prop_devin_box_closed", "prop_devin_box_dummy_01", "prop_devin_rope_01", "prop_diggerbkt_01", "prop_direct_chair_01", "prop_direct_chair_02", "prop_display_unit_01", "prop_display_unit_02", "prop_disp_cabinet_002", "prop_disp_cabinet_01", "prop_disp_razor_01", "prop_distantcar_day", "prop_distantcar_night", "prop_distantcar_truck", "prop_dj_deck_01", "prop_dj_deck_02", "prop_dock_bouy_1", "prop_dock_bouy_2", "prop_dock_bouy_3", "prop_dock_bouy_5", "prop_dock_crane_01", "prop_dock_crane_02", "prop_dock_crane_02_cab", "prop_dock_crane_02_hook", "prop_dock_crane_02_ld", "prop_dock_crane_04", "prop_dock_crane_lift", "prop_dock_float_1", "prop_dock_float_1b", "prop_dock_moor_01", "prop_dock_moor_04", "prop_dock_moor_05", "prop_dock_moor_06", "prop_dock_moor_07", "prop_dock_ropefloat", "prop_dock_ropetyre1", "prop_dock_ropetyre2", "prop_dock_ropetyre3", "prop_dock_rtg_01", "prop_dock_rtg_ld", "prop_dock_shippad", "prop_dock_sign_01", "prop_dock_woodpole1", "prop_dock_woodpole2", "prop_dock_woodpole3", "prop_dock_woodpole4", "prop_dock_woodpole5", "prop_dog_cage_01", "prop_dog_cage_02", "prop_dolly_01", "prop_dolly_02", "prop_donut_01", "prop_donut_02", "prop_donut_02b", "prop_door_01", "prop_door_balcony_frame", "prop_door_balcony_left", "prop_door_balcony_right", "prop_door_bell_01", "prop_double_grid_line", "prop_dress_disp_01", "prop_dress_disp_02", "prop_dress_disp_03", "prop_dress_disp_04", "prop_drop_armscrate_01", "prop_drop_armscrate_01b", "prop_drop_crate_01", "prop_drop_crate_01_set", "prop_drop_crate_01_set2", "prop_drug_burner", "prop_drug_package", "prop_drug_package_02", "prop_drywallpile_01", "prop_drywallpile_02", "prop_dt1_13_groundlight", "prop_dt1_13_walllightsource", "prop_dt1_20_mp_door_l", "prop_dt1_20_mp_door_r", "prop_dt1_20_mp_gar", "prop_ducktape_01", "prop_dummy_01", "prop_dummy_car", "prop_dummy_light", "prop_dummy_plane", "prop_dumpster_3a", "prop_dumpster_3step", "prop_dumpster_4a", "prop_dumpster_4b", "prop_dyn_pc", "prop_d_balcony_l_light", "prop_d_balcony_r_light", "prop_ear_defenders_01", "prop_ecg_01", "prop_ecg_01_cable_01", "prop_ecg_01_cable_02", "prop_ecola_can", "prop_egg_clock_01", "prop_ejector_seat_01", "prop_elecbox_03a", "prop_elecbox_10", "prop_elecbox_10_cr", "prop_elecbox_12", "prop_elecbox_13", "prop_elecbox_14", "prop_elecbox_15", "prop_elecbox_15_cr", "prop_elecbox_16", "prop_elecbox_17", "prop_elecbox_17_cr", "prop_elecbox_18", "prop_elecbox_19", "prop_elecbox_20", "prop_elecbox_21", "prop_elecbox_22", "prop_elecbox_23", "prop_elecbox_24", "prop_elecbox_24b", "prop_elecbox_25", "prop_el_guitar_01", "prop_el_guitar_02", "prop_el_guitar_03", "prop_el_tapeplayer_01", "prop_employee_month_01", "prop_employee_month_02", "prop_energy_drink", "prop_entityxf_covered", "prop_epsilon_door_l", "prop_epsilon_door_r", "prop_etricmotor_01", "prop_exercisebike", "prop_exer_bike_01", "prop_exer_bike_mg", "prop_faceoffice_door_l", "prop_faceoffice_door_r", "prop_face_rag_01", "prop_facgate_01", "prop_facgate_01b", "prop_facgate_02pole", "prop_facgate_02_l", "prop_facgate_03post", "prop_facgate_03_l", "prop_facgate_03_ld_l", "prop_facgate_03_ld_r", "prop_facgate_03_r", "prop_facgate_04_l", "prop_facgate_04_r", "prop_facgate_05_r", "prop_facgate_05_r_dam_l1", "prop_facgate_05_r_l1", "prop_facgate_06_l", "prop_facgate_06_r", "prop_facgate_07", "prop_facgate_07b", "prop_facgate_08", "prop_facgate_08_frame", "prop_facgate_08_ld2", "prop_facgate_id1_27", "prop_fac_machine_02", "prop_fag_packet_01", "prop_fan_01", "prop_fan_palm_01a", "prop_fax_01", "prop_fbi3_coffee_table", "prop_fbibombbin", "prop_fbibombcupbrd", "prop_fbibombfile", "prop_fbibombplant", "prop_feeder1", "prop_feeder1_cr", "prop_feed_sack_01", "prop_feed_sack_02", "prop_fence_log_01", "prop_fence_log_02", "prop_ferris_car_01", "prop_ferris_car_01_lod1", "prop_ff_counter_01", "prop_ff_counter_02", "prop_ff_counter_03", "prop_ff_noodle_01", "prop_ff_noodle_02", "prop_ff_shelves_01", "prop_ff_sink_01", "prop_ff_sink_02", "prop_fib_badge", "prop_fib_broken_window", "prop_fib_broken_window_2", "prop_fib_broken_window_3", "prop_fib_skylight_piece", "prop_film_cam_01", "prop_fireescape_01a", "prop_fireescape_01b", "prop_fireescape_02a", "prop_fireescape_02b", "prop_fire_driser_1a", "prop_fire_driser_1b", "prop_fire_driser_2b", "prop_fire_driser_3b", "prop_fire_driser_4a", "prop_fire_driser_4b", "prop_fire_hosereel", "prop_fire_hosereel_l1", "prop_fire_hydrant_2_l1", "prop_fishing_rod_01", "prop_fishing_rod_02", "prop_fish_slice_01", "prop_flagpole_1a", "prop_flagpole_2a", "prop_flagpole_3a", "prop_flare_01", "prop_flare_01b", "prop_flash_unit", "prop_flatbed_strap", "prop_flatbed_strap_b", "prop_flatscreen_overlay", "prop_flattrailer_01a", "prop_flattruck_01a", "prop_fleeca_atm", "prop_flight_box_01", "prop_flight_box_insert", "prop_flight_box_insert2", "prop_flipchair_01", "prop_floor_duster_01", "prop_fncconstruc_02a", "prop_fnccorgm_05a", "prop_fnccorgm_05b", "prop_fnccorgm_06a", "prop_fnccorgm_06b", "prop_fnclink_01gate1", "prop_fnclink_02gate1", "prop_fnclink_02gate5", "prop_fnclink_02gate6_l", "prop_fnclink_02gate6_r", "prop_fnclink_02gate7", "prop_fnclink_03gate1", "prop_fnclink_03gate2", "prop_fnclink_03gate4", "prop_fnclink_03gate5", "prop_fnclink_04gate1", "prop_fnclink_04h_l2", "prop_fnclink_06gate2", "prop_fnclink_06gate3", "prop_fnclink_06gatepost", "prop_fnclink_07gate1", "prop_fnclink_07gate2", "prop_fnclink_07gate3", "prop_fnclink_09gate1", "prop_fnclink_10a", "prop_fnclink_10b", "prop_fnclink_10c", "prop_fnclink_10d", "prop_fnclink_10e", "prop_fnclog_01a", "prop_fnclog_01b", "prop_fncpeir_03a", "prop_fncres_02a", "prop_fncres_02b", "prop_fncres_02c", "prop_fncres_02d", "prop_fncres_02_gate1", "prop_fncres_03gate1", "prop_fncres_05c_l1", "prop_fncsec_01a", "prop_fncsec_01b", "prop_fncsec_01crnr", "prop_fncsec_01gate", "prop_fncsec_01pole", "prop_fncsec_02a", "prop_fncsec_02pole", "prop_fncsec_04a", "prop_fncwood_11a_l1", "prop_fncwood_16a", "prop_fncwood_16b", "prop_fncwood_16c", "prop_fncwood_18a", "prop_folded_polo_shirt", "prop_folder_02", "prop_food_bin_01", "prop_food_bin_02", "prop_food_bs_bshelf", "prop_food_bs_cups01", "prop_food_bs_cups03", "prop_food_bs_soda_01", "prop_food_bs_soda_02", "prop_food_bs_tray_01", "prop_food_bs_tray_06", "prop_food_burg1", "prop_food_burg2", "prop_food_cb_bshelf", "prop_food_cb_burg01", "prop_food_cb_cups01", "prop_food_cb_donuts", "prop_food_cb_nugets", "prop_food_cb_soda_01", "prop_food_cb_soda_02", "prop_food_cb_tray_01", "prop_food_cups1", "prop_food_napkin_01", "prop_food_napkin_02", "prop_food_tray_01", "prop_food_van_01", "prop_food_van_02", "prop_forsalejr2", "prop_forsalejr3", "prop_forsalejr4", "prop_foundation_sponge", "prop_fountain1", "prop_fountain2", "prop_franklin_dl", "prop_freeweight_01", "prop_freeweight_02", "prop_fridge_01", "prop_fridge_03", "prop_front_seat_01", "prop_front_seat_02", "prop_front_seat_03", "prop_front_seat_04", "prop_front_seat_05", "prop_front_seat_06", "prop_front_seat_07", "prop_front_seat_row_01", "prop_fruitstand_b_nite", "prop_fruit_basket", "prop_ftowel_01", "prop_ftowel_07", "prop_ftowel_08", "prop_ftowel_10", "prop_f_b_insert_broken", "prop_f_duster_01_s", "prop_f_duster_02", "prop_gaffer_arm_bind", "prop_gaffer_arm_bind_cut", "prop_gaffer_leg_bind", "prop_gaffer_leg_bind_cut", "prop_gaffer_tape", "prop_gaffer_tape_strip", "prop_game_clock_01", "prop_game_clock_02", "prop_garden_dreamcatch_01", "prop_garden_edging_01", "prop_garden_edging_02", "prop_garden_zapper_01", "prop_gardnght_01", "prop_gar_door_01", "prop_gar_door_02", "prop_gar_door_03", "prop_gar_door_03_ld", "prop_gar_door_04", "prop_gar_door_05", "prop_gar_door_05_l", "prop_gar_door_05_r", "prop_gar_door_a_01", "prop_gar_door_plug", "prop_gascage01", "prop_gascyl_ramp_01", "prop_gascyl_ramp_door_01", "prop_gas_01", "prop_gas_02", "prop_gas_03", "prop_gas_04", "prop_gas_05", "prop_gas_grenade", "prop_gas_mask_hang_01bb", "prop_gatecom_02", "prop_gate_airport_01", "prop_gate_bridge_ld", "prop_gate_cult_01_l", "prop_gate_cult_01_r", "prop_gate_docks_ld", "prop_gate_farm_01a", "prop_gate_farm_post", "prop_gate_frame_01", "prop_gate_frame_02", "prop_gate_frame_04", "prop_gate_frame_05", "prop_gate_frame_06", "prop_gate_military_01", "prop_gate_prison_01", "prop_gate_tep_01_l", "prop_gate_tep_01_r", "prop_gazebo_03", "prop_gc_chair02", "prop_gd_ch2_08", "prop_generator_02a", "prop_generator_03a", "prop_generator_04", "prop_ghettoblast_01", "prop_ghettoblast_02", "prop_girder_01a", "prop_glasscutter_01", "prop_glass_suck_holder", "prop_glf_roller", "prop_glf_spreader", "prop_gold_bar", "prop_gold_cont_01", "prop_gold_cont_01b", "prop_gold_trolly", "prop_gold_trolly_full", "prop_gold_trolly_strap_01", "prop_golf_bag_01", "prop_golf_bag_01b", "prop_golf_bag_01c", "prop_golf_ball", "prop_golf_ball_p2", "prop_golf_ball_p3", "prop_golf_ball_p4", "prop_golf_ball_tee", "prop_golf_driver", "prop_golf_iron_01", "prop_golf_marker_01", "prop_golf_pitcher_01", "prop_golf_putter_01", "prop_golf_tee", "prop_golf_wood_01", "prop_grain_hopper", "prop_grapes_01", "prop_grapes_02", "prop_grass_dry_02", "prop_grass_dry_03", "prop_gravetomb_01a", "prop_gravetomb_02a", "prop_griddle_01", "prop_griddle_02", "prop_grumandoor_l", "prop_grumandoor_r", "prop_gshotsensor_01", "prop_gun_case_01", "prop_gun_case_02", "prop_gun_frame", "prop_hacky_sack_01", "prop_handdry_01", "prop_handdry_02", "prop_handrake", "prop_handtowels", "prop_hand_toilet", "prop_hanger_door_1", "prop_hard_hat_01", "prop_hat_box_01", "prop_hat_box_02", "prop_hat_box_03", "prop_hat_box_04", "prop_hat_box_05", "prop_hat_box_06", "prop_haybailer_01", "prop_haybale_01", "prop_haybale_02", "prop_haybale_stack_01", "prop_hayb_st_01_cr", "prop_hd_seats_01", "prop_headphones_01", "prop_headset_01", "prop_hedge_trimmer_01", "prop_helipad_01", "prop_helipad_02", "prop_henna_disp_01", "prop_henna_disp_02", "prop_henna_disp_03", "prop_hifi_01", "prop_hobo_stove_01", "prop_hockey_bag_01", "prop_hole_plug_01", "prop_holster_01", "prop_homeless_matress_01", "prop_homeless_matress_02", "prop_hose_1", "prop_hose_2", "prop_hose_3", "prop_hose_nozzle", "prop_hospitaldoors_start", "prop_hospital_door_l", "prop_hospital_door_r", "prop_hotel_clock_01", "prop_hotel_trolley", "prop_hottub2", "prop_hot_tub_coverd", "prop_huf_rag_01", "prop_huge_display_01", "prop_huge_display_02", "prop_hunterhide", "prop_hw1_03_gardoor_01", "prop_hw1_04_door_l1", "prop_hw1_04_door_r1", "prop_hw1_23_door", "prop_hwbowl_pseat_6x1", "prop_hwbowl_seat_01", "prop_hwbowl_seat_02", "prop_hwbowl_seat_03", "prop_hwbowl_seat_03b", "prop_hwbowl_seat_6x6", "prop_hydro_platform_01", "prop_ice_box_01", "prop_ice_box_01_l1", "prop_ice_cube_01", "prop_ice_cube_02", "prop_ice_cube_03", "prop_id2_11_gdoor", "prop_id2_20_clock", "prop_idol_01", "prop_idol_01_error", "prop_idol_case", "prop_idol_case_01", "prop_idol_case_02", "prop_id_21_gardoor_01", "prop_id_21_gardoor_02", "prop_indus_meet_door_l", "prop_indus_meet_door_r", "prop_ind_barge_01", "prop_ind_barge_01_cr", "prop_ind_barge_02", "prop_ind_coalcar_01", "prop_ind_coalcar_02", "prop_ind_coalcar_03", "prop_ind_conveyor_01", "prop_ind_conveyor_02", "prop_ind_conveyor_04", "prop_ind_crusher", "prop_ind_deiseltank", "prop_ind_light_01a", "prop_ind_light_01b", "prop_ind_light_01c", "prop_ind_mech_01c", "prop_ind_mech_02a", "prop_ind_mech_02b", "prop_ind_mech_03a", "prop_ind_mech_04a", "prop_ind_oldcrane", "prop_ind_washer_02", "prop_inflatearch_01", "prop_inflategate_01", "prop_ing_camera_01", "prop_ing_crowbar", "prop_inhaler_01", "prop_int_gate01", "prop_irish_sign_01", "prop_irish_sign_02", "prop_irish_sign_03", "prop_irish_sign_04", "prop_irish_sign_05", "prop_irish_sign_06", "prop_irish_sign_07", "prop_irish_sign_08", "prop_irish_sign_09", "prop_irish_sign_10", "prop_irish_sign_11", "prop_irish_sign_12", "prop_irish_sign_13", "prop_iron_01", "prop_jb700_covered", "prop_jeans_01", "prop_jetski_ramp_01", "prop_jet_bloodsplat_01", "prop_jewel_02a", "prop_jewel_02b", "prop_jewel_02c", "prop_jewel_03a", "prop_jewel_03b", "prop_jewel_04a", "prop_jewel_04b", "prop_jewel_pickup_new_01", "prop_juice_dispenser", "prop_juice_pool_01", "prop_jukebox_01", "prop_jukebox_02", "prop_jyard_block_01a", "prop_j_disptray_01", "prop_j_disptray_01b", "prop_j_disptray_01_dam", "prop_j_disptray_02", "prop_j_disptray_02_dam", "prop_j_disptray_03", "prop_j_disptray_03_dam", "prop_j_disptray_04", "prop_j_disptray_04b", "prop_j_disptray_05", "prop_j_disptray_05b", "prop_j_heist_pic_01", "prop_j_heist_pic_02", "prop_j_heist_pic_03", "prop_j_heist_pic_04", "prop_j_neck_disp_01", "prop_j_neck_disp_02", "prop_j_neck_disp_03", "prop_kayak_01", "prop_kayak_01b", "prop_kebab_grill", "prop_keg_01", "prop_kettle", "prop_kettle_01", "prop_keyboard_01a", "prop_keyboard_01b", "prop_kino_light_01", "prop_kino_light_03", "prop_kitch_juicer", "prop_kitch_pot_fry", "prop_kitch_pot_huge", "prop_kitch_pot_lrg", "prop_kitch_pot_lrg2", "prop_kitch_pot_med", "prop_kitch_pot_sm", "prop_knife", "prop_knife_stand", "prop_kt1_06_door_l", "prop_kt1_06_door_r", "prop_kt1_10_mpdoor_l", "prop_kt1_10_mpdoor_r", "prop_ladel", "prop_laptop_02_closed", "prop_laptop_jimmy", "prop_laptop_lester", "prop_laptop_lester2", "prop_large_gold", "prop_large_gold_alt_a", "prop_large_gold_alt_b", "prop_large_gold_alt_c", "prop_large_gold_empty", "prop_lawnmower_01", "prop_ld_alarm_01", "prop_ld_alarm_01_dam", "prop_ld_alarm_alert", "prop_ld_ammo_pack_01", "prop_ld_ammo_pack_02", "prop_ld_ammo_pack_03", "prop_ld_armour", "prop_ld_balcfnc_01a", "prop_ld_balcfnc_02a", "prop_ld_balcfnc_02c", "prop_ld_bankdoors_02", "prop_ld_barrier_01", "prop_ld_binbag_01", "prop_ld_bomb", "prop_ld_bomb_01", "prop_ld_bomb_01_open", "prop_ld_bomb_anim", "prop_ld_cable", "prop_ld_cable_tie_01", "prop_ld_can_01", "prop_ld_can_01b", "prop_ld_case_01", "prop_ld_case_01_lod", "prop_ld_case_01_s", "prop_ld_contact_card", "prop_ld_container", "prop_ld_contain_dl", "prop_ld_contain_dl2", "prop_ld_contain_dr", "prop_ld_contain_dr2", "prop_ld_cont_light_01", "prop_ld_crate_01", "prop_ld_crate_lid_01", "prop_ld_crocclips01", "prop_ld_crocclips02", "prop_ld_dummy_rope", "prop_ld_fags_01", "prop_ld_fags_02", "prop_ld_fan_01", "prop_ld_fan_01_old", "prop_ld_faucet", "prop_ld_ferris_wheel", "prop_ld_fireaxe", "prop_ld_flow_bottle", "prop_ld_fragwall_01a", "prop_ld_garaged_01", "prop_ld_gold_tooth", "prop_ld_greenscreen_01", "prop_ld_handbag", "prop_ld_handbag_s", "prop_ld_hat_01", "prop_ld_haybail", "prop_ld_hdd_01", "prop_ld_headset_01", "prop_ld_health_pack", "prop_ld_hook", "prop_ld_int_safe_01", "prop_ld_jail_door", "prop_ld_jeans_01", "prop_ld_jeans_02", "prop_ld_jerrycan_01", "prop_ld_keypad_01", "prop_ld_keypad_01b", "prop_ld_keypad_01b_lod", "prop_ld_lap_top", "prop_ld_monitor_01", "prop_ld_peep_slider", "prop_ld_pipe_single_01", "prop_ld_planning_pin_01", "prop_ld_planning_pin_02", "prop_ld_planning_pin_03", "prop_ld_purse_01", "prop_ld_purse_01_lod", "prop_ld_rail_01", "prop_ld_rail_02", "prop_ld_rope_t", "prop_ld_rubble_01", "prop_ld_rubble_02", "prop_ld_rubble_03", "prop_ld_rubble_04", "prop_ld_rub_binbag_01", "prop_ld_scrap", "prop_ld_shirt_01", "prop_ld_shoe_01", "prop_ld_shoe_02", "prop_ld_shovel", "prop_ld_shovel_dirt", "prop_ld_snack_01", "prop_ld_suitcase_01", "prop_ld_suitcase_02", "prop_ld_test_01", "prop_ld_toilet_01", "prop_ld_tooth", "prop_ld_tshirt_01", "prop_ld_tshirt_02", "prop_ld_vault_door", "prop_ld_wallet_01", "prop_ld_wallet_01_s", "prop_ld_wallet_02", "prop_ld_wallet_pickup", "prop_ld_w_me_machette", "prop_leaf_blower_01", "prop_lectern_01", "prop_letterbox_04", "prop_lev_crate_01", "prop_lev_des_barge_01", "prop_lifeblurb_01", "prop_lifeblurb_01b", "prop_lifeblurb_02", "prop_lifeblurb_02b", "prop_life_ring_02", "prop_lift_overlay_01", "prop_lift_overlay_02", "prop_litter_picker", "prop_loggneon", "prop_logpile_05", "prop_logpile_06", "prop_logpile_06b", "prop_logpile_07", "prop_logpile_07b", "prop_log_01", "prop_log_02", "prop_log_03", "prop_loose_rag_01", "prop_lrggate_01c_l", "prop_lrggate_01c_r", "prop_lrggate_01_l", "prop_lrggate_01_pst", "prop_lrggate_01_r", "prop_lrggate_02_ld", "prop_lrggate_03a", "prop_lrggate_03b", "prop_lrggate_03b_ld", "prop_lrggate_04a", "prop_lrggate_05a", "prop_lrggate_06a", "prop_luggage_01a", "prop_luggage_02a", "prop_luggage_03a", "prop_luggage_04a", "prop_luggage_05a", "prop_luggage_06a", "prop_luggage_07a", "prop_luggage_08a", "prop_luggage_09a", "prop_magenta_door", "prop_makeup_brush", "prop_makeup_trail_01", "prop_makeup_trail_01_cr", "prop_makeup_trail_02", "prop_makeup_trail_02_cr", "prop_map_door_01", "prop_mask_ballistic", "prop_mask_ballistic_trip1", "prop_mask_ballistic_trip2", "prop_mask_bugstar", "prop_mask_bugstar_trip", "prop_mask_fireman", "prop_mask_flight", "prop_mask_motobike", "prop_mask_motobike_a", "prop_mask_motobike_b", "prop_mask_motobike_trip", "prop_mask_motox", "prop_mask_motox_trip", "prop_mask_scuba01", "prop_mask_scuba01_trip", "prop_mask_scuba02", "prop_mask_scuba02_trip", "prop_mask_scuba03", "prop_mask_scuba03_trip", "prop_mask_scuba04", "prop_mask_scuba04_trip", "prop_mask_specops", "prop_mask_specops_trip", "prop_mask_test_01", "prop_mast_01", "prop_mat_box", "prop_mb_cargo_01a", "prop_mb_cargo_02a", "prop_mb_cargo_04a", "prop_mb_cargo_04b", "prop_mb_crate_01a", "prop_mb_crate_01a_set", "prop_mb_crate_01b", "prop_mb_hanger_sprinkler", "prop_mb_hesco_06", "prop_mb_ordnance_01", "prop_mb_ordnance_04", "prop_mb_sandblock_01", "prop_mb_sandblock_02", "prop_mb_sandblock_03", "prop_mb_sandblock_03_cr", "prop_mb_sandblock_04", "prop_mb_sandblock_05", "prop_mb_sandblock_05_cr", "prop_medal_01", "prop_medstation_02", "prop_medstation_03", "prop_medstation_04", "prop_med_bag_01", "prop_med_bag_01b", "prop_megaphone_01", "prop_mem_candle_01", "prop_mem_candle_02", "prop_mem_candle_03", "prop_mem_candle_04", "prop_mem_candle_05", "prop_mem_candle_06", "prop_mem_candle_combo", "prop_metalfoodjar_002", "prop_metalfoodjar_01", "prop_metal_plates01", "prop_metal_plates02", "prop_meth_bag_01", "prop_michaels_credit_tv", "prop_michael_backpack", "prop_michael_balaclava", "prop_michael_door", "prop_michael_sec_id", "prop_microphone_02", "prop_microwave_1", "prop_micro_01", "prop_micro_02", "prop_micro_cs_01", "prop_micro_cs_01_door", "prop_military_pickup_01", "prop_mil_crate_01", "prop_mil_crate_02", "prop_mine_doorng_l", "prop_mine_doorng_r", "prop_minigun_01", "prop_mk_arrow_3d", "prop_mk_arrow_flat", "prop_mk_bike_logo_1", "prop_mk_bike_logo_2", "prop_mk_boost", "prop_mk_cone", "prop_mk_cylinder", "prop_mk_flag", "prop_mk_flag_2", "prop_mk_heli", "prop_mk_lap", "prop_mk_mp_ring_01", "prop_mk_mp_ring_01b", "prop_mk_num_0", "prop_mk_num_1", "prop_mk_num_2", "prop_mk_num_3", "prop_mk_num_4", "prop_mk_num_5", "prop_mk_num_6", "prop_mk_num_7", "prop_mk_num_8", "prop_mk_num_9", "prop_mk_plane", "prop_mk_race_chevron_01", "prop_mk_race_chevron_02", "prop_mk_race_chevron_03", "prop_mk_repair", "prop_mk_ring", "prop_mk_ring_flat", "prop_mk_sphere", "prop_mk_tri_cycle", "prop_mk_tri_run", "prop_mk_tri_swim", "prop_mobile_mast_1", "prop_mobile_mast_2", "prop_monitor_01c", "prop_monitor_01d", "prop_monitor_02", "prop_monitor_03b", "prop_motel_door_09", "prop_mouse_01", "prop_mouse_01a", "prop_mouse_01b", "prop_mouse_02", "prop_movie_rack", "prop_mp3_dock", "prop_mp_arrow_barrier_01", "prop_mp_arrow_ring", "prop_mp_barrier_01", "prop_mp_barrier_01b", "prop_mp_barrier_02", "prop_mp_barrier_02b", "prop_mp_base_marker", "prop_mp_boost_01", "prop_mp_cant_place_lrg", "prop_mp_cant_place_med", "prop_mp_cant_place_sm", "prop_mp_cone_01", "prop_mp_cone_02", "prop_mp_cone_03", "prop_mp_cone_04", "prop_mp_drug_package", "prop_mp_drug_pack_blue", "prop_mp_drug_pack_red", "prop_mp_halo", "prop_mp_halo_lrg", "prop_mp_halo_med", "prop_mp_halo_point", "prop_mp_halo_point_lrg", "prop_mp_halo_point_med", "prop_mp_halo_point_sm", "prop_mp_halo_rotate", "prop_mp_halo_rotate_lrg", "prop_mp_halo_rotate_med", "prop_mp_halo_rotate_sm", "prop_mp_halo_sm", "prop_mp_icon_shad_lrg", "prop_mp_icon_shad_med", "prop_mp_icon_shad_sm", "prop_mp_max_out_lrg", "prop_mp_max_out_med", "prop_mp_max_out_sm", "prop_mp_num_0", "prop_mp_num_1", "prop_mp_num_2", "prop_mp_num_3", "prop_mp_num_4", "prop_mp_num_5", "prop_mp_num_6", "prop_mp_num_7", "prop_mp_num_8", "prop_mp_num_9", "prop_mp_placement", "prop_mp_placement_lrg", "prop_mp_placement_maxd", "prop_mp_placement_med", "prop_mp_placement_red", "prop_mp_placement_sm", "prop_mp_pointer_ring", "prop_mp_ramp_01", "prop_mp_ramp_01_tu", "prop_mp_ramp_02", "prop_mp_ramp_02_tu", "prop_mp_ramp_03", "prop_mp_ramp_03_tu", "prop_mp_repair", "prop_mp_repair_01", "prop_mp_respawn_02", "prop_mp_rocket_01", "prop_mp_solid_ring", "prop_mp_spike_01", "prop_mr_rasberryclean", "prop_mr_raspberry_01", "prop_mugs_rm_flashb", "prop_mugs_rm_lightoff", "prop_mugs_rm_lighton", "prop_muscle_bench_01", "prop_muscle_bench_02", "prop_muscle_bench_03", "prop_muscle_bench_04", "prop_muscle_bench_05", "prop_muscle_bench_06", "prop_muster_wboard_01", "prop_muster_wboard_02", "prop_m_pack_int_01", "prop_necklace_board", "prop_news_disp_02a_s", "prop_new_drug_pack_01", "prop_ng_sculpt_fix", "prop_nigel_bag_pickup", "prop_night_safe_01", "prop_notepad_01", "prop_notepad_02", "prop_novel_01", "prop_npc_phone", "prop_npc_phone_02", "prop_office_alarm_01", "prop_office_desk_01", "prop_office_phone_tnt", "prop_offroad_bale01", "prop_offroad_barrel01", "prop_off_chair_01", "prop_off_chair_03", "prop_off_chair_04", "prop_off_chair_04b", "prop_off_chair_04_s", "prop_off_chair_05", "prop_off_phone_01", "prop_oiltub_01", "prop_oiltub_02", "prop_oiltub_03", "prop_oiltub_05", "prop_oiltub_06", "prop_oil_derrick_01", "prop_oil_guage_01", "prop_oil_spool_02", "prop_oil_valve_01", "prop_oil_valve_02", "prop_oil_wellhead_01", "prop_oil_wellhead_03", "prop_oil_wellhead_04", "prop_oil_wellhead_05", "prop_oil_wellhead_06", "prop_oldplough1", "prop_old_boot", "prop_old_churn_01", "prop_old_churn_02", "prop_old_deck_chair", "prop_old_deck_chair_02", "prop_old_farm_01", "prop_old_farm_02", "prop_old_wood_chair", "prop_old_wood_chair_lod", "prop_orang_can_01", "prop_outdoor_fan_01", "prop_out_door_speaker", "prop_overalls_01", "prop_owl_totem_01", "prop_paints_can01", "prop_paints_can02", "prop_paints_can03", "prop_paints_can04", "prop_paints_can05", "prop_paints_can06", "prop_paints_can07", "prop_paint_brush01", "prop_paint_brush02", "prop_paint_brush03", "prop_paint_brush04", "prop_paint_brush05", "prop_paint_roller", "prop_paint_spray01a", "prop_paint_spray01b", "prop_paint_stepl01", "prop_paint_stepl01b", "prop_paint_stepl02", "prop_paint_tray", "prop_paint_wpaper01", "prop_pallettruck_01", "prop_palm_fan_02_a", "prop_palm_fan_02_b", "prop_palm_fan_03_a", "prop_palm_fan_03_b", "prop_palm_fan_03_c", "prop_palm_fan_03_c_graff", "prop_palm_fan_03_d", "prop_palm_fan_03_d_graff", "prop_palm_fan_04_a", "prop_palm_fan_04_b", "prop_palm_fan_04_c", "prop_palm_fan_04_d", "prop_palm_huge_01a", "prop_palm_huge_01b", "prop_palm_med_01a", "prop_palm_med_01b", "prop_palm_med_01c", "prop_palm_med_01d", "prop_palm_sm_01a", "prop_palm_sm_01d", "prop_palm_sm_01e", "prop_palm_sm_01f", "prop_paper_bag_01", "prop_paper_bag_small", "prop_paper_ball", "prop_paper_box_01", "prop_paper_box_02", "prop_paper_box_03", "prop_paper_box_04", "prop_paper_box_05", "prop_pap_camera_01", "prop_parachute", "prop_parapack_01", "prop_parasol_01b_lod", "prop_parasol_01_lod", "prop_parasol_04e_lod1", "prop_parking_sign_06", "prop_parking_sign_07", "prop_parking_sign_1", "prop_parking_sign_2", "prop_parking_wand_01", "prop_park_ticket_01", "prop_partsbox_01", "prop_passport_01", "prop_patio_heater_01", "prop_patio_lounger1", "prop_patio_lounger1b", "prop_patio_lounger1_table", "prop_patio_lounger_2", "prop_patio_lounger_3", "prop_patriotneon", "prop_paynspray_door_l", "prop_paynspray_door_r", "prop_pc_01a", "prop_pc_02a", "prop_peanut_bowl_01", "prop_ped_pic_01", "prop_ped_pic_01_sm", "prop_ped_pic_02", "prop_ped_pic_02_sm", "prop_ped_pic_03", "prop_ped_pic_03_sm", "prop_ped_pic_04", "prop_ped_pic_04_sm", "prop_ped_pic_05", "prop_ped_pic_05_sm", "prop_ped_pic_06", "prop_ped_pic_06_sm", "prop_ped_pic_07", "prop_ped_pic_07_sm", "prop_ped_pic_08", "prop_ped_pic_08_sm", "prop_pencil_01", "prop_peyote_chunk_01", "prop_peyote_gold_01", "prop_peyote_highland_01", "prop_peyote_highland_02", "prop_peyote_lowland_01", "prop_peyote_lowland_02", "prop_peyote_water_01", "prop_pharm_sign_01", "prop_phonebox_05a", "prop_phone_cs_frank", "prop_phone_ing", "prop_phone_ing_02", "prop_phone_ing_02_lod", "prop_phone_ing_03", "prop_phone_ing_03_lod", "prop_phone_overlay_01", "prop_phone_overlay_02", "prop_phone_overlay_03", "prop_phone_overlay_anim", "prop_phone_proto", "prop_phone_proto_back", "prop_phone_proto_battery", "prop_phys_wades_head", "prop_picnictable_01_lod", "prop_picnictable_02", "prop_piercing_gun", "prop_pier_kiosk_01", "prop_pier_kiosk_02", "prop_pier_kiosk_03", "prop_pile_dirt_01", "prop_pile_dirt_02", "prop_pile_dirt_03", "prop_pile_dirt_04", "prop_pile_dirt_06", "prop_pile_dirt_07", "prop_pile_dirt_07_cr", "prop_ping_pong", "prop_pipes_01a", "prop_pipes_01b", "prop_pipes_03b", "prop_pipes_04a", "prop_pipes_05a", "prop_pipes_conc_01", "prop_pipes_conc_02", "prop_pipe_single_01", "prop_pistol_holster", "prop_pitcher_01_cs", "prop_pizza_box_01", "prop_pizza_box_02", "prop_pizza_oven_01",  "prop_plant_01a", "prop_plant_01b", "prop_plant_base_01", "prop_plant_base_02", "prop_plant_base_03", "prop_plant_cane_01a", "prop_plant_cane_01b", "prop_plant_cane_02a", "prop_plant_cane_02b", "prop_plant_clover_01", "prop_plant_clover_02", "prop_plant_fern_01a", "prop_plant_fern_01b", "prop_plant_fern_02a", "prop_plant_fern_02b", "prop_plant_fern_02c", "prop_plant_flower_01", "prop_plant_flower_02", "prop_plant_flower_03", "prop_plant_flower_04", "prop_plant_group_01", "prop_plant_group_02", "prop_plant_group_03", "prop_plant_group_04", "prop_plant_group_04_cr", "prop_plant_group_05", "prop_plant_group_05b", "prop_plant_group_05c", "prop_plant_group_05d", "prop_plant_group_05e", "prop_plant_group_06a", "prop_plant_group_06b", "prop_plant_group_06c", "prop_plant_interior_05a", "prop_plant_int_02a", "prop_plant_int_02b", "prop_plant_int_05a", "prop_plant_int_05b", "prop_plant_int_06a", "prop_plant_int_06b", "prop_plant_paradise", "prop_plant_paradise_b", "prop_plastic_cup_02", "prop_plas_barier_01a", "prop_plate_04", "prop_plate_stand_01", "prop_plate_warmer", "prop_player_gasmask", "prop_player_phone_01", "prop_player_phone_02", "prop_pliers_01", "prop_plywoodpile_01a", "prop_plywoodpile_01b", "prop_podium_mic", "prop_police_door_l", "prop_police_door_l_dam", "prop_police_door_r", "prop_police_door_r_dam", "prop_police_door_surround", "prop_police_id_board", "prop_police_id_text", "prop_police_id_text_02", "prop_police_phone", "prop_police_radio_handset", "prop_police_radio_main", "prop_poly_bag_01",  "prop_poolball_1", "prop_poolball_10", "prop_poolball_11", "prop_poolball_12", "prop_poolball_13", "prop_poolball_14", "prop_poolball_15", "prop_poolball_2", "prop_poolball_3", "prop_poolball_4", "prop_poolball_5", "prop_poolball_6", "prop_poolball_7", "prop_poolball_8", "prop_poolball_9", "prop_poolball_cue", "prop_poolskimmer", "prop_pooltable_02", "prop_pooltable_3b", "prop_pool_ball_01", "prop_pool_cue", "prop_pool_rack_01", "prop_pool_rack_02", "prop_pool_tri", "prop_porn_mag_01", "prop_porn_mag_02", "prop_porn_mag_03", "prop_porn_mag_04", "prop_portable_hifi_01", "prop_portacabin01", "prop_portasteps_01", "prop_portasteps_02", "prop_postcard_rack", "prop_poster_tube_01", "prop_poster_tube_02", "prop_postit_drive", "prop_postit_gun", "prop_postit_it", "prop_postit_lock", "prop_potatodigger", "prop_pot_01", "prop_pot_02", "prop_pot_03", "prop_pot_04", "prop_pot_05", "prop_pot_06", "prop_pot_plant_02a", "prop_pot_plant_02b", "prop_pot_plant_02c", "prop_pot_plant_02d", "prop_pot_plant_03a", "prop_pot_plant_04a", "prop_pot_plant_05d_l1", "prop_pot_plant_bh1", "prop_pot_plant_inter_03a", "prop_pot_rack", "prop_power_cell", "prop_power_cord_01", "prop_premier_fence_01", "prop_premier_fence_02", "prop_printer_01", "prop_printer_02", "prop_pris_bars_01", "prop_pris_bench_01", "prop_pris_door_01_l", "prop_pris_door_01_r", "prop_pris_door_02", "prop_pris_door_03", "prop_projector_overlay", "prop_prologue_phone", "prop_prologue_phone_lod", "prop_prop_tree_01", "prop_prop_tree_02", "prop_protest_sign_01", "prop_protest_table_01", "prop_prototype_minibomb", "prop_proxy_chateau_table", "prop_proxy_hat_01", "prop_punch_bag_l", "prop_pylon_01", "prop_pylon_02", "prop_pylon_03", "prop_pylon_04", "prop_p_jack_03_col", "prop_p_spider_01a", "prop_p_spider_01c", "prop_p_spider_01d", "prop_ql_revolving_door", "prop_quad_grid_line", "prop_radiomast01", "prop_radiomast02", "prop_radio_01", "prop_rad_waste_barrel_01", "prop_ragganeon", "prop_rag_01", "prop_railsleepers01", "prop_railsleepers02", "prop_railstack01", "prop_railstack02", "prop_railstack03", "prop_railstack04", "prop_railstack05", "prop_rail_boxcar", "prop_rail_boxcar2", "prop_rail_boxcar3", "prop_rail_boxcar4", "prop_rail_boxcar5", "prop_rail_boxcar5_d", "prop_rail_buffer_01", "prop_rail_buffer_02", "prop_rail_controller", "prop_rail_crane_01", "prop_rail_points01", "prop_rail_points02", "prop_rail_sigbox01", "prop_rail_sigbox02", "prop_rail_signals02", "prop_rail_tankcar", "prop_rail_tankcar2", "prop_rail_tankcar3", "prop_rail_wellcar", "prop_rail_wellcar2", "prop_range_target_01", "prop_range_target_02", "prop_range_target_03", "prop_rebar_pile01", "prop_recyclebin_02a", "prop_recyclebin_02b", "prop_recyclebin_02_c", "prop_recyclebin_02_d", "prop_recyclebin_03_a", "prop_recyclebin_04_a", "prop_recyclebin_04_b", "prop_recyclebin_05_a", "prop_ret_door", "prop_ret_door_02", "prop_ret_door_03", "prop_ret_door_04", "prop_rf_conc_pillar", "prop_riding_crop_01", "prop_riot_shield", "prop_rio_del_01_l3", "prop_roadcone01a", "prop_roadcone01b", "prop_roadcone01c", "prop_roadcone02a", "prop_roadcone02b", "prop_roadcone02c", "prop_roadheader_01", "prop_rock_1_a", "prop_rock_1_b","prop_rock_1_d", "prop_rock_1_e", "prop_rock_1_f", "prop_rock_1_g", "prop_rock_1_h", "prop_rock_1_i", "prop_rock_2_a", "prop_rock_2_c", "prop_rock_2_d", "prop_rock_2_f", "prop_rock_2_g", "prop_rock_3_a", "prop_rock_3_b", "prop_rock_3_c", "prop_rock_3_d", "prop_rock_3_e", "prop_rock_3_f", "prop_rock_3_g", "prop_rock_3_h", "prop_rock_3_i", "prop_rock_3_j", "prop_rock_4_c", "prop_rock_4_d", "prop_rock_chair_01", "prop_rolled_sock_01", "prop_rolled_sock_02", "prop_rolled_yoga_mat", "prop_roller_car_01", "prop_roller_car_02", "prop_ron_door_01", "prop_roofpipe_01", "prop_roofpipe_02", "prop_roofpipe_03", "prop_roofpipe_04", "prop_roofpipe_05", "prop_roofpipe_06", "prop_roofvent_011a", "prop_roofvent_01a", "prop_roofvent_01b", "prop_roofvent_02a", "prop_roofvent_02b", "prop_roofvent_03a", "prop_roofvent_04a", "prop_roofvent_05a", "prop_roofvent_05b", "prop_roofvent_07a", "prop_roofvent_08a", "prop_roofvent_09a", "prop_roofvent_10a", "prop_roofvent_10b", "prop_roofvent_11b", "prop_roofvent_11c", "prop_roofvent_12a", "prop_roofvent_13a", "prop_roofvent_15a", "prop_roofvent_16a", "prop_rope_family_3", "prop_rope_hook_01", "prop_roundbailer01", "prop_roundbailer02", "prop_rub_bike_01", "prop_rub_bike_02", "prop_rub_bike_03", "prop_rub_binbag_sd_01", "prop_rub_binbag_sd_02", "prop_rub_busdoor_01", "prop_rub_busdoor_02", "prop_rub_buswreck_01", "prop_rub_buswreck_03", "prop_rub_buswreck_06", "prop_rub_cabinet", "prop_rub_cabinet01", "prop_rub_cabinet02", "prop_rub_cabinet03", "prop_rub_cage01a", "prop_rub_carpart_02", "prop_rub_carpart_03", "prop_rub_carpart_04", "prop_rub_chassis_01", "prop_rub_chassis_02", "prop_rub_chassis_03", "prop_rub_cont_01a", "prop_rub_cont_01b", "prop_rub_cont_01c", "prop_rub_couch01", "prop_rub_flotsam_01", "prop_rub_flotsam_02", "prop_rub_flotsam_03", "prop_rub_frklft", "prop_rub_litter_01", "prop_rub_litter_02", "prop_rub_litter_03", "prop_rub_litter_03b", "prop_rub_litter_03c", "prop_rub_litter_04", "prop_rub_litter_04b", "prop_rub_litter_05", "prop_rub_litter_06", "prop_rub_litter_07", "prop_rub_litter_09", "prop_rub_litter_8", "prop_rub_matress_01", "prop_rub_matress_02", "prop_rub_matress_03", "prop_rub_matress_04", "prop_rub_monitor", "prop_rub_pile_01", "prop_rub_pile_02", "prop_rub_planks_01", "prop_rub_planks_02", "prop_rub_planks_03", "prop_rub_planks_04", "prop_rub_railwreck_1", "prop_rub_railwreck_2", "prop_rub_railwreck_3", "prop_rub_scrap_02", "prop_rub_scrap_03", "prop_rub_scrap_04", "prop_rub_scrap_05", "prop_rub_scrap_06", "prop_rub_scrap_07", "prop_rub_stool", "prop_rub_sunktyre", "prop_rub_t34", "prop_rub_trainers_01", "prop_rub_trainers_01b", "prop_rub_trainers_01c", "prop_rub_trolley01a", "prop_rub_trolley02a", "prop_rub_trolley03a", "prop_rub_trukwreck_1", "prop_rub_trukwreck_2", "prop_rub_tyre_01", "prop_rub_tyre_02", "prop_rub_tyre_03", "prop_rub_tyre_dam1", "prop_rub_tyre_dam2", "prop_rub_tyre_dam3", "prop_rub_washer_01", "prop_rub_wheel_01", "prop_rub_wheel_02", "prop_rub_wreckage_3", "prop_rub_wreckage_4", "prop_rub_wreckage_5", "prop_rub_wreckage_6", "prop_rub_wreckage_7", "prop_rub_wreckage_8", "prop_rub_wreckage_9", "prop_runlight_b", "prop_runlight_g", "prop_runlight_r", "prop_runlight_y", "prop_rural_windmill_l1", "prop_rural_windmill_l2", "prop_rus_olive", "prop_rus_olive_l2", "prop_rus_olive_wint", "prop_sacktruck_01", "prop_sacktruck_02a", "prop_safety_glasses", "prop_sam_01", "prop_sandwich_01", "prop_satdish_2_a", "prop_satdish_2_f", "prop_satdish_2_g", "prop_satdish_3_b", "prop_satdish_3_c", "prop_satdish_3_d", "prop_satdish_l_01", "prop_satdish_s_03", "prop_satdish_s_05a", "prop_satdish_s_05b", "prop_sc1_06_gate_l", "prop_sc1_06_gate_r", "prop_sc1_12_door", "prop_sc1_21_g_door_01", "prop_scaffold_pole", "prop_scafold_01a", "prop_scafold_01c", "prop_scafold_01f", "prop_scafold_02a", "prop_scafold_02c", "prop_scafold_03a", "prop_scafold_03b", "prop_scafold_03c", "prop_scafold_03f", "prop_scafold_04a", "prop_scafold_05a", "prop_scafold_06a", "prop_scafold_06b", "prop_scafold_06c", "prop_scafold_07a", "prop_scafold_08a", "prop_scafold_09a", "prop_scafold_frame1a", "prop_scafold_frame1b", "prop_scafold_frame1f", "prop_scafold_frame2a", "prop_scafold_frame2b", "prop_scafold_frame2c", "prop_scafold_frame3a", "prop_scafold_frame3c", "prop_scafold_rail_01", "prop_scafold_rail_02", "prop_scafold_rail_03", "prop_scafold_xbrace", "prop_scalpel", "prop_scn_police_torch", "prop_scourer_01", "prop_scrap_2_crate", "prop_scrap_win_01", "prop_scrim_01", "prop_scythemower", "prop_seabrain_01", "prop_seagroup_02", "prop_sealife_01", "prop_sealife_02", "prop_sealife_03", "prop_sealife_04", "prop_sealife_05", "prop_seaweed_01", "prop_seaweed_02", "prop_section_garage_01", "prop_securityvan_lightrig", "prop_security_case_01", "prop_security_case_02", "prop_sec_gate_01b", "prop_sec_gate_01c", "prop_sec_gate_01d", "prop_set_generator_01", "prop_set_generator_01_cr", "prop_sewing_fabric", "prop_sewing_machine", "prop_sglasses_stand_01", "prop_sglasses_stand_02", "prop_sglasses_stand_02b", "prop_sglasses_stand_03", "prop_sglasss_1b_lod", "prop_sglasss_1_lod", "prop_sgun_casing", "prop_shamal_crash", "prop_shelves_01", "prop_shelves_02", "prop_shelves_03", "prop_shopping_bags01", "prop_shopping_bags02", "prop_shop_front_door_l", "prop_shop_front_door_r", "prop_shots_glass_cs", "prop_shower_rack_01", "prop_shower_towel", "prop_showroom_door_l", "prop_showroom_door_r", "prop_showroom_glass_1b", "prop_shredder_01", "prop_shrub_rake", "prop_shuttering01", "prop_shuttering02", "prop_shuttering03", "prop_shuttering04", "prop_sh_beer_pissh_01", "prop_sh_bong_01", "prop_sh_cigar_01", "prop_sh_joint_01", "prop_sh_mr_rasp_01", "prop_sh_shot_glass", "prop_sh_tall_glass", "prop_sh_tt_fridgedoor", "prop_sh_wine_glass", "prop_side_lights", "prop_side_spreader", "prop_sign_airp_01a", "prop_sign_airp_02a", "prop_sign_airp_02b", "prop_sign_big_01", "prop_sign_mallet", "prop_sign_road_04g_l1", "prop_single_grid_line", "prop_single_rose", "prop_sink_02", "prop_sink_04", "prop_sink_05", "prop_sink_06", "prop_skate_flatramp", "prop_skate_flatramp_cr", "prop_skate_funbox", "prop_skate_funbox_cr", "prop_skate_halfpipe", "prop_skate_halfpipe_cr", "prop_skate_kickers", "prop_skate_kickers_cr", "prop_skate_quartpipe", "prop_skate_quartpipe_cr", "prop_skate_rail", "prop_skate_spiner", "prop_skate_spiner_cr", "prop_skid_chair_01", "prop_skid_chair_02", "prop_skid_chair_03", "prop_skid_sleepbag_1", "prop_skip_01a", "prop_skip_02a", "prop_skip_03", "prop_skip_04", "prop_skip_05a", "prop_skip_05b", "prop_skip_06a", "prop_skip_08a", "prop_skip_08b", "prop_skip_10a", "prop_skip_rope_01", "prop_skunk_bush_01", "prop_skylight_01", "prop_skylight_02", "prop_skylight_02_l1", "prop_skylight_03", "prop_skylight_04", "prop_skylight_05", "prop_skylight_06b", "prop_skylight_06c", "prop_sky_cover_01", "prop_slacks_01", "prop_slacks_02", "prop_sluicegate", "prop_sluicegatel", "prop_sluicegater", "prop_slush_dispenser", "prop_sm1_11_doorl", "prop_sm1_11_doorr", "prop_sm1_11_garaged", "prop_smg_holster_01", "prop_sm_10_mp_door", "prop_sm_14_mp_gar", "prop_sm_19_clock", "prop_sm_27_door", "prop_sm_27_gate", "prop_sm_27_gate_02", "prop_sm_27_gate_03", "prop_sm_27_gate_04", "prop_sm_locker_door", "prop_snow_bailer_01", "prop_snow_barrel_pile_03", "prop_snow_bench_01", "prop_snow_bin_01", "prop_snow_bin_02", "prop_snow_bush_01_a", "prop_snow_bush_02_a", "prop_snow_bush_02_b", "prop_snow_bush_03", "prop_snow_bush_04", "prop_snow_bush_04b", "prop_snow_cam_03", "prop_snow_cam_03a", "prop_snow_diggerbkt_01", "prop_snow_elecbox_16", "prop_snow_facgate_01", "prop_snow_field_01", "prop_snow_field_02", "prop_snow_field_03", "prop_snow_field_04", "prop_snow_flower_01", "prop_snow_flower_02", "prop_snow_fnclink_03crnr2", "prop_snow_fnclink_03h", "prop_snow_fnclink_03i", "prop_snow_fncwood_14a", "prop_snow_fncwood_14b", "prop_snow_fncwood_14c", "prop_snow_fncwood_14d", "prop_snow_fncwood_14e", "prop_snow_fnc_01", "prop_snow_gate_farm_03", "prop_snow_grain_01", "prop_snow_grass_01", "prop_snow_light_01", "prop_snow_oldlight_01b", "prop_snow_rail_signals02", "prop_snow_rub_trukwreck_2", "prop_snow_side_spreader_01", "prop_snow_streetlight01", "prop_snow_streetlight_01_frag_", "prop_snow_sub_frame_01a", "prop_snow_sub_frame_04b", "prop_snow_telegraph_01a", "prop_snow_telegraph_02a", "prop_snow_telegraph_03", "prop_snow_traffic_rail_1a", "prop_snow_traffic_rail_1b", "prop_snow_trailer01", "prop_snow_tree_03_h", "prop_snow_tree_03_i", "prop_snow_tree_04_d", "prop_snow_tree_04_f", "prop_snow_truktrailer_01a", "prop_snow_tyre_01", "prop_snow_t_ml_01", "prop_snow_t_ml_02", "prop_snow_t_ml_03", "prop_snow_t_ml_cscene", "prop_snow_wall_light_15a", "prop_snow_watertower01", "prop_snow_watertower01_l2", "prop_snow_watertower03", "prop_snow_woodpile_04a", "prop_soap_disp_01", "prop_solarpanel_01", "prop_solarpanel_02", "prop_solarpanel_03", "prop_sol_chair", "prop_space_pistol", "prop_space_rifle", "prop_speaker_01", "prop_speaker_02", "prop_speaker_03", "prop_speaker_05", "prop_speaker_06", "prop_speaker_07", "prop_speaker_08", "prop_speedball_01", "prop_sponge_01", "prop_sports_clock_01", "prop_spot_01", "prop_spot_clamp", "prop_spot_clamp_02", "prop_sprayer", "prop_spraygun_01", "prop_spray_backpack_01", "prop_spray_jackframe", "prop_spray_jackleg", "prop_sprink_crop_01", "prop_sprink_golf_01", "prop_sprink_park_01", "prop_spycam", "prop_squeegee", "prop_ss1_05_mp_door", "prop_ss1_08_mp_door_l", "prop_ss1_08_mp_door_r", "prop_ss1_10_door_l", "prop_ss1_10_door_r", "prop_ss1_14_garage_door", "prop_ss1_mpint_door_l", "prop_ss1_mpint_door_r", "prop_ss1_mpint_garage", "prop_ss1_mpint_garage_cl", "prop_stag_do_rope", "prop_starfish_01", "prop_starfish_02", "prop_starfish_03", "prop_start_finish_line_01", "prop_start_gate_01", "prop_start_gate_01b", "prop_start_grid_01", "prop_staticmixer_01", "prop_stat_pack_01", "prop_steam_basket_01", "prop_steam_basket_02", "prop_steps_big_01", "prop_stickbfly", "prop_stickhbird", "prop_still", "prop_stockade_wheel", "prop_stockade_wheel_flat", "prop_stool_01", "prop_storagetank_01", "prop_storagetank_01_cr", "prop_storagetank_02", "prop_storagetank_03", "prop_storagetank_03a", "prop_storagetank_03b", "prop_storagetank_04", "prop_storagetank_05", "prop_storagetank_06", "prop_storagetank_07a", "prop_strip_door_01", "prop_strip_pole_01", "prop_studio_light_02", "prop_studio_light_03", "prop_sub_chunk_01", "prop_sub_cover_01", "prop_sub_frame_01a", "prop_sub_frame_01b", "prop_sub_frame_01c", "prop_sub_frame_02a", "prop_sub_frame_03a", "prop_sub_frame_04a", "prop_sub_frame_04b", "prop_sub_gantry", "prop_sub_release", "prop_sub_trans_01a", "prop_sub_trans_02a", "prop_sub_trans_03a", "prop_sub_trans_04a", "prop_sub_trans_05b", "prop_sub_trans_06b", "prop_suitcase_01", "prop_suitcase_01b", "prop_suitcase_01c", "prop_suitcase_01d", "prop_suitcase_02", "prop_suitcase_03", "prop_suitcase_03b", "prop_surf_board_ldn_01", "prop_surf_board_ldn_02", "prop_surf_board_ldn_03", "prop_surf_board_ldn_04", "prop_syringe_01", "prop_s_pine_dead_01", "prop_tablesaw_01", "prop_tablesmall_01", "prop_table_02", "prop_table_03b_cs", "prop_table_04", "prop_table_04_chr", "prop_table_05", "prop_table_05_chr", "prop_table_06", "prop_table_06_chr", "prop_table_07", "prop_table_07_l1", "prop_table_08", "prop_table_08_chr", "prop_table_08_side", "prop_table_mic_01", "prop_table_tennis", "prop_table_ten_bat", "prop_taco_01", "prop_taco_02", "prop_tail_gate_col", "prop_tapeplayer_01", "prop_target_arm", "prop_target_arm_b", "prop_target_arm_long", "prop_target_arm_sm", "prop_target_backboard", "prop_target_backboard_b", "prop_target_blue", "prop_target_blue_arrow", "prop_target_bull", "prop_target_bull_b", "prop_target_comp_metal", "prop_target_comp_wood", "prop_target_frame_01", "prop_target_inner1", "prop_target_inner2", "prop_target_inner2_b", "prop_target_inner3", "prop_target_inner3_b", "prop_target_inner_b", "prop_target_oran_cross", "prop_target_ora_purp_01", "prop_target_purp_arrow", "prop_target_purp_cross", "prop_target_red", "prop_target_red_arrow", "prop_target_red_blue_01", "prop_target_red_cross", "prop_tarp_strap", "prop_taxi_meter_1", "prop_taxi_meter_2", "prop_tea_trolly", "prop_tea_urn", "prop_telegraph_01a", "prop_telegraph_01b", "prop_telegraph_01c", "prop_telegraph_01d", "prop_telegraph_01e", "prop_telegraph_01f", "prop_telegraph_01g", "prop_telegraph_02a", "prop_telegraph_02b", "prop_telegraph_03", "prop_telegraph_04a", "prop_telegraph_04b", "prop_telegraph_05a", "prop_telegraph_05b", "prop_telegraph_05c", "prop_telegraph_06a", "prop_telegraph_06b", "prop_telegraph_06c", "prop_telegwall_01a", "prop_telegwall_01b", "prop_telegwall_02a", "prop_telegwall_03a", "prop_telegwall_03b", "prop_telegwall_04a", "prop_telescope", "prop_telescope_01", "prop_temp_block_blocker", "prop_temp_carrier", "prop_tennis_bag_01", "prop_tennis_ball", "prop_tennis_ball_lobber", "prop_tennis_rack_01", "prop_tennis_rack_01b", "prop_test_boulder_01", "prop_test_boulder_02", "prop_test_boulder_03", "prop_test_boulder_04", "prop_test_elevator", "prop_test_elevator_dl", "prop_test_elevator_dr", "prop_tick", "prop_tick_02", "prop_till_01_dam", "prop_till_02", "prop_till_03", "prop_time_capsule_01", "prop_tint_towel", "prop_tint_towels_01", "prop_tint_towels_01b", "prop_toaster_01", "prop_toaster_02", "prop_toiletfoot_static", "prop_toilet_01", "prop_toilet_02", "prop_toilet_brush_01", "prop_toilet_roll_01", "prop_toilet_roll_02", "prop_toilet_roll_05", "prop_toilet_shamp_01", "prop_toilet_shamp_02", "prop_toilet_soap_01", "prop_toilet_soap_02", "prop_toilet_soap_03", "prop_toilet_soap_04", "prop_toolchest_01", "prop_toolchest_02", "prop_toolchest_03", "prop_toolchest_03_l2", "prop_toolchest_04", "prop_toolchest_05", "prop_tool_adjspanner", "prop_tool_bench01", "prop_tool_bluepnt", "prop_tool_box_01", "prop_tool_box_02", "prop_tool_box_03", "prop_tool_box_04", "prop_tool_box_05", "prop_tool_box_06", "prop_tool_box_07", "prop_tool_broom", "prop_tool_broom2", "prop_tool_broom2_l1", "prop_tool_cable01", "prop_tool_cable02", "prop_tool_consaw", "prop_tool_drill", "prop_tool_fireaxe", "prop_tool_hammer", "prop_tool_hardhat", "prop_tool_jackham", "prop_tool_mallet", "prop_tool_mopbucket", "prop_tool_nailgun", "prop_tool_pickaxe", "prop_tool_pliers", "prop_tool_rake", "prop_tool_rake_l1", "prop_tool_sawhorse", "prop_tool_screwdvr01", "prop_tool_screwdvr02", "prop_tool_screwdvr03", "prop_tool_shovel", "prop_tool_shovel006", "prop_tool_shovel2", "prop_tool_shovel3", "prop_tool_shovel4", "prop_tool_shovel5", "prop_tool_sledgeham", "prop_tool_spanner01", "prop_tool_spanner02", "prop_tool_spanner03", "prop_tool_torch", "prop_tool_wrench", "prop_toothbrush_01", "prop_toothb_cup_01", "prop_toothpaste_01", "prop_tornado_wheel", "prop_torture_01", "prop_torture_ch_01", "prop_tourist_map_01", "prop_towel2_01", "prop_towel2_02", "prop_towel_01", "prop_towel_rail_01", "prop_towel_rail_02", "prop_towel_shelf_01", "prop_towercrane_01a", "prop_towercrane_02a", "prop_towercrane_02b", "prop_towercrane_02c", "prop_towercrane_02d", "prop_towercrane_02e", "prop_towercrane_02el", "prop_towercrane_02el2", "prop_traffic_rail_1c", "prop_trailer01", "prop_trailer01_up", "prop_trailer_01_new", "prop_trailer_door_closed", "prop_trailer_door_open", "prop_trailer_monitor_01", "prop_trailr_base_static", "prop_train_ticket_02", "prop_train_ticket_02_tu", "prop_tram_pole_double01", "prop_tram_pole_double02", "prop_tram_pole_double03", "prop_tram_pole_roadside", "prop_tram_pole_single01", "prop_tram_pole_single02", "prop_tram_pole_wide01", "prop_tree_birch_01", "prop_tree_birch_02", "prop_tree_birch_03", "prop_tree_birch_03b", "prop_tree_birch_04", "prop_tree_birch_05", "prop_tree_cedar_02", "prop_tree_cedar_03", "prop_tree_cedar_04", "prop_tree_cedar_s_01", "prop_tree_cedar_s_02", "prop_tree_cedar_s_04", "prop_tree_cedar_s_05", "prop_tree_cedar_s_06", "prop_tree_cypress_01", "prop_tree_eng_oak_01", "prop_tree_eng_oak_creator", "prop_tree_eucalip_01", "prop_tree_fallen_01", "prop_tree_fallen_02", "prop_tree_fallen_pine_01", "prop_tree_jacada_01", "prop_tree_jacada_02", "prop_tree_lficus_02", "prop_tree_lficus_03", "prop_tree_lficus_05", "prop_tree_lficus_06", "prop_tree_log_01", "prop_tree_log_02", "prop_tree_maple_02", "prop_tree_maple_03", "prop_tree_mquite_01", "prop_tree_mquite_01_l2", "prop_tree_oak_01", "prop_tree_olive_cr2", "prop_tree_olive_creator", "prop_tree_pine_01", "prop_tree_pine_02", "prop_tree_stump_01", "prop_trevor_rope_01", "prop_trev_sec_id", "prop_trev_tv_01", "prop_triple_grid_line", "prop_tri_finish_banner", "prop_tri_pod", "prop_tri_pod_lod", "prop_tri_start_banner", "prop_tri_table_01", "prop_trough1", "prop_truktrailer_01a", "prop_tshirt_box_02", "prop_tshirt_shelf_1", "prop_tshirt_shelf_2", "prop_tshirt_shelf_2a", "prop_tshirt_shelf_2b", "prop_tshirt_shelf_2c", "prop_tshirt_stand_01", "prop_tshirt_stand_01b", "prop_tshirt_stand_02", "prop_tshirt_stand_04", "prop_tt_screenstatic", "prop_tumbler_01", "prop_tumbler_01b", "prop_tumbler_01b_bar", "prop_tumbler_01_empty", "prop_tunnel_liner01", "prop_tunnel_liner02", "prop_tunnel_liner03", "prop_turkey_leg_01", "prop_turnstyle_01", "prop_tv_02", "prop_tv_03_overlay", "prop_tv_04", "prop_tv_05", "prop_tv_06", "prop_tv_07", "prop_tv_cabinet_03", "prop_tv_cabinet_04", "prop_tv_cabinet_05", "prop_tv_cam_02", "prop_tv_flat_01", "prop_tv_flat_01_screen", "prop_tv_flat_02b", "prop_tv_flat_03", "prop_tv_flat_03b", "prop_tv_flat_michael", "prop_tv_test", "prop_tyre_rack_01", "prop_tyre_spike_01", "prop_tyre_wall_01", "prop_tyre_wall_01b", "prop_tyre_wall_01c", "prop_tyre_wall_02", "prop_tyre_wall_02b", "prop_tyre_wall_02c", "prop_tyre_wall_03", "prop_tyre_wall_03b", "prop_tyre_wall_03c", "prop_tyre_wall_04", "prop_tyre_wall_05", "prop_t_coffe_table", "prop_t_shirt_ironing", "prop_t_shirt_row_01", "prop_t_shirt_row_02", "prop_t_shirt_row_02b", "prop_t_shirt_row_03", "prop_t_shirt_row_04", "prop_t_shirt_row_05l", "prop_t_shirt_row_05r", "prop_t_sofa", "prop_t_sofa_02", "prop_t_telescope_01b", "prop_umpire_01", "prop_utensil", "prop_valet_03", "prop_vault_door_scene", "prop_vault_shutter", "prop_vb_34_tencrt_lighting", "prop_vcr_01", "prop_veg_corn_01", "prop_veg_crop_01", "prop_veg_crop_02", "prop_veg_crop_04", "prop_veg_crop_04_leaf", "prop_veg_crop_05", "prop_veg_crop_06", "prop_veg_crop_orange", "prop_veg_crop_tr_01", "prop_veg_crop_tr_02", "prop_veg_grass_01_a", "prop_veg_grass_01_b", "prop_veg_grass_01_c", "prop_veg_grass_01_d", "prop_veg_grass_02_a", "prop_vehicle_hook", "prop_vend_coffe_01", "prop_vend_condom_01", "prop_vend_fags_01", "prop_vend_snak_01_tu", "prop_venice_board_01", "prop_venice_board_02", "prop_venice_board_03", "prop_venice_counter_01", "prop_venice_counter_02", "prop_venice_counter_03", "prop_venice_counter_04", "prop_venice_shop_front_01", "prop_venice_sign_09", "prop_venice_sign_10", "prop_venice_sign_11", "prop_venice_sign_12", "prop_venice_sign_14", "prop_venice_sign_15", "prop_venice_sign_16", "prop_venice_sign_17", "prop_venice_sign_18", "prop_ventsystem_01", "prop_ventsystem_02", "prop_ventsystem_03", "prop_ventsystem_04", "prop_ven_market_stool", "prop_ven_market_table1", "prop_ven_shop_1_counter", "prop_vertdrill_01", "prop_vintage_filmcan", "prop_voltmeter_01", "prop_v_15_cars_clock", "prop_v_5_bclock", "prop_v_bmike_01", "prop_v_cam_01", "prop_v_door_44", "prop_v_hook_s", "prop_v_m_phone_01", "prop_v_m_phone_o1s", "prop_v_parachute", "prop_waiting_seat_01", "prop_wait_bench_01", "prop_walllight_ld_01b", "prop_wall_light_08a", "prop_wall_light_10a", "prop_wall_light_10b", "prop_wall_light_10c", "prop_wall_light_11", "prop_wall_light_12", "prop_wall_light_17b", "prop_wall_light_18a", "prop_wall_light_21", "prop_wall_vent_01", "prop_wall_vent_02", "prop_wall_vent_03", "prop_wall_vent_04", "prop_wall_vent_05", "prop_wall_vent_06", "prop_wardrobe_door_01", "prop_warehseshelf01", "prop_warehseshelf02", "prop_warehseshelf03", "prop_warninglight_01", "prop_washer_01", "prop_washer_02", "prop_washer_03", "prop_washing_basket_01", "prop_watercrate_01", "prop_wateringcan", "prop_watertower01", "prop_watertower02", "prop_watertower03", "prop_watertower04", "prop_waterwheela", "prop_waterwheelb", "prop_water_bottle", "prop_water_bottle_dark", "prop_water_corpse_01", "prop_water_corpse_02", "prop_water_ramp_01", "prop_water_ramp_02", "prop_water_ramp_03", "prop_weeddead_nxg01", "prop_weeddead_nxg02", "prop_weeddry_nxg01", "prop_weeddry_nxg01b", "prop_weeddry_nxg02", "prop_weeddry_nxg02b", "prop_weeddry_nxg03", "prop_weeddry_nxg03b", "prop_weeddry_nxg04", "prop_weeddry_nxg05", "prop_weeds_nxg01", "prop_weeds_nxg01b", "prop_weeds_nxg02", "prop_weeds_nxg02b", "prop_weeds_nxg03", "prop_weeds_nxg03b", "prop_weeds_nxg04", "prop_weeds_nxg04b", "prop_weeds_nxg05", "prop_weeds_nxg05b", "prop_weeds_nxg06", "prop_weeds_nxg06b", "prop_weeds_nxg07b", "prop_weeds_nxg07b001", "prop_weeds_nxg08", "prop_weeds_nxg08b", "prop_weeds_nxg09", "prop_weed_01", "prop_weed_02", "prop_weed_block_01", "prop_weed_bottle", "prop_weed_pallet", "prop_weed_tub_01", "prop_weed_tub_01b", "prop_weight_10k", "prop_weight_15k", "prop_weight_1_5k", "prop_weight_20k", "prop_weight_2_5k", "prop_weight_5k", "prop_weight_rack_01", "prop_weight_rack_02", "prop_welding_mask_01", "prop_welding_mask_01_s", "prop_weld_torch", "prop_wheat_grass_empty", "prop_wheat_grass_glass", "prop_wheat_grass_half", "prop_wheelbarrow01a", "prop_wheelbarrow02a", "prop_wheelchair_01", "prop_wheelchair_01_s", "prop_wheel_01", "prop_wheel_02", "prop_wheel_03", "prop_wheel_04", "prop_wheel_05", "prop_wheel_06", "prop_wheel_hub_01", "prop_wheel_hub_02_lod_02", "prop_wheel_rim_01", "prop_wheel_rim_02", "prop_wheel_rim_03", "prop_wheel_rim_04", "prop_wheel_rim_05", "prop_wheel_tyre", "prop_whisk", "prop_white_keyboard", "prop_winch_hook_long", "prop_winch_hook_short", "prop_windmill2", "prop_windmill_01_l1", "prop_windmill_01_slod", "prop_windmill_01_slod2", "prop_windowbox_a", "prop_windowbox_b", "prop_windowbox_broken", "prop_windowbox_small", "prop_win_plug_01", "prop_win_plug_01_dam", "prop_win_trailer_ld", "prop_wok", "prop_woodpile_02a", "prop_worklight_01a_l1", "prop_worklight_04a", "prop_worklight_04b_l1", "prop_worklight_04c_l1", "prop_worklight_04d_l1", "prop_workwall_01", "prop_workwall_02", "prop_wreckedcart", "prop_wrecked_buzzard", "prop_w_board_blank", "prop_w_board_blank_2", "prop_w_fountain_01", "prop_w_me_bottle", "prop_w_me_dagger", "prop_w_me_hatchet", "prop_w_me_knife_01", "prop_w_r_cedar_01", "prop_w_r_cedar_dead", "prop_xmas_ext", "prop_xmas_tree_int", "prop_yacht_lounger", "prop_yacht_seat_01", "prop_yacht_seat_02", "prop_yacht_seat_03", "prop_yacht_table_01", "prop_yacht_table_02", "prop_yacht_table_03", "prop_yaught_chair_01", "prop_yaught_sofa_01", "prop_yell_plastic_target", "prop_yoga_mat_01", "prop_yoga_mat_02", "prop_yoga_mat_03", "prop_ztype_covered", "p_a4_sheets_s", "p_abat_roller_1", "p_abat_roller_1_col", "p_amanda_note_01_s", "p_amb_bagel_01", "p_amb_bag_bottle_01", "p_amb_brolly_01", "p_amb_brolly_01_s", "p_amb_clipboard_01", "p_amb_coffeecup_01", "p_amb_drain_water_double", "p_amb_drain_water_longstrip", "p_amb_drain_water_single", "p_amb_joint_01", "p_amb_lap_top_01", "p_amb_lap_top_02", "p_amb_phone_01", "p_armchair_01_s", "p_arm_bind_cut_s", "p_ashley_neck_01_s", "p_attache_case_01_s", "p_balaclavamichael_s", "p_banknote_onedollar_s", "p_banknote_s", "p_barierbase_test_s", "p_barier_test_s", "p_beefsplitter_s", "p_binbag_01_s", "p_bison_winch_s", "p_bloodsplat_s", "p_blueprints_01_s", "p_brain_chunk_s", "p_bs_map_door_01_s", "p_cablecar_s", "p_cablecar_s_door_l", "p_cablecar_s_door_r", "p_cargo_chute_s", "p_car_keys_01", "p_cash_envelope_01_s", "p_cctv_s", "p_champ_flute_s", "p_chem_vial_02b_s", "p_cigar_pack_02_s", "p_clb_officechair_s", "p_cletus_necklace_s", "p_clothtarp_down_s", "p_clothtarp_s", "p_clothtarp_up_s", "p_controller_01_s", "p_counter_01_glass", "p_counter_01_glass_plug", "p_counter_02_glass", "p_counter_03_glass", "p_counter_04_glass", "p_crahsed_heli_s", "p_cs1_14b_train_esdoor", "p_cs1_14b_train_s", "p_cs1_14b_train_s_col", "p_cs1_14b_train_s_colopen", "p_csbporndudes_necklace_s", "p_csh_strap_01_pro_s", "p_csh_strap_01_s", "p_csh_strap_03_s", "p_cs_15m_rope_s", "p_cs_bandana_s", "p_cs_bbbat_01", "p_cs_beachtowel_01_s", "p_cs_beverly_lanyard_s", "p_cs_bottle_01", "p_cs_bowl_01b_s", "p_cs_cam_phone", "p_cs_ciggy_01b_s", "p_cs_clipboard", "p_cs_clothes_box_s", "p_cs_coke_line_s", "p_cs_comb_01", "p_cs_cuffs_02_s", "p_cs_duffel_01_s", "p_cs_joint_01", "p_cs_joint_02", "p_cs_laptop_02", "p_cs_laptop_02_w", "p_cs_laz_ptail_s", "p_cs_leaf_s", "p_cs_lighter_01", "p_cs_locker_01", "p_cs_locker_01_s", "p_cs_locker_02", "p_cs_locker_door_01", "p_cs_locker_door_01b", "p_cs_locker_door_02", "p_cs_newspaper_s", "p_cs_pamphlet_01_s", "p_cs_panties_03_s", "p_cs_papers_01", "p_cs_papers_02", "p_cs_papers_03", "p_cs_paper_disp_02", "p_cs_paper_disp_1", "p_cs_para_ropebit_s", "p_cs_para_ropes_s", "p_cs_polaroid_s", "p_cs_police_torch_s", "p_cs_pour_tube_s", "p_cs_power_cord_s", "p_cs_rope_tie_01_s", "p_cs_sack_01_s", "p_cs_saucer_01_s", "p_cs_scissors_s", "p_cs_script_bottle_s", "p_cs_script_s", "p_cs_shirt_01_s", "p_cs_shot_glass_2_s", "p_cs_shot_glass_s", "p_cs_sub_hook_01_s", "p_cs_toaster_s", "p_cs_tracy_neck2_s", "p_cs_trolley_01_s", "p_cut_door_01", "p_cut_door_02", "p_cut_door_03", "p_defilied_ragdoll_01_s", "p_devin_box_01_s", "p_dinechair_01_s", "p_disp_02_door_01", "p_dock_crane_cable_s", "p_dock_crane_cabl_s", "p_dock_crane_sld_s", "p_dock_rtg_ld_cab", "p_dock_rtg_ld_spdr", "p_dock_rtg_ld_wheel", "p_dumpster_t", "p_d_scuba_mask_s", "p_d_scuba_tank_s", "p_ecg_01_cable_01_s", "p_fag_packet_01_s", "p_ferris_car_01", "p_ferris_wheel_amo_l", "p_ferris_wheel_amo_l2", "p_ferris_wheel_amo_p", "p_fib_rubble_s", "p_film_set_static_01", "p_finale_bld_ground_s", "p_finale_bld_pool_s", "p_fin_vaultdoor_s", "p_flatbed_strap_s", "p_folding_chair_01_s", "p_f_duster_handle_01", "p_f_duster_head_01", "p_gaffer_tape_s", "p_gaffer_tape_strip_s", "p_gar_door_01_s", "p_gar_door_02_s", "p_gar_door_03_s", "p_gasmask_s", "p_gcase_s", "p_gdoor1colobject_s", "p_gdoor1_s", "p_hand_toilet_s", "p_hw1_22_doors_s", "p_hw1_22_table_s", "p_ice_box_01_s", "p_ice_box_proxy_col", "p_idol_case_s", "p_ilev_p_easychair_s", "p_ing_bagel_01", "p_ing_microphonel_01", "p_ing_skiprope_01", "p_ing_skiprope_01_s", "p_inhaler_01_s", "p_int_jewel_mirror", "p_int_jewel_plant_01", "p_int_jewel_plant_02", "p_jewel_door_l", "p_jewel_door_r1", "p_jewel_necklace01_s", "p_jewel_necklace02_s", "p_jewel_necklace_02", "p_jewel_pickup33_s", "p_jimmyneck_03_s", "p_jimmy_necklace_s", "p_kitch_juicer_s", "p_lamarneck_01_s", "p_laptop_02_s", "p_large_gold_s", "p_lazlow_shirt_s", "p_laz_j01_s", "p_laz_j02_s", "p_ld_am_ball_01", "p_ld_bs_bag_01", "p_ld_cable_tie_01_s", "p_ld_coffee_vend_01", "p_ld_coffee_vend_s", "p_ld_conc_cyl_01", "p_ld_crocclips01_s", "p_ld_crocclips02_s", "p_ld_frisbee_01", "p_ld_heist_bag_01", "p_ld_heist_bag_s", "p_ld_heist_bag_s_1", "p_ld_heist_bag_s_2", "p_ld_heist_bag_s_pro", "p_ld_heist_bag_s_pro2_s", "p_ld_heist_bag_s_pro_o", "p_ld_id_card_002", "p_ld_id_card_01", "p_ld_sax", "p_ld_soc_ball_01", "p_ld_stinger_s", "p_leg_bind_cut_s", "p_lestersbed_s", "p_lev_sofa_s", "p_lifeinv_neck_01_s", "p_litter_picker_s", "p_loose_rag_01_s", "p_mast_01_s", "p_mbbed_s", "p_medal_01_s", "p_med_jet_01_s", "p_meth_bag_01_s", "p_michael_backpack_s", "p_michael_scuba_mask_s", "p_michael_scuba_tank_s", "p_mp_door_01", "p_mp_door_02", "p_mp_door_03", "p_mp_door_04", "p_mp_door_05", "p_mp_door_06", "p_mp_door_07", "p_mp_showerdoor_s", "p_mrk_harness_s", "p_mr_raspberry_01_s", "p_new_j_counter_01", "p_new_j_counter_02", "p_new_j_counter_03", "p_notepad_01_s", "p_novel_01_s", "p_num_plate_01", "p_num_plate_02", "p_num_plate_03", "p_num_plate_04", "p_oil_pjack_01_amo", "p_oil_pjack_01_frg_s", "p_oil_pjack_02_amo", "p_oil_pjack_02_frg_s", "p_oil_pjack_03_amo", "p_oil_pjack_03_frg_s", "p_oil_slick_01", "p_omega_neck_01_s", "p_omega_neck_02_s", "p_orleans_mask_s", "p_ortega_necklace_s", "p_oscar_necklace_s", "p_overalls_02_s", "p_pallet_02a_s", "p_panties_s", "p_parachute1_mp_dec", "p_parachute1_mp_s", "p_parachute1_s", "p_parachute1_sp_dec", "p_parachute1_sp_s", "p_parachute_fallen_s", "p_parachute_s", "p_parachute_s_shop", "p_para_bag_xmas_s", "p_para_broken1_s", "p_patio_lounger1_s", "p_pharm_unit_01", "p_pharm_unit_02", "p_phonebox_02_s", "p_pistol_holster_s", "p_planning_board_01", "p_planning_board_02", "p_planning_board_03", "p_planning_board_04", "p_pliers_01_s", "p_po1_01_doorm_s", "p_police_radio_hset_s", "p_poly_bag_01_s", "p_pour_wine_s", "p_rail_controller_s", "p_rcss_folded", "p_rcss_s", "p_rc_handset", "p_res_sofa_l_s", "p_ringbinder_01_s", "p_rpulley_s", "p_seabed_whalebones", "p_secret_weapon_02", "p_sec_case_02_s", "p_sec_gate_01_s", "p_sec_gate_01_s_col", "p_shoalfish_s", "p_shower_towel_s", "p_single_rose_s", "p_skiprope_r_s", "p_smg_holster_01_s", "p_soloffchair_s", "p_spinning_anus_s", "p_steve_scuba_hood_s", "p_stinger_02", "p_stinger_03", "p_stinger_04", "p_stinger_piece_01", "p_stinger_piece_02", "p_stretch_necklace_s", "p_sub_crane_s", "p_sunglass_m_s", "p_syringe_01_s", "p_s_scuba_mask_s", "p_s_scuba_tank_s", "p_tennis_bag_01_s", "p_till_01_s", "p_tmom_earrings_s", "p_tourist_map_01_s", "p_tram_crash_s", "p_trevor_prologe_bally_s", "p_trev_rope_01_s", "p_trev_ski_mask_s", "p_tumbler_01_bar_s", "p_tumbler_01_s", "p_tumbler_01_trev_s", "p_tumbler_02_s1", "p_tumbler_cs2_s", "p_tumbler_cs2_s_day", "p_tumbler_cs2_s_trev", "p_tv_cam_02_s", "p_t_shirt_pile_s", "p_v_43_safe_s", "p_v_ilev_chopshopswitch_s", "p_v_med_p_sofa_s", "p_v_res_tt_bed_s", "p_wade_necklace_s", "p_watch_01", "p_watch_01_s", "p_watch_02", "p_watch_02_s", "p_watch_03", "p_watch_03_s", "p_watch_04", "p_watch_05", "p_watch_06", "p_waterboardc_s", "p_wboard_clth_s", "p_weed_bottle_s", "p_whiskey_bottle_s", "p_whiskey_notop", "p_whiskey_notop_empty", "p_winch_long_s", "p_w_ar_musket_chrg", "p_yacht_chair_01_s", "p_yoga_mat_01_s", "p_yoga_mat_02_s", "p_yoga_mat_03_s", "reeds_03", "rock_4_cl_2_1", "rock_4_cl_2_2", "sub1_add_002", "sub1_add_003", "sub1_add_004", "sub1_add_005", "sub1_add_006", "sub1_add_007", "sub1_add_008", "sub1_add_01", "subway1_ceilingbits1", "subway1_ceilingbits2", "subway1_mirror2", "sub_01_shb", "s_prop_hdphones", "s_prop_hdphones_1", "test_prop_gravetomb_01a", "test_prop_gravetomb_02a", "test_tree_cedar_trunk_001", "test_tree_forest_trunk_01", "test_tree_forest_trunk_04", "test_tree_forest_trunk_base_01", "test_tree_forest_trunk_fall_01", "to_be_swapped", "v_christmas_tree", "v_christmas_tree_15", "v_club_baham_bckt_chr", "v_club_bahbarstool", "v_club_barchair", "v_club_brablk", "v_club_brablu", "v_club_bragld", "v_club_brapnk", "v_club_brush", "v_club_cc_stool", "v_club_ch_armchair", "v_club_ch_briefchair", "v_club_comb", "v_club_dress1", "v_club_officechair", "v_club_officeset", "v_club_officesofa", "v_club_rack", "v_club_roc_cab1", "v_club_roc_cab2", "v_club_roc_cab3", "v_club_roc_cabamp", "v_club_roc_ctable", "v_club_roc_eq1", "v_club_roc_eq2", "v_club_roc_gstand", "v_club_roc_jacket1", "v_club_roc_jacket2", "v_club_roc_lampoff", "v_club_roc_micstd", "v_club_roc_mixer1", "v_club_roc_mixer2", "v_club_roc_monitor", "v_club_roc_mscreen", "v_club_roc_spot_b", "v_club_roc_spot_g", "v_club_roc_spot_off", "v_club_roc_spot_r", "v_club_roc_spot_w", "v_club_roc_spot_y", "v_club_roc_zstand", "v_club_shoerack", "v_club_silkrobe", "v_club_skirtflare", "v_club_skirtplt", "v_club_slip", "v_club_stagechair", "v_club_vuarmchair", "v_club_vubrushpot", "v_club_vuhairdryer", "v_club_vumakeupbrsh", "v_club_vusnaketank", "v_club_vutongs", "v_club_vuvanity", "v_club_vuvanityboxop", "v_club_vu_bear", "v_club_vu_boa", "v_club_vu_chngestool", "v_club_vu_deckcase", "v_club_vu_djbag", "v_club_vu_djunit", "v_club_vu_drawer", "v_club_vu_drawopen", "v_club_vu_table", "v_corp_bk_chair3", "v_corp_cd_chair", "v_corp_offchair", "v_ilev_247_offdorr", "v_ilev_abbmaindoor", "v_ilev_abbmaindoor2", "v_ilev_abmincer", "v_ilev_acet_projector", "v_ilev_arm_secdoor", "v_ilev_a_tissue", "v_ilev_bank4door01", "v_ilev_bank4door02", "v_ilev_bank4doorcls01", "v_ilev_bank4doorcls02", "v_ilev_bk_closedsign", "v_ilev_bk_door", "v_ilev_bk_door2", "v_ilev_bk_gate", "v_ilev_bk_gate2", "v_ilev_bk_gatedam", "v_ilev_bk_safegate", "v_ilev_bk_vaultdoor", "v_ilev_blnds_clsd", "v_ilev_blnds_opn", "v_ilev_bl_doorel_l", "v_ilev_bl_doorel_r", "v_ilev_bl_doorpool", "v_ilev_bl_doorsl_l", "v_ilev_bl_doorsl_r", "v_ilev_bl_door_l", "v_ilev_bl_door_r", "v_ilev_bl_elevdis1", "v_ilev_bl_elevdis2", "v_ilev_bl_elevdis3", "v_ilev_bl_shutter1", "v_ilev_bl_shutter2", "v_ilev_body_parts", "v_ilev_bs_door", "v_ilev_carmod3door", "v_ilev_carmod3lamp", "v_ilev_carmodlamps", "v_ilev_cbankcountdoor01", "v_ilev_cbankvauldoor01", "v_ilev_cbankvaulgate01", "v_ilev_cbankvaulgate02", "v_ilev_cd_door", "v_ilev_cd_door2", "v_ilev_cd_door3", "v_ilev_cd_dust", "v_ilev_cd_entrydoor", "v_ilev_cd_lampal", "v_ilev_cd_lampal_off", "v_ilev_cd_secdoor", "v_ilev_cd_secdoor2", "v_ilev_cd_sprklr", "v_ilev_cd_sprklr_on", "v_ilev_cd_sprklr_on2", "v_ilev_chair02_ped", "v_ilev_chopshopswitch", "v_ilev_ch_glassdoor", "v_ilev_ciawin_solid", "v_ilev_cin_screen", "v_ilev_clothhiendlights", "v_ilev_clothhiendlightsb", "v_ilev_clothmiddoor", "v_ilev_cm_door1", "v_ilev_cor_doorlift01", "v_ilev_cor_doorlift02", "v_ilev_cor_firedoor", "v_ilev_cor_firedoorwide", "v_ilev_cor_windowsolid", "v_ilev_csr_door_l", "v_ilev_csr_door_r", "v_ilev_csr_garagedoor", "v_ilev_csr_lod_boarded", "v_ilev_csr_lod_broken", "v_ilev_csr_lod_normal", "v_ilev_cs_door", "v_ilev_cs_door01", "v_ilev_cs_door01_r", "v_ilev_ct_door01", "v_ilev_ct_door02", "v_ilev_ct_door03", "v_ilev_ct_doorl", "v_ilev_ct_doorr", "v_ilev_depboxdoor01", "v_ilev_depo_box01", "v_ilev_depo_box01_lid", "v_ilev_deviantfrontdoor", "v_ilev_dev_door", "v_ilev_dev_windowdoor", "v_ilev_door_orange", "v_ilev_door_orangesolid", "v_ilev_epsstoredoor", "v_ilev_fa_backdoor", "v_ilev_fa_dinedoor", "v_ilev_fa_frontdoor", "v_ilev_fa_roomdoor", "v_ilev_fa_slidedoor", "v_ilev_fa_warddoorl", "v_ilev_fa_warddoorr", "v_ilev_fbisecgate", "v_ilev_fb_door01", "v_ilev_fb_door02", "v_ilev_fb_doorshortl", "v_ilev_fb_doorshortr", "v_ilev_fb_sl_door01", "v_ilev_fh_bedrmdoor", "v_ilev_fh_dineeamesa", "v_ilev_fh_door01", "v_ilev_fh_door02", "v_ilev_fh_door5", "v_ilev_fh_frntdoor", "v_ilev_fh_frontdoor", "v_ilev_fh_kitchenstool", "v_ilev_fh_lampa_on", "v_ilev_fh_slidingdoor", "v_ilev_fibl_door01", "v_ilev_fibl_door02", "v_ilev_fib_atrcol", "v_ilev_fib_atrgl1s", "v_ilev_fib_atrgl2s", "v_ilev_fib_atrgl3s", "v_ilev_fib_btrmdr", "v_ilev_fib_debris", "v_ilev_fib_door1", "v_ilev_fib_door1_s", "v_ilev_fib_door2", "v_ilev_fib_door3", "v_ilev_fib_doorbrn", "v_ilev_fib_doore_l", "v_ilev_fib_doore_r", "v_ilev_fib_door_maint", "v_ilev_fib_postbox_door", "v_ilev_fib_sprklr", "v_ilev_fib_sprklr_off", "v_ilev_fib_sprklr_on", "v_ilev_finale_shut01", "v_ilev_finelevdoor01", "v_ilev_fingate", "v_ilev_fin_vaultdoor", "v_ilev_fos_desk", "v_ilev_fos_mic", "v_ilev_fos_tvstage", "v_ilev_found_cranebucket", "v_ilev_found_crane_pulley", "v_ilev_found_gird_crane", "v_ilev_frnkwarddr1", "v_ilev_frnkwarddr2", "v_ilev_gangsafe", "v_ilev_gangsafedial", "v_ilev_gangsafedoor", "v_ilev_garageliftdoor", "v_ilev_gb_teldr", "v_ilev_gb_vaubar", "v_ilev_gb_vauldr", "v_ilev_gcshape_assmg_25", "v_ilev_gcshape_assmg_50", "v_ilev_gcshape_asssmg_25", "v_ilev_gcshape_asssmg_50", "v_ilev_gcshape_asssnip_25", "v_ilev_gcshape_asssnip_50", "v_ilev_gcshape_bull_25", "v_ilev_gcshape_bull_50", "v_ilev_gcshape_hvyrif_25", "v_ilev_gcshape_hvyrif_50", "v_ilev_gcshape_pistol50_25", "v_ilev_gcshape_pistol50_50", "v_ilev_gcshape_progar_25", "v_ilev_gcshape_progar_50", "v_ilev_gc_door01", "v_ilev_gc_door03", "v_ilev_gc_door04", "v_ilev_gc_grenades", "v_ilev_gc_handguns", "v_ilev_gc_weapons", "v_ilev_genbankdoor1", "v_ilev_genbankdoor2", "v_ilev_gendoor01", "v_ilev_gendoor02", "v_ilev_gold", "v_ilev_gtdoor", "v_ilev_gtdoor02", "v_ilev_gunhook", "v_ilev_gunsign_assmg", "v_ilev_gunsign_asssmg", "v_ilev_gunsign_asssniper", "v_ilev_gunsign_bull", "v_ilev_gunsign_hvyrif", "v_ilev_gunsign_pistol50", "v_ilev_gunsign_progar", "v_ilev_hd_chair", "v_ilev_hd_door_l", "v_ilev_hd_door_r", "v_ilev_housedoor1", "v_ilev_j2_door", "v_ilev_janitor_frontdoor", "v_ilev_leath_chr", "v_ilev_lester_doorfront", "v_ilev_lester_doorveranda", "v_ilev_lest_bigscreen", "v_ilev_liconftable_sml", "v_ilev_light_wardrobe_face", "v_ilev_lostdoor", "v_ilev_losttoiletdoor", "v_ilev_mchalkbrd_1", "v_ilev_mchalkbrd_2", "v_ilev_mchalkbrd_3", "v_ilev_mchalkbrd_4", "v_ilev_mchalkbrd_5", "v_ilev_melt_set01", "v_ilev_methdoorbust", "v_ilev_methdoorscuff", "v_ilev_methtraildoor", "v_ilev_mldoor02", "v_ilev_mm_door", "v_ilev_mm_doordaughter", "v_ilev_mm_doorm_l", "v_ilev_mm_doorm_r", "v_ilev_mm_doorson", "v_ilev_mm_doorw", "v_ilev_mm_faucet", "v_ilev_mm_fridgeint", "v_ilev_mm_fridge_l", "v_ilev_mm_fridge_r", "v_ilev_mm_screen", "v_ilev_mm_screen2", "v_ilev_mm_screen2_vl", "v_ilev_mm_scre_off", "v_ilev_mm_windowwc", "v_ilev_moteldoorcso", "v_ilev_mp_bedsidebook", "v_ilev_mp_high_frontdoor", "v_ilev_mp_low_frontdoor", "v_ilev_mp_mid_frontdoor", "v_ilev_mr_rasberryclean", "v_ilev_m_pitcher", "v_ilev_m_sofa", "v_ilev_m_sofacushion", "v_ilev_out_serv_sign", "v_ilev_phroofdoor", "v_ilev_ph_bench", "v_ilev_ph_cellgate", "v_ilev_ph_cellgate02", "v_ilev_ph_door002", "v_ilev_ph_door01", "v_ilev_ph_doorframe", "v_ilev_ph_gendoor", "v_ilev_ph_gendoor002", "v_ilev_ph_gendoor003", "v_ilev_ph_gendoor004", "v_ilev_ph_gendoor005", "v_ilev_ph_gendoor006", "v_ilev_po_door", "v_ilev_prop_74_emr_3b", "v_ilev_prop_74_emr_3b_02", "v_ilev_prop_fib_glass", "v_ilev_p_easychair", "v_ilev_ra_door1_l", "v_ilev_ra_door1_r", "v_ilev_ra_door2", "v_ilev_ra_door3", "v_ilev_ra_door4l", "v_ilev_ra_door4r", "v_ilev_ra_doorsafe", "v_ilev_rc_door1", "v_ilev_rc_door1_st", "v_ilev_rc_door2", "v_ilev_rc_door3_l", "v_ilev_rc_door3_r", "v_ilev_rc_doorel_l", "v_ilev_rc_doorel_r", "v_ilev_rc_win_col", "v_ilev_roc_door1_l", "v_ilev_roc_door1_r", "v_ilev_roc_door2", "v_ilev_roc_door3", "v_ilev_roc_door4", "v_ilev_roc_door5", "v_ilev_serv_door01", "v_ilev_shrf2door", "v_ilev_shrfdoor", "v_ilev_sol_off_door01", "v_ilev_sol_windl", "v_ilev_sol_windr", "v_ilev_spraydoor", "v_ilev_ss_door01", "v_ilev_ss_door02", "v_ilev_ss_door03", "v_ilev_ss_door04", "v_ilev_ss_door5_l", "v_ilev_ss_door5_r", "v_ilev_ss_door7", "v_ilev_ss_door8", "v_ilev_ss_doorext", "v_ilev_stad_fdoor", "v_ilev_staffdoor", "v_ilev_store_door", "v_ilev_ta_door", "v_ilev_ta_door2", "v_ilev_ta_tatgun", "v_ilev_tort_door", "v_ilev_tort_stool", "v_ilev_tow_doorlifta", "v_ilev_tow_doorliftb", "v_ilev_trevtraildr", "v_ilev_trev_door", "v_ilev_trev_doorbath", "v_ilev_trev_doorfront", "v_ilev_trev_patiodoor", "v_ilev_trev_pictureframe", "v_ilev_trev_pictureframebroken", "v_ilev_trev_planningboard", "v_ilev_tt_plate01", "v_ilev_uvcheetah", "v_ilev_uventity", "v_ilev_uvjb700", "v_ilev_uvline", "v_ilev_uvmonroe", "v_ilev_uvsquiggle", "v_ilev_uvtext", "v_ilev_uvztype", "v_ilev_vagostoiletdoor", "v_ilev_vag_door", "v_ilev_winblnd_clsd", "v_ilev_winblnd_opn", "v_ind_cfbox", "v_ind_cfbox2", "v_ind_cfcrate3", "v_ind_cfcup", "v_ind_cfkeyboard", "v_ind_cfmouse", "v_ind_cf_boxes", "v_ind_cf_crate", "v_ind_cf_crate1", "v_ind_cf_crate2", "v_ind_cs_box01", "v_ind_cs_box02", "v_ind_ss_box01", "v_ind_ss_box02", "v_ind_ss_box03", "v_ind_ss_box04", "v_ind_ss_laptop", "v_lirg_frankaunt_ward_face", "v_lirg_frankaunt_ward_main", "v_lirg_frankhill_ward_face", "v_lirg_frankhill_ward_main", "v_lirg_gunlight", "v_lirg_michael_ward_default", "v_lirg_michael_ward_face", "v_lirg_michael_ward_main", "v_lirg_mphigh_ward_face", "v_lirg_mphigh_ward_main", "v_lirg_shop_high", "v_lirg_shop_low", "v_lirg_shop_mid", "v_lirg_trevapt_ward_face", "v_lirg_trevapt_ward_main", "v_lirg_trevstrip_ward_face", "v_lirg_trevstrip_ward_main", "v_lirg_trevtrail_ward_face", "v_lirg_trevtrail_ward_main", "v_med_apecrate", "v_med_apecratelrg", "v_med_barrel", "v_med_bed1", "v_med_bed2", "v_med_bedtable", "v_med_bench1", "v_med_bench2", "v_med_benchcentr", "v_med_benchset1", "v_med_bigtable", "v_med_bin", "v_med_bl_fan_base", "v_med_centrifuge1", "v_med_centrifuge2", "v_med_cooler", "v_med_corlowfilecab", "v_med_cor_alarmlight", "v_med_cor_autopsytbl", "v_med_cor_ceilingmonitor", "v_med_cor_cembin", "v_med_cor_cemtrolly2", "v_med_cor_chemical", "v_med_cor_dividerframe", "v_med_cor_downlight", "v_med_cor_emblmtable", "v_med_cor_fileboxa", "v_med_cor_filingcab", "v_med_cor_flatscreentv", "v_med_cor_hose", "v_med_cor_largecupboard", "v_med_cor_lightbox", "v_med_cor_mask", "v_med_cor_masks", "v_med_cor_medhose", "v_med_cor_medstool", "v_med_cor_minifridge", "v_med_cor_neckrest", "v_med_cor_papertowels", "v_med_cor_photocopy", "v_med_cor_pinboard", "v_med_cor_shelfrack", "v_med_cor_stepladder", "v_med_cor_tvstand", "v_med_cor_unita", "v_med_cor_wallunita", "v_med_cor_wallunitb", "v_med_cor_wheelbench", "v_med_cor_whiteboard", "v_med_crutch01", "v_med_curtains", "v_med_curtains1", "v_med_curtains2", "v_med_curtains3", "v_med_emptybed", "v_med_examlight", "v_med_examlight_static", "v_med_fabricchair1", "v_med_fumesink", "v_med_gastank", "v_med_hazmatscan", "v_med_hospheadwall1", "v_med_hospseating1", "v_med_hospseating2", "v_med_hospseating3", "v_med_hospseating4", "v_med_hosptable", "v_med_hosptableglass", "v_med_lab_elecbox1", "v_med_lab_elecbox2", "v_med_lab_elecbox3", "v_med_lab_filtera", "v_med_lab_filterb", "v_med_lab_fridge", "v_med_lab_optable", "v_med_lab_wallcab", "v_med_lab_whboard1", "v_med_lab_whboard2", "v_med_latexgloveboxblue", "v_med_latexgloveboxgreen", "v_med_latexgloveboxred", "v_med_lrgisolator", "v_med_mattress", "v_med_medwastebin", "v_med_metalfume", "v_med_microscope", "v_med_oscillator1", "v_med_oscillator2", "v_med_oscillator3", "v_med_oscillator4", "v_med_pillow", "v_med_p_coffeetable", "v_med_p_desk", "v_med_p_deskchair", "v_med_p_easychair", "v_med_p_ext_plant", "v_med_p_fanlight", "v_med_p_figfish", "v_med_p_floorlamp", "v_med_p_lamp_on", "v_med_p_notebook", "v_med_p_planter", "v_med_p_sideboard", "v_med_p_sidetable", "v_med_p_sofa", "v_med_p_tidybox", "v_med_p_vasetall", "v_med_p_wallhead", "v_med_soapdisp", "v_med_soapdispencer", "v_med_storage", "v_med_trolley", "v_med_trolley2", "v_med_vats", "v_med_wallpicture1", "v_med_wallpicture2", "v_med_whickchair2", "v_med_whickchair2bit", "v_med_whickerchair1", "v_med_xray", "v_metro_steps006seoul", "v_metro_steps007seoul", "v_metro_steps3seoul", "v_prop_floatcandle", "v_res_bowl_dec", "v_res_cabinet", "v_res_cakedome", "v_res_cctv", "v_res_cd", "v_res_cdstorage", "v_res_cherubvase", "v_res_desklamp", "v_res_d_armchair", "v_res_d_bed", "v_res_d_closetdoorl", "v_res_d_closetdoorr", "v_res_d_coffeetable", "v_res_d_dildo_a", "v_res_d_dildo_b", "v_res_d_dildo_c", "v_res_d_dildo_d", "v_res_d_dildo_e", "v_res_d_dildo_f", "v_res_d_dressdummy", "v_res_d_dressingtable", "v_res_d_highchair", "v_res_d_lampa", "v_res_d_lube", "v_res_d_paddedwall", "v_res_d_ramskull", "v_res_d_roundtable", "v_res_d_sideunit", "v_res_d_smallsidetable", "v_res_d_sofa", "v_res_d_whips", "v_res_d_zimmerframe", "v_res_fashmag1", "v_res_fashmagopen", "v_res_fa_basket", "v_res_fa_boot01l", "v_res_fa_boot01r", "v_res_fa_butknife", "v_res_fa_cap01", "v_res_fa_chair01", "v_res_fa_chair02", "v_res_fa_chopbrd", "v_res_fa_fan", "v_res_fa_grater", "v_res_fa_idol02", "v_res_fa_lamp1on", "v_res_fa_lamp2off", "v_res_fa_magtidy", "v_res_fa_phone", "v_res_fa_pyramid", "v_res_fa_shoebox1", "v_res_fa_shoebox2", "v_res_fa_shoebox3", "v_res_fa_shoebox4", "v_res_fa_smokealarm", "v_res_fa_sponge01", "v_res_fa_trainer01l", "v_res_fa_trainer01r", "v_res_fa_trainer02l", "v_res_fa_trainer02r", "v_res_fa_trainer03l", "v_res_fa_trainer03r", "v_res_fa_trainer04l", "v_res_fa_trainer04r", "v_res_fa_umbrella", "v_res_fa_yogamat002", "v_res_fa_yogamat1", "v_res_fh_aftershavebox", "v_res_fh_barcchair", "v_res_fh_bedsideclock", "v_res_fh_benchlong", "v_res_fh_benchshort", "v_res_fh_coftablea", "v_res_fh_coftableb", "v_res_fh_coftbldisp", "v_res_fh_crateclosed", "v_res_fh_crateopen", "v_res_fh_dineeamesa", "v_res_fh_dineeamesb", "v_res_fh_dineeamesc", "v_res_fh_diningtable", "v_res_fh_easychair", "v_res_fh_floorlamp", "v_res_fh_flowersa", "v_res_fh_fruitbowl", "v_res_fh_guitaramp", "v_res_fh_kitnstool", "v_res_fh_lampa_on", "v_res_fh_laundrybasket", "v_res_fh_pouf", "v_res_fh_sculptmod", "v_res_fh_sidebrddine", "v_res_fh_sidebrdlng", "v_res_fh_sidebrdlngb", "v_res_fh_singleseat", "v_res_fh_sofa", "v_res_fh_speaker", "v_res_fh_speakerdock", "v_res_fh_tableplace", "v_res_fh_towelstack", "v_res_fh_towerfan", "v_res_filebox01", "v_res_fridgemoda", "v_res_fridgemodsml", "v_res_glasspot", "v_res_harddrive", "v_res_int_oven", "v_res_investbook01", "v_res_investbook08", "v_res_ipoddock", "v_res_ivy", "v_res_jarmchair", "v_res_jcushiona", "v_res_jcushionb", "v_res_jcushionc", "v_res_jcushiond", "v_res_jewelbox", "v_res_j_coffeetable", "v_res_j_dinechair", "v_res_j_lowtable", "v_res_j_magrack", "v_res_j_radio", "v_res_j_sofa", "v_res_j_stool", "v_res_j_tablelamp1", "v_res_j_tablelamp2", "v_res_j_tvstand", "v_res_keyboard", "v_res_lestersbed", "v_res_lest_bigscreen", "v_res_lest_monitor", "v_res_mbaccessory", "v_res_mbath", "v_res_mbbed", "v_res_mbbedtable", "v_res_mbbed_mess", "v_res_mbbin", "v_res_mbchair", "v_res_mbdresser", "v_res_mbottoman", "v_res_mbowlornate", "v_res_mbronzvase", "v_res_mbsink", "v_res_mbtaps", "v_res_mbtowel", "v_res_mbtowelfld", "v_res_mchalkbrd", "v_res_mchopboard", "v_res_mconsolemod", "v_res_mconsolemove", "v_res_mcupboard", "v_res_mdbed", "v_res_mdbedlamp", "v_res_mdbedlamp_off", "v_res_mdbedtable", "v_res_mdchest", "v_res_mdchest_moved", "v_res_mddesk", "v_res_mddresser", "v_res_mddresser_off", "v_res_mexball", "v_res_mflowers", "v_res_mknifeblock", "v_res_mkniferack", "v_res_mlaundry", "v_res_mmug", "v_res_monitor", "v_res_monitorstand", "v_res_monitorwidelarge", "v_res_mousemat", "v_res_mplanttongue", "v_res_mplinth", "v_res_mp_ashtraya", "v_res_mp_ashtrayb", "v_res_mp_sofa", "v_res_mp_stripchair", "v_res_msidetblemod", "v_res_msonbed", "v_res_msonbed_s", "v_res_msoncabinet", "v_res_mtblelampmod", "v_res_mutensils", "v_res_mvasechinese", "v_res_m_armchair", "v_res_m_armoire", "v_res_m_armoirmove", "v_res_m_bananaplant", "v_res_m_candle", "v_res_m_candlelrg", "v_res_m_console", "v_res_m_dinechair", "v_res_m_dinetble_replace", "v_res_m_fameshame", "v_res_m_fame_flyer", "v_res_m_h_console", "v_res_m_h_sofa_sml", "v_res_m_kscales", "v_res_m_lampstand", "v_res_m_lampstand2", "v_res_m_lamptbl", "v_res_m_lamptbl_off", "v_res_m_palmplant1", "v_res_m_palmstairs", "v_res_m_sidetable", "v_res_m_sinkunit", "v_res_m_stool", "v_res_m_stool_replaced", "v_res_m_urn", "v_res_m_wbowl_move", "v_res_m_wctoiletroll", "v_res_m_woodbowl", "v_res_officeboxfile01", "v_res_ovenhobmod", "v_res_paperfolders", "v_res_pcheadset", "v_res_pcspeaker", "v_res_pctower", "v_res_pcwoofer", "v_res_pestle", "v_res_plate_dec", "v_res_printer", "v_res_rosevasedead", "v_res_rubberplant", "v_res_r_cottonbuds", "v_res_r_figauth1", "v_res_r_figauth2", "v_res_r_figcat", "v_res_r_figclown", "v_res_r_figdancer", "v_res_r_figfemale", "v_res_r_figflamenco", "v_res_r_figgirl", "v_res_r_figgirlclown", "v_res_r_figoblisk", "v_res_r_figpillar", "v_res_r_milkjug", "v_res_r_silvrtray", "v_res_r_sofa", "v_res_r_teapot", "v_res_sculpt_dec", "v_res_sculpt_decd", "v_res_sculpt_dece", "v_res_sculpt_decf", "v_res_skateboard", "v_res_sketchpad", "v_res_smallplasticbox", "v_res_son_desk", "v_res_son_unitgone", "v_res_study_chair", "v_res_tabloidsa", "v_res_tabloidsc", "v_res_tissues", "v_res_trev_framechair", "v_res_tre_alarmbox", "v_res_tre_basketmess", "v_res_tre_bed1", "v_res_tre_bed1_messy", "v_res_tre_bed2", "v_res_tre_bedsidetable", "v_res_tre_bedsidetableb", "v_res_tre_bin", "v_res_tre_chair", "v_res_tre_cuprack", "v_res_tre_cushiona", "v_res_tre_cushionb", "v_res_tre_cushionc", "v_res_tre_cushiond", "v_res_tre_cushnscuzb", "v_res_tre_cushnscuzd", "v_res_tre_dvdplayer", "v_res_tre_flatbasket", "v_res_tre_fridge", "v_res_tre_fruitbowl", "v_res_tre_laundrybasket", "v_res_tre_lightfan", "v_res_tre_mixer", "v_res_tre_officechair", "v_res_tre_pineapple", "v_res_tre_plant", "v_res_tre_plugsocket", "v_res_tre_remote", "v_res_tre_sideboard", "v_res_tre_smallbookshelf", "v_res_tre_sofa", "v_res_tre_sofa_mess_a", "v_res_tre_sofa_mess_b", "v_res_tre_sofa_mess_c", "v_res_tre_sofa_s", "v_res_tre_stool", "v_res_tre_stool_leather", "v_res_tre_stool_scuz", "v_res_tre_storagebox", "v_res_tre_storageunit", "v_res_tre_table001", "v_res_tre_table2", "v_res_tre_talllamp", "v_res_tre_tree", "v_res_tre_tvstand", "v_res_tre_tvstand_tall", "v_res_tre_wardrobe", "v_res_tre_washbasket", "v_res_tre_wdunitscuz", "v_res_tre_weight", "v_res_tre_woodunit", "v_res_tt_basket", "v_res_tt_bed", "v_res_tt_bedpillow", "v_res_tt_flusher", "v_res_tt_fridge", "v_res_tt_fridgedoor", "v_res_tt_lighter", "v_res_tt_looroll", "v_res_tt_plunger", "v_res_tt_pot01", "v_res_tt_pot02", "v_res_tt_pot03", "v_res_tt_sofa", "v_res_tt_tvremote", "v_res_vacuum", "v_res_vhsplayer", "v_res_videotape", "v_ret_247_bread1", "v_ret_247_choptom", "v_ret_247_flour", "v_ret_247_ketchup2", "v_ret_247_noodle1", "v_ret_247_noodle2", "v_ret_247_noodle3", "v_ret_247_popcan2", "v_ret_247_soappowder2", "v_ret_247_swtcorn2", "v_ret_247_tomsoup1", "v_ret_247_tuna", "v_ret_247_vegsoup1", "v_ret_baglrg", "v_ret_bagsml", "v_ret_box", "v_ret_chair", "v_ret_chair_white", "v_ret_csr_bin", "v_ret_csr_signa", "v_ret_csr_signb", "v_ret_csr_signc", "v_ret_csr_signceiling", "v_ret_csr_signd", "v_ret_csr_signtri", "v_ret_csr_signtrismall", "v_ret_csr_table", "v_ret_csr_tyresale", "v_ret_fh_dryer", "v_ret_fh_fanltoff", "v_ret_fh_fanltonbas", "v_ret_fh_fry02", "v_ret_fh_ironbrd", "v_ret_fh_noodle", "v_ret_fh_pot01", "v_ret_fh_pot02", "v_ret_fh_pot05", "v_ret_fh_radiator", "v_ret_fh_walllightoff", "v_ret_fh_walllighton", "v_ret_fh_washmach", "v_ret_fh_wickbskt", "v_ret_flowers", "v_ret_gc_ammo1", "v_ret_gc_ammo2", "v_ret_gc_ammo3", "v_ret_gc_ammo4", "v_ret_gc_ammo5", "v_ret_gc_ammo8", "v_ret_gc_bag01", "v_ret_gc_bag02", "v_ret_gc_bin", "v_ret_gc_boot04", "v_ret_gc_box1", "v_ret_gc_box2", "v_ret_gc_bullet", "v_ret_gc_calc", "v_ret_gc_cashreg", "v_ret_gc_chair01", "v_ret_gc_chair02", "v_ret_gc_chair03", "v_ret_gc_clock", "v_ret_gc_cup", "v_ret_gc_ear01", "v_ret_gc_ear02", "v_ret_gc_ear03", "v_ret_gc_fan", "v_ret_gc_fax", "v_ret_gc_folder1", "v_ret_gc_folder2", "v_ret_gc_gasmask", "v_ret_gc_knifehold1", "v_ret_gc_knifehold2", "v_ret_gc_lamp", "v_ret_gc_pen1", "v_ret_gc_pen2", "v_ret_gc_phone", "v_ret_gc_print", "v_ret_gc_scissors", "v_ret_gc_shred", "v_ret_gc_sprinkler", "v_ret_gc_staple", "v_ret_gc_tshirt1", "v_ret_gc_tshirt5", "v_ret_gc_vent", "v_ret_hd_hooks_", "v_ret_hd_prod1_", "v_ret_hd_prod2_", "v_ret_hd_prod3_", "v_ret_hd_prod4_", "v_ret_hd_prod5_", "v_ret_hd_prod6_", "v_ret_hd_unit1_", "v_ret_hd_unit2_", "v_ret_j_flowerdisp", "v_ret_j_flowerdisp_white", "v_ret_mirror", "v_ret_ml_fridge", "v_ret_ml_fridge02", "v_ret_ml_fridge02_dr", "v_ret_ml_scale", "v_ret_ml_shelfrk", "v_ret_ps_bag_01", "v_ret_ps_bag_02", "v_ret_ps_box_01", "v_ret_ps_box_02", "v_ret_ps_box_03", "v_ret_ps_carrier01", "v_ret_ps_carrier02", "v_ret_ps_chair", "v_ret_ps_cologne", "v_ret_ps_cologne_01", "v_ret_ps_flowers_01", "v_ret_ps_flowers_02", "v_ret_ps_pot", "v_ret_ps_shades01", "v_ret_ps_shades02", "v_ret_ps_shoe_01", "v_ret_ps_ties_01", "v_ret_ps_ties_02", "v_ret_ps_ties_03", "v_ret_ps_ties_04", "v_ret_ps_tissue", "v_ret_ps_toiletbag", "v_ret_ps_toiletry_02", "v_ret_tablesml", "v_ret_ta_book1", "v_ret_ta_book2", "v_ret_ta_book3", "v_ret_ta_book4", "v_ret_ta_box", "v_ret_ta_camera", "v_ret_ta_firstaid", "v_ret_ta_gloves", "v_ret_ta_hero", "v_ret_ta_ink03", "v_ret_ta_ink04", "v_ret_ta_ink05", "v_ret_ta_jelly", "v_ret_ta_mag1", "v_ret_ta_mag2", "v_ret_ta_mug", "v_ret_ta_paproll", "v_ret_ta_paproll2", "v_ret_ta_pot1", "v_ret_ta_pot2", "v_ret_ta_pot3", "v_ret_ta_power", "v_ret_ta_skull", "v_ret_ta_spray", "v_ret_ta_stool", "v_ret_tissue", "v_serv_1socket", "v_serv_2socket", "v_serv_aboxes_02", "v_serv_abox_02", "v_serv_abox_04", "v_serv_abox_1", "v_serv_abox_g1", "v_serv_abox_g3", "v_serv_bktmop_h", "v_serv_bs_barbchair", "v_serv_bs_barbchair2", "v_serv_bs_barbchair3", "v_serv_bs_barbchair5", "v_serv_bs_cliipbit1", "v_serv_bs_cliipbit2", "v_serv_bs_cliipbit3", "v_serv_bs_clippers", "v_serv_bs_comb", "v_serv_bs_foam1", "v_serv_bs_gel", "v_serv_bs_hairdryer", "v_serv_bs_looroll", "v_serv_bs_razor", "v_serv_bs_scissors", "v_serv_bs_shampoo", "v_serv_bs_shvbrush", "v_serv_bs_spray", "v_serv_cln_prod_04", "v_serv_cln_prod_06", "v_serv_crdbox_2", "v_serv_ct_binoculars", "v_serv_ct_chair01", "v_serv_ct_chair02", "v_serv_ct_lamp", "v_serv_ct_light", "v_serv_ct_striplight", "v_serv_cupboard_01", "v_serv_emrglgt_off", "v_serv_firbel", "v_serv_flurlgt_01", "v_serv_hndtrk_n2_aa_h", "v_serv_lgtemg", "v_serv_metroelecpolecurve", "v_serv_metroelecpolenarrow", "v_serv_metroelecpolestation", "v_serv_metro_advertmid", "v_serv_metro_advertstand1", "v_serv_metro_advertstand2", "v_serv_metro_advertstand3", "v_serv_metro_ceilingspeaker", "v_serv_metro_ceilingvent", "v_serv_metro_elecpole_singlel", "v_serv_metro_elecpole_singler", "v_serv_metro_floorbin", "v_serv_metro_infoscreen1", "v_serv_metro_infoscreen3", "v_serv_metro_metaljunk1", "v_serv_metro_metaljunk2", "v_serv_metro_metaljunk3", "v_serv_metro_paybooth", "v_serv_metro_signals1", "v_serv_metro_signals2", "v_serv_metro_signconnect", "v_serv_metro_signlossantos", "v_serv_metro_signmap", "v_serv_metro_signroutes", "v_serv_metro_signtravel", "v_serv_metro_stationfence", "v_serv_metro_stationfence2", "v_serv_metro_stationgate", "v_serv_metro_statseat1", "v_serv_metro_statseat2", "v_serv_metro_tubelight", "v_serv_metro_tubelight2", "v_serv_metro_tunnellight1", "v_serv_metro_tunnellight2", "v_serv_metro_wallbin", "v_serv_metro_walllightcage", "v_serv_plastic_box", "v_serv_plastic_box_lid", "v_serv_plas_boxgt2", "v_serv_radio", "v_serv_securitycam_03", "v_serv_securitycam_1a", "v_serv_switch_2", "v_serv_switch_3", "v_serv_tc_bin1_", "v_serv_tc_bin2_", "v_serv_tc_bin3_", "v_serv_tu_iron2_", "v_serv_tu_iron_", "v_serv_tu_light1_", "v_serv_tu_light2_", "v_serv_tu_light3_", "v_serv_tu_statio1_", "v_serv_tu_statio2_", "v_serv_tu_statio3_", "v_serv_tu_statio4_", "v_serv_tu_statio5_", "v_serv_tu_stay2_", "v_serv_tu_stay_", "v_serv_tu_trak1_", "v_serv_tu_trak2_", "v_serv_tvrack", "v_serv_waste_bin1", "v_serv_wetfloorsn", "v_tre_sofa_mess_a_s", "v_tre_sofa_mess_b_s", "v_tre_sofa_mess_c_s", "watercooler_bottle001", "w_am_baseball", "w_am_brfcase", "w_am_case", "w_am_digiscanner", "w_am_fire_exting", "w_am_flare", "w_am_jerrycan", "w_ar_advancedrifle", "w_ar_advancedrifle_luxe", "w_ar_advancedrifle_luxe_mag1", "w_ar_advancedrifle_luxe_mag2", "w_ar_advancedrifle_mag1", "w_ar_advancedrifle_mag2", "w_ar_assaultrifle", "w_ar_assaultrifle_luxe", "w_ar_assaultrifle_luxe_mag1", "w_ar_assaultrifle_luxe_mag2", "w_ar_assaultrifle_mag1", "w_ar_assaultrifle_mag2", "w_ar_bullpuprifle", "w_ar_bullpuprifle_mag1", "w_ar_bullpuprifle_mag2", "w_ar_carbinerifle", "w_ar_carbinerifle_luxe", "w_ar_carbinerifle_luxe_mag1", "w_ar_carbinerifle_luxe_mag2", "w_ar_carbinerifle_mag1", "w_ar_carbinerifle_mag2", "w_ar_musket", "w_ar_railgun", "w_ar_railgun_mag1", "w_ar_specialcarbine", "w_ar_specialcarbine_mag1", "w_ar_specialcarbine_mag2", "w_at_ar_afgrip", "w_at_ar_afgrip_luxe", "w_at_ar_flsh", "w_at_ar_flsh_2", "w_at_ar_flsh_luxe", "w_at_ar_supp", "w_at_ar_supp_02", "w_at_ar_supp_luxe", "w_at_ar_supp_luxe_02", "w_at_pi_flsh", "w_at_pi_flsh_luxe", "w_at_pi_supp", "w_at_pi_supp_2", "w_at_pi_supp_luxe", "w_at_pi_supp_luxe_2", "w_at_railcover_01", "w_at_railcover_luxe_01", "w_at_scope_large", "w_at_scope_large_luxe", "w_at_scope_macro", "w_at_scope_macro_2", "w_at_scope_macro_02_luxe", "w_at_scope_max", "w_at_scope_max_luxe", "w_at_scope_medium", "w_at_scope_medium_luxe", "w_at_scope_small", "w_at_scope_small_02_luxe_l1", "w_at_scope_small_2", "w_at_scope_small_luxe", "w_at_scope_small_luxe_2", "w_at_sr_supp", "w_at_sr_supp_2", "w_at_sr_supp_luxe", "w_at_sr_supp_luxe_2", "w_ex_apmine", "w_ex_birdshat", "w_ex_grenadefrag", "w_ex_grenadesmoke", "w_ex_molotov", "w_ex_pe", "w_ex_snowball", "w_lr_40mm", "w_lr_firework", "w_lr_firework_rocket", "w_lr_grenadelauncher", "w_lr_homing", "w_lr_homing_rocket", "w_lr_rpg", "w_lr_rpg_rocket", "w_me_bat", "w_me_bottle", "w_me_crowbar", "w_me_dagger", "w_me_gclub", "w_me_hammer", "w_me_hatchet", "w_me_knife_01", "w_me_nightstick", "w_mg_combatmg", "w_mg_combatmg_mag1", "w_mg_combatmg_mag2", "w_mg_mg", "w_mg_mg_mag1", "w_mg_mg_mag2", "w_mg_minigun", "w_pi_appistol", "w_pi_appistol_mag1", "w_pi_appistol_mag2", "w_pi_combatpistol", "w_pi_combatpistol_mag1", "w_pi_combatpistol_mag2", "w_pi_heavypistol", "w_pi_heavypistol_mag1", "w_pi_heavypistol_mag2", "w_pi_flaregun", "w_pi_flaregun_mag1", "w_pi_flaregun_shell", "w_pi_heavypistol", "w_pi_heavypistol_mag1", "w_pi_heavypistol_mag2", "w_pi_pistol", "w_pi_pistol_luxe", "w_pi_pistol_luxe_mag1", "w_pi_pistol_luxe_mag2", "w_pi_pistol_mag1", "w_pi_pistol_mag2", "w_pi_pistol50", "w_pi_pistol50_mag1", "w_pi_pistol50_mag2", "w_pi_sns_pistol", "w_pi_sns_pistol_mag1", "w_pi_sns_pistol_mag2", "w_pi_stungun", "w_pi_vintage_pistol", "w_pi_vintage_pistol_mag1", "w_pi_vintage_pistol_mag2", "w_sb_assaultsmg", "w_sb_assaultsmg_mag1", "w_sb_assaultsmg_mag2", "w_sb_gusenberg", "w_sb_gusenberg_mag1", "w_sb_gusenberg_mag2", "w_sb_microsmg", "w_sb_microsmg_luxe", "w_sb_microsmg_luxe_mag1", "w_sb_microsmg_luxe_mag2", "w_sb_microsmg_mag1", "w_sb_microsmg_mag2", "w_sb_pdw", "w_sb_pdw_mag1", "w_sb_pdw_mag2", "w_sb_smg", "w_sb_smg_luxe", "w_sb_smg_luxe_mag1", "w_sb_smg_luxe_mag2", "w_sb_smg_mag1", "w_sb_smg_mag2", "w_sg_assaultshotgun", "w_sg_assaultshotgun_mag1", "w_sg_assaultshotgun_mag2", "w_sg_bullpupshotgun", "w_sg_bullpupshotgun_mag1", "w_sg_bullpupshotgun_mag2", "w_sg_heavyshotgun", "w_sg_heavyshotgun_mag1", "w_sg_heavyshotgun_mag2", "w_sg_pumpshotgun", "w_sg_sawnoff", "w_sg_sawnoff_luxe", "w_sr_heavysniper", "w_sr_heavysniper_mag1", "w_sr_marksmanrifle", "w_sr_marksmanrifle_luxe", "w_sr_marksmanrifle_luxe_mag1", "w_sr_marksmanrifle_luxe_mag2", "w_sr_marksmanrifle_mag1", "w_sr_marksmanrifle_mag2", "w_sr_sniperrifle", "w_sr_sniperrifle_luxe", "w_sr_sniperrifle_luxe_mag1", "w_sr_sniperrifle_mag1", "beerrow_local", "beerrow_world", "des_fib_frame", "frag_plank_a", "frag_plank_b", "frag_plank_c", "frag_plank_d", "frag_plank_e", "hei_prop_bank_cctv_01", "hei_prop_bank_cctv_02", "hei_prop_bank_ornatelamp", "hei_prop_carrier_aerial_1", "hei_prop_carrier_aerial_2", "hei_prop_carrier_cargo_03a", "hei_prop_carrier_defense_02", "hei_prop_carrier_gasbogey_01", "hei_prop_carrier_liferafts", "hei_prop_carrier_lightset_1", "hei_prop_carrier_light_01", "hei_prop_carrier_ord_03", "hei_prop_carrier_panel_1", "hei_prop_carrier_panel_2", "hei_prop_carrier_panel_3", "hei_prop_carrier_panel_4", "hei_prop_carrier_radar_1", "hei_prop_heist_rolladex", "hei_prop_hei_bank_mon", "hei_prop_hei_bank_phone_01", "hei_prop_hei_bnk_lamp_01", "hei_prop_hei_bnk_lamp_02", "hei_prop_hei_bust_01", "hei_prop_hei_carrier_disp_01", "hei_prop_hei_lflts_01", "hei_prop_hei_lflts_02", "hei_prop_hei_warehousetrolly", "hei_prop_yah_glass_01", "hei_prop_yah_glass_02", "hei_prop_yah_glass_03", "hei_prop_yah_glass_04", "hei_prop_yah_glass_05", "hei_prop_yah_glass_06", "hei_prop_yah_glass_07", "hei_prop_yah_glass_08", "hei_prop_yah_glass_09", "hei_prop_yah_glass_10", "ind_prop_dlc_flag_01", "lts_prop_wine_glass_s2", "metro_t_st_sl_top", "miss_rub_couch_01", "ng_proc_binbag_01a", "ng_proc_binbag_02a", "ng_proc_block_01a", "ng_proc_block_02a", "ng_proc_block_02b", "ng_proc_box_01a", "ng_proc_brick_01a", "ng_proc_brick_01b", "ng_proc_food_bag01a", "ng_proc_food_bag02a", "ng_proc_paintcan01a", "ng_proc_paintcan02a", "pil_prop_fs_target_01", "pil_prop_fs_target_02", "pil_prop_fs_target_03", "poro_06_sig1_c_source", "prop_06_sig1_a", "prop_06_sig1_b", "prop_06_sig1_d", "prop_06_sig1_e", "prop_06_sig1_f", "prop_06_sig1_g", "prop_06_sig1_h", "prop_06_sig1_i", "prop_06_sig1_j", "prop_06_sig1_k", "prop_06_sig1_l", "prop_06_sig1_m", "prop_06_sig1_n", "prop_06_sig1_o", "prop_aircon_l_01", "prop_aircon_l_02", "prop_aircon_l_03", "prop_aircon_l_03_dam", "prop_aircon_l_04", "prop_aircon_m_01", "prop_aircon_m_02", "prop_aircon_m_03", "prop_aircon_m_04", "prop_aircon_m_05", "prop_aircon_m_06", "prop_aircon_m_07", "prop_aircon_m_08", "prop_aircon_m_10", "prop_aircon_tna_02", "prop_aircon_t_03", "prop_airdancer_2_cloth","prop_air_cargo_01a", "prop_air_cargo_01b", "prop_air_cargo_01c", "prop_air_cargo_02a", "prop_air_cargo_02b", "prop_air_conelight", "prop_air_fireexting", "prop_air_lights_02a", "prop_air_lights_02b", "prop_air_lights_04a", "prop_air_lights_05a", "prop_air_sechut_01", "prop_air_taxisign_01a", "prop_air_taxisign_02a", "prop_air_taxisign_03a", "prop_air_terlight_01a", "prop_air_terlight_01b", "prop_air_terlight_01c", "prop_air_trailer_1a", "prop_air_trailer_1b", "prop_air_trailer_1c", "prop_air_trailer_2a", "prop_air_trailer_2b", "prop_air_trailer_3a", "prop_air_trailer_3b", "prop_air_watertank3", "prop_air_windsock", "prop_amb_40oz_02", "prop_ammunation_sign_01", "prop_astro_table_01", "prop_astro_table_02", "prop_atm_01", "prop_balcony_glass_01", "prop_balcony_glass_02", "prop_balcony_glass_03", "prop_balcony_glass_04", "prop_ball_box", "prop_barebulb_01", "prop_barier_conc_01a", "prop_barier_conc_02a", "prop_barier_conc_05c", "prop_barrel_exp_01a", "prop_barrel_exp_01b", "prop_barrel_exp_01c", "prop_barrel_pile_01", "prop_barrel_pile_02", "prop_barrel_pile_03", "prop_barrel_pile_04", "prop_barrel_pile_05", "prop_barriercrash_01", "prop_barriercrash_02", "prop_barrier_wat_03a", "prop_barrier_wat_04a", "prop_barrier_wat_04b", "prop_barrier_wat_04c", "prop_barrier_work01a", "prop_barrier_work01b", "prop_barrier_work01d", "prop_barrier_work02a", "prop_barrier_work04a", "prop_barrier_work05", "prop_barrier_work06a", "prop_barrier_work06b", "prop_bar_beans", "prop_bar_caddy", "prop_bar_coasterdisp", "prop_bar_cockshaker", "prop_bar_cockshakropn", "prop_bar_drinkstraws", "prop_bar_fruit", "prop_bar_lemons", "prop_bar_limes", "prop_bar_measrjug", "prop_bar_nuts", "prop_bar_shots", "prop_bar_stirrers", "prop_bbq_1", "prop_bbq_4", "prop_bbq_5", "prop_beachball_01", "prop_beachflag_01", "prop_beachflag_02", "prop_beach_bag_01a", "prop_beach_bag_01b", "prop_beach_bag_02", "prop_beach_bag_03", "prop_beach_lilo_01", "prop_beach_lilo_02", "prop_beach_lotion_01", "prop_beach_lotion_02", "prop_beach_lotion_03", "prop_beach_parasol_01", "prop_beach_parasol_02", "prop_beach_parasol_03", "prop_beach_parasol_04", "prop_beach_parasol_05", "prop_beach_parasol_06", "prop_beach_parasol_07", "prop_beach_parasol_08", "prop_beach_parasol_09", "prop_beach_parasol_10", "prop_beach_ring_01", "prop_beach_sandcas_01", "prop_beach_sandcas_03", "prop_beach_sandcas_04", "prop_beach_sandcas_05", "prop_beach_towel_01", "prop_beach_towel_03", "prop_beach_towel_04", "prop_beerdusche", "prop_beer_am", "prop_beer_amopen", "prop_beer_bar", "prop_beer_blr", "prop_beer_bottle", "prop_beer_jakey", "prop_beer_logger", "prop_beer_logopen", "prop_beer_patriot", "prop_beer_pissh", "prop_beer_pride", "prop_beer_stz", "prop_beer_stzopen", "prop_bench_01a", "prop_bench_02", "prop_bench_03", "prop_bench_06", "prop_bench_07", "prop_bench_08", "prop_bench_10", "prop_bench_11", "prop_bikerack_1a", "prop_bikerset", "prop_bin_01a", "prop_bin_02a", "prop_bin_03a", "prop_bin_05a", "prop_bin_06a", "prop_bin_07a", "prop_bin_07b", "prop_bin_07c", "prop_bin_07d", "prop_bin_08a", "prop_bin_08open", "prop_bin_09a", "prop_bin_beach_01a", "prop_birdbath1", "prop_birdbath2", "prop_birdbathtap", "prop_bollard_02a", "prop_bollard_02b", "prop_bollard_02c", "prop_bollard_04", "prop_bollard_05", "prop_boogbd_stack_01", "prop_boogbd_stack_02", "prop_bottle_brandy", "prop_bottle_cognac", "prop_bottle_macbeth", "prop_bottle_richard", "prop_boxpile_01a", "prop_boxpile_02b", "prop_boxpile_02c", "prop_boxpile_02d", "prop_boxpile_03a", "prop_boxpile_04a", "prop_boxpile_05a", "prop_boxpile_06a", "prop_boxpile_06b", "prop_boxpile_07a", "prop_boxpile_07d", "prop_boxpile_08a", "prop_boxpile_09a", "prop_box_ammo03a", "prop_box_ammo06a", "prop_box_wood01a", "prop_box_wood02a", "prop_box_wood02a_mws", "prop_box_wood02a_pu", "prop_box_wood03a", "prop_box_wood04a", "prop_box_wood06a", "prop_box_wood07a", "prop_brandy_glass", "prop_break_skylight_01", "prop_burgerstand_01", "prop_busstop_02", "prop_busstop_04", "prop_busstop_05", "prop_bus_stop_sign", "prop_byard_benchset", "prop_byard_gastank01", "prop_byard_gastank02", "prop_byard_lifering", "prop_cactus_01a", "prop_cactus_01b", "prop_cactus_01c", "prop_cactus_01d", "prop_cactus_01e", "prop_cactus_02", "prop_cactus_03", "prop_cardbordbox_01a", "prop_cardbordbox_02a", "prop_cardbordbox_03a", "prop_cardbordbox_04a", "prop_cardbordbox_05a", "prop_cash_depot_billbrd", "prop_cava", "prop_cctv_01_sm", "prop_cctv_01_sm_02", "prop_cctv_cam_01a", "prop_cctv_cam_01b", "prop_cctv_cam_02a", "prop_cctv_cam_03a", "prop_cctv_cam_04a", "prop_cctv_cam_04b", "prop_cctv_cam_04c", "prop_cctv_cam_05a", "prop_cctv_cam_06a", "prop_cctv_cam_07a", "prop_cctv_cont_02", "prop_cctv_pole_01a", "prop_cctv_pole_02", "prop_cctv_pole_03", "prop_cctv_pole_04", "prop_cctv_unit_03", "prop_cctv_unit_04", "prop_cd_folder_pile1", "prop_cd_folder_pile2", "prop_cd_folder_pile3", "prop_cd_folder_pile4", "prop_cd_lamp", "prop_cd_paper_pile1", "prop_cd_paper_pile2", "prop_cd_paper_pile3", "prop_cementbags01", "prop_ch1_02_glass_01", "prop_ch1_02_glass_02", "prop_ch2_wdfence_01", "prop_ch2_wdfence_02", "prop_champset", "prop_champ_01a", "prop_champ_01b", "prop_champ_box_01", "prop_champ_cool", "prop_champ_flute", "prop_champ_jer_01a", "prop_champ_jer_01b", "prop_chateau_table_01", "prop_cherenkov_01", "prop_cherenkov_02", "prop_cherenkov_03", "prop_cherenkov_04", "prop_cleaning_trolly", "prop_clothes_rail_01", "prop_clubset", "prop_cocktail", "prop_cocktail_glass", "prop_coffee_mac_01", "prop_coffee_mac_02", "prop_coffin_01", "prop_conc_blocks01a", "prop_conc_blocks01b", "prop_conc_blocks01c", "prop_consign_01a", "prop_consign_01b", "prop_cons_cements01", "prop_cons_plyboard_01", "prop_container_05a","prop_container_ld_pu", "prop_contr_03b_ld", "prop_coolbox_01", "prop_cratepile_01a", "prop_cratepile_02a", "prop_cratepile_03a", "prop_cratepile_05a", "prop_cratepile_07a", "prop_crate_03a", "prop_crate_04a", "prop_crate_05a", "prop_crate_06a", "prop_crate_07a", "prop_crate_11e", "prop_crt_mon_01", "prop_crt_mon_02", "prop_cs6_04_glass", "prop_cs_kitchen_cab_l", "prop_cs_kitchen_cab_r", "prop_cs_police_torch_02", "prop_daiquiri", "prop_dealer_win_01", "prop_dealer_win_02", "prop_dealer_win_03", "prop_dest_cctv_01", "prop_dest_cctv_02", "prop_dest_cctv_03", "prop_dest_cctv_03b", "prop_doghouse_01", "prop_drinkmenu", "prop_drink_champ", "prop_drink_redwine", "prop_drink_whisky", "prop_drink_whtwine", "prop_drug_bottle", "prop_drug_erlenmeyer", "prop_dumpster_01a", "prop_dumpster_02a", "prop_dumpster_02b", "prop_dyn_pc_02", "prop_elecbox_01a", "prop_elecbox_01b", "prop_elecbox_02a", "prop_elecbox_02b", "prop_elecbox_04a", "prop_elecbox_05a", "prop_elecbox_06a", "prop_elecbox_07a", "prop_elecbox_08", "prop_elecbox_08b", "prop_elecbox_09", "prop_elecbox_11", "prop_elec_heater_01", "prop_facgate_03b_l", "prop_facgate_03b_r", "prop_facgate_08_ld", "prop_fib_3b_bench", "prop_fib_3b_cover1", "prop_fib_3b_cover2", "prop_fib_3b_cover3", "prop_fib_ashtray_01", "prop_fib_clipboard", "prop_fib_coffee", "prop_fib_counter", "prop_fib_morg_cnr01", "prop_fib_morg_plr01", "prop_fib_morg_wal01", "prop_fib_plant_01", "prop_fib_plant_02", "prop_fib_skylight_plug", "prop_fib_wallfrag01", "prop_fire_exting_1a", "prop_fire_exting_1b", "prop_fire_exting_2a", "prop_fire_exting_3a", "prop_fire_hosebox_01", "prop_fire_hydrant_1", "prop_fire_hydrant_2", "prop_fire_hydrant_4", "prop_flamingo", "prop_flattruck_01b", "prop_flattruck_01c", "prop_flattruck_01d", "prop_fncbeach_01a", "prop_fncbeach_01b", "prop_fncbeach_01c", "prop_fncconstruc_01d", "prop_fncconstruc_ld", "prop_fnccorgm_01a", "prop_fnccorgm_01b", "prop_fnccorgm_02a", "prop_fnccorgm_02b", "prop_fnccorgm_02c", "prop_fnccorgm_02d", "prop_fnccorgm_02e", "prop_fnccorgm_02pole", "prop_fnccorgm_03a", "prop_fnccorgm_03b", "prop_fnccorgm_03c", "prop_fnccorgm_04a", "prop_fnccorgm_04c", "prop_fncglass_01a", "prop_fnclink_01a", "prop_fnclink_01b", "prop_fnclink_01c", "prop_fnclink_01d", "prop_fnclink_01e", "prop_fnclink_01f", "prop_fnclink_01h", "prop_fnclink_02a", "prop_fnclink_02a_sdt", "prop_fnclink_02b", "prop_fnclink_02c", "prop_fnclink_02d", "prop_fnclink_02e", "prop_fnclink_02f", "prop_fnclink_02g", "prop_fnclink_02gate2", "prop_fnclink_02gate3", "prop_fnclink_02gate4", "prop_fnclink_02gate6", "prop_fnclink_02h", "prop_fnclink_02i", "prop_fnclink_02j", "prop_fnclink_02k", "prop_fnclink_02l", "prop_fnclink_02m", "prop_fnclink_02n", "prop_fnclink_02o", "prop_fnclink_02p", "prop_fnclink_03a", "prop_fnclink_03b", "prop_fnclink_03c", "prop_fnclink_03d", "prop_fnclink_03e", "prop_fnclink_03f", "prop_fnclink_03g", "prop_fnclink_03gate3", "prop_fnclink_03h", "prop_fnclink_03i", "prop_fnclink_04a", "prop_fnclink_04b", "prop_fnclink_04c", "prop_fnclink_04d", "prop_fnclink_04e", "prop_fnclink_04f", "prop_fnclink_04g", "prop_fnclink_04h", "prop_fnclink_04j", "prop_fnclink_04k", "prop_fnclink_04l", "prop_fnclink_04m", "prop_fnclink_05a", "prop_fnclink_05b", "prop_fnclink_05c", "prop_fnclink_05crnr1", "prop_fnclink_05d", "prop_fnclink_05pole", "prop_fnclink_06a", "prop_fnclink_06b", "prop_fnclink_06c", "prop_fnclink_06d", "prop_fnclink_07a", "prop_fnclink_07b", "prop_fnclink_07c", "prop_fnclink_07d", "prop_fnclink_08b", "prop_fnclink_08c", "prop_fnclink_08post", "prop_fnclink_09a", "prop_fnclink_09b", "prop_fnclink_09crnr1", "prop_fnclink_09d", "prop_fnclink_09e", "prop_fnclink_09frame", "prop_fnclink_10d_ld", "prop_fnclog_01c", "prop_fnclog_02a", "prop_fnclog_02b", "prop_fnclog_03a", "prop_fncply_01a", "prop_fncply_01b", "prop_fncply_01gate", "prop_fncply_01post", "prop_fncres_01a", "prop_fncres_01b", "prop_fncres_01c", "prop_fncres_03a", "prop_fncres_03b", "prop_fncres_03c", "prop_fncres_04a", "prop_fncres_04b", "prop_fncres_05a", "prop_fncres_05b", "prop_fncres_05c", "prop_fncres_06a", "prop_fncres_06b", "prop_fncres_06gatel", "prop_fncres_06gater", "prop_fncres_07a", "prop_fncres_07b", "prop_fncres_07gate", "prop_fncres_08a", "prop_fncres_08gatel", "prop_fncres_09a", "prop_fncres_09gate", "prop_fncsec_03a", "prop_fncsec_03b", "prop_fncsec_03c", "prop_fncsec_03d", "prop_fncwood_01a", "prop_fncwood_01b", "prop_fncwood_01c", "prop_fncwood_01gate", "prop_fncwood_01_ld", "prop_fncwood_02b", "prop_fncwood_03a", "prop_fncwood_04a", "prop_fncwood_06a", "prop_fncwood_06b", "prop_fncwood_06c", "prop_fncwood_07a", "prop_fncwood_07gate1", "prop_fncwood_08a", "prop_fncwood_08b", "prop_fncwood_08c", "prop_fncwood_08d", "prop_fncwood_09a", "prop_fncwood_09b", "prop_fncwood_09c", "prop_fncwood_09d", "prop_fncwood_10b", "prop_fncwood_10d", "prop_fncwood_11a", "prop_fncwood_12a", "prop_fncwood_13c", "prop_fncwood_14a", "prop_fncwood_14b", "prop_fncwood_14c", "prop_fncwood_14d", "prop_fncwood_14e", "prop_fncwood_15a", "prop_fncwood_15b", "prop_fncwood_15c", "prop_fncwood_16d", "prop_fncwood_16e", "prop_fncwood_16f", "prop_fncwood_16g", "prop_fncwood_17b", "prop_fncwood_17c", "prop_fncwood_19a", "prop_fncwood_19_end", "prop_fnc_farm_01a", "prop_fnc_farm_01b", "prop_fnc_farm_01c", "prop_fnc_farm_01d", "prop_fnc_farm_01e", "prop_fnc_farm_01f", "prop_fnc_omesh_01a", "prop_fnc_omesh_02a", "prop_fnc_omesh_03a", "prop_foodprocess_01", "prop_food_bag1", "prop_food_bag2", "prop_food_bs_bag_01", "prop_food_bs_bag_02", "prop_food_bs_bag_03", "prop_food_bs_bag_04", "prop_food_bs_burg1", "prop_food_bs_burg3", "prop_food_bs_burger2", "prop_food_bs_chips", "prop_food_bs_coffee", "prop_food_bs_cups02", "prop_food_bs_juice01", "prop_food_bs_juice02", "prop_food_bs_juice03", "prop_food_bs_tray_02", "prop_food_bs_tray_03", "prop_food_burg3", "prop_food_cb_bag_01", "prop_food_cb_bag_02", "prop_food_cb_burg02", "prop_food_cb_chips", "prop_food_cb_coffee", "prop_food_cb_cups02", "prop_food_cb_cups04", "prop_food_cb_juice01", "prop_food_cb_juice02", "prop_food_cb_tray_02", "prop_food_cb_tray_03", "prop_food_chips", "prop_food_coffee", "prop_food_cups2", "prop_food_juice01", "prop_food_juice02", "prop_food_ketchup", "prop_food_mustard", "prop_food_sugarjar", "prop_food_tray_02", "prop_food_tray_03", "prop_forsalejr1", "prop_forsale_dyn_01", "prop_forsale_dyn_02", "prop_forsale_lenny_01", "prop_forsale_lrg_01", "prop_forsale_lrg_02", "prop_forsale_lrg_03", "prop_forsale_lrg_04", "prop_forsale_lrg_05", "prop_forsale_lrg_06", "prop_forsale_lrg_07", "prop_forsale_lrg_08", "prop_forsale_lrg_09", "prop_forsale_lrg_10", "prop_forsale_sign_01", "prop_forsale_sign_02", "prop_forsale_sign_03", "prop_forsale_sign_04", "prop_forsale_sign_05", "prop_forsale_sign_06", "prop_forsale_sign_07", "prop_forsale_sign_fs", "prop_forsale_sign_jb", "prop_forsale_tri_01", "prop_fragtest_cnst_01", "prop_fragtest_cnst_02", "prop_fragtest_cnst_03", "prop_fragtest_cnst_04", "prop_fragtest_cnst_05", "prop_fragtest_cnst_06", "prop_fragtest_cnst_06b", "prop_fragtest_cnst_07", "prop_fragtest_cnst_08", "prop_fragtest_cnst_08b", "prop_fragtest_cnst_08c", "prop_fragtest_cnst_09", "prop_fragtest_cnst_09b", "prop_fragtest_cnst_10", "prop_fragtest_cnst_11", "prop_fruitstand_01", "prop_fruitstand_b", "prop_fruit_plas_crate_01", "prop_fruit_sign_01", "prop_fruit_stand_01", "prop_fruit_stand_02", "prop_fruit_stand_03", "prop_funfair_zoltan", "prop_garden_chimes_01", "prop_gascyl_01a", "prop_gascyl_02a", "prop_gascyl_02b", "prop_gascyl_03a", "prop_gascyl_03b", "prop_gascyl_04a", "prop_gas_airunit01", "prop_gas_binunit01", "prop_gas_pump_1a", "prop_gas_pump_1b", "prop_gas_pump_1c", "prop_gas_pump_1d", "prop_gas_pump_old2", "prop_gas_pump_old3", "prop_gas_rack01", "prop_gas_smallbin01", "prop_gas_tank_01a", "prop_gas_tank_02a", "prop_gas_tank_02b", "prop_gas_tank_04a", "prop_gatecom_01", "prop_gate_farm_03", "prop_gazebo_01", "prop_gazebo_02", "prop_generator_01a", "prop_generator_03b", "prop_girder_01b", "prop_glass_panel_01", "prop_glass_panel_02", "prop_glass_panel_03", "prop_glass_panel_04", "prop_glass_panel_05", "prop_glass_panel_06", "prop_glass_panel_07", "prop_glass_stack_01", "prop_glass_stack_02", "prop_glass_stack_03", "prop_glass_stack_04", "prop_glass_stack_05", "prop_glass_stack_06", "prop_glass_stack_07", "prop_glass_stack_08", "prop_glass_stack_09", "prop_glass_stack_10", "prop_gnome1", "prop_gnome2", "prop_gnome3", "prop_goal_posts_01", "prop_gold_vault_fence_l", "prop_gold_vault_fence_r", "prop_golfflag", "prop_grapeseed_sign_01", "prop_grapeseed_sign_02", "prop_guard_tower_glass", "prop_gumball_01", "prop_gumball_02", "prop_gumball_03", "prop_haybale_03", "prop_highway_paddle", "prop_hobo_seat_01", "prop_homeles_shelter_01", "prop_homeles_shelter_02", "prop_horo_box_01", "prop_horo_box_02", "prop_hotdogstand_01", "prop_ind_light_02a", "prop_ind_light_02b", "prop_ind_light_02c", "prop_ind_light_03a", "prop_ind_light_03b", "prop_ind_light_03c", "prop_ind_light_04", "prop_ind_light_05", "prop_ind_pipe_01", "prop_inout_tray_01", "prop_inout_tray_02", "prop_int_cf_chick_01", "prop_int_cf_chick_02", "prop_int_cf_chick_03", "prop_jerrycan_01a", "prop_jetski_trailer_01", "prop_jewel_glass", "prop_jewel_glass_root", "prop_joshua_tree_01a", "prop_joshua_tree_01b", "prop_joshua_tree_01c", "prop_joshua_tree_01d", "prop_joshua_tree_01e", "prop_joshua_tree_02a", "prop_joshua_tree_02b", "prop_joshua_tree_02c", "prop_joshua_tree_02d", "prop_joshua_tree_02e", "prop_juicestand", "prop_kino_light_02", "prop_laptop_01a", "prop_ld_balastrude", "prop_ld_balcfnc_01b", "prop_ld_balcfnc_02b", "prop_ld_balcfnc_03a", "prop_ld_balcfnc_03b", "prop_ld_bale01", "prop_ld_bankdoors_01", "prop_ld_bench01", "prop_ld_breakmast", "prop_ld_dstcover_01", "prop_ld_dstcover_02", "prop_ld_dstpillar_01", "prop_ld_dstpillar_02", "prop_ld_dstpillar_03", "prop_ld_dstpillar_04", "prop_ld_dstpillar_05", "prop_ld_dstpillar_06", "prop_ld_dstpillar_07", "prop_ld_dstpillar_08", "prop_ld_dstplanter_01", "prop_ld_dstplanter_02", "prop_ld_dstsign_01", "prop_ld_farm_chair01", "prop_ld_farm_cnr01", "prop_ld_farm_couch01", "prop_ld_farm_couch02", "prop_ld_farm_rail01", "prop_ld_farm_table01", "prop_ld_farm_table02", "prop_ld_fib_pillar01", "prop_ld_filmset", "prop_ld_fragwall_01b", "prop_ld_gold_chest", "prop_ld_lab_corner01", "prop_ld_lab_dorway01", "prop_ld_planter1a", "prop_ld_planter1b", "prop_ld_planter1c", "prop_ld_planter2a", "prop_ld_planter2b", "prop_ld_planter2c", "prop_ld_planter3a", "prop_ld_planter3b", "prop_ld_planter3c", "prop_letterbox_01", "prop_letterbox_02", "prop_letterbox_03", "prop_life_ring_01", "prop_lime_jar", "prop_logpile_01", "prop_logpile_02", "prop_logpile_03", "prop_logpile_04", "prop_log_break_01", "prop_lrggate_01b", "prop_lrggate_02", "prop_maxheight_01", "prop_mb_cargo_03a", "prop_mb_ordnance_02", "prop_mb_ordnance_03", "prop_mc_conc_barrier_01", "prop_medstation_01", "prop_meth_setup_01", "prop_micro_04", "prop_mineshaft_door", "prop_mojito", "prop_monitor_01a", "prop_monitor_01b", "prop_monitor_04a", "prop_monitor_li", "prop_monitor_w_large", "prop_mov_sechutwin", "prop_mov_sechutwin_02", "prop_mp_conc_barrier_01", "prop_mug_01", "prop_mug_02", "prop_mug_03", "prop_mug_04", "prop_mug_06", "prop_news_disp_01a", "prop_news_disp_02a", "prop_news_disp_02b", "prop_news_disp_02c", "prop_news_disp_02d", "prop_news_disp_02e", "prop_news_disp_03a", "prop_news_disp_03c", "prop_news_disp_05a", "prop_news_disp_06a", "prop_offroad_bale02", "prop_offroad_bale03", "prop_offroad_barrel02", "prop_offroad_tyres01", "prop_offroad_tyres01_tu", "prop_offroad_tyres02", "prop_oilcan_01a", "prop_oilcan_02a", "prop_oiltub_04", "prop_oldlight_01a", "prop_oldlight_01b", "prop_oldlight_01c", "prop_old_farm_03", "prop_optic_jd", "prop_optic_rum", "prop_optic_vodka", "prop_paints_bench01", "prop_paints_pallete01", "prop_pallettruck_02", "prop_pallet_01a", "prop_pallet_02a", "prop_pallet_03a", "prop_pallet_03b", "prop_pallet_pile_01", "prop_pallet_pile_02", "prop_pallet_pile_03", "prop_pallet_pile_04", "prop_parasol_01", "prop_parasol_01_b", "prop_parasol_01_c", "prop_parasol_01_down", "prop_parasol_02", "prop_parasol_02_b", "prop_parasol_02_c", "prop_parasol_03", "prop_parasol_03_b", "prop_parasol_03_c", "prop_parasol_04", "prop_parasol_04b", "prop_parasol_04c", "prop_parasol_04d", "prop_parasol_04e", "prop_parasol_05", "prop_parasol_bh_48", "prop_parkingpay", "prop_parking_hut_2", "prop_parking_hut_2b", "prop_parknmeter_01", "prop_parknmeter_02", "prop_ped_gib_01", "prop_phonebox_01a", "prop_phonebox_01b", "prop_phonebox_01c", "prop_phonebox_02", "prop_phonebox_03", "prop_phonebox_04", "prop_picnictable_01", "prop_pighouse1", "prop_pighouse2", "prop_pinacolada", "prop_pineapple", "prop_pint_glass_01", "prop_pint_glass_02", "prop_pint_glass_tall", "prop_pipes_02a", "prop_pipes_02b", "prop_pipes_03a", "prop_pipes_ld_01", "prop_pipe_stack_01", "prop_pitcher_01", "prop_pitcher_02", "prop_pizza_box_03", "prop_plant_int_01a", "prop_plant_int_01b", "prop_plant_int_03a", "prop_plant_int_03b", "prop_plant_int_03c", "prop_plant_int_04a", "prop_plant_int_04b", "prop_plant_int_04c", "prop_plant_palm_01a", "prop_plant_palm_01b", "prop_plant_palm_01c", "prop_plate_01", "prop_plate_02", "prop_plate_03", "prop_plonk_red", "prop_plonk_rose", "prop_plonk_white", "prop_plough", "prop_portaloo_01a", "prop_postbox_01a", "prop_postbox_ss_01a", "prop_pot_plant_01a", "prop_pot_plant_01b", "prop_pot_plant_01c", "prop_pot_plant_01d", "prop_pot_plant_01e", "prop_pot_plant_03b", "prop_pot_plant_03b_cr2", "prop_pot_plant_03c", "prop_pot_plant_04b", "prop_pot_plant_04c", "prop_pot_plant_05a", "prop_pot_plant_05b", "prop_pot_plant_05c", "prop_pot_plant_05d", "prop_pot_plant_6a", "prop_pot_plant_6b","prop_prlg_snowpile", "prop_prologue_pillar_01", "prop_railway_barrier_01", "prop_railway_barrier_02", "prop_rail_points04", "prop_rail_sign01", "prop_rail_sign02", "prop_rail_sign03", "prop_rail_sign04", "prop_rail_sign05", "prop_rail_sign06", "prop_rail_signals01", "prop_rail_signals03", "prop_rail_signals04", "prop_rail_wheel01", "prop_rcyl_win_01", "prop_rcyl_win_02", "prop_rcyl_win_03", "prop_rebar_pile02", "prop_recyclebin_01a", "prop_recycle_light", "prop_roadpole_01a", "prop_roadpole_01b", "prop_road_memorial_01", "prop_road_memorial_02", "prop_rock_4_a", "prop_rock_4_b", "prop_rock_4_big", "prop_rock_4_big2", "prop_rock_4_cl_1", "prop_rock_4_cl_2", "prop_rock_4_c_2", "prop_rock_4_e", "prop_rock_5_a", "prop_rock_5_b", "prop_rock_5_c", "prop_rock_5_d", "prop_rock_5_e", "prop_rock_5_smash1", "prop_rock_5_smash2", "prop_rock_5_smash3", "prop_roofvent_06a", "prop_roofvent_14a", "prop_rub_binbag_01", "prop_rub_binbag_01b", "prop_rub_binbag_03", "prop_rub_binbag_03b", "prop_rub_binbag_04", "prop_rub_binbag_05", "prop_rub_binbag_06", "prop_rub_binbag_08", "prop_rub_boxpile_01", "prop_rub_boxpile_02", "prop_rub_boxpile_03", "prop_rub_boxpile_04", "prop_rub_boxpile_04b", "prop_rub_boxpile_05", "prop_rub_boxpile_06", "prop_rub_boxpile_07", "prop_rub_boxpile_08", "prop_rub_boxpile_09", "prop_rub_boxpile_10", "prop_rub_cage01b", "prop_rub_cage01c", "prop_rub_cage01d", "prop_rub_cage01e", "prop_rub_cardpile_01", "prop_rub_cardpile_02", "prop_rub_cardpile_03", "prop_rub_cardpile_04", "prop_rub_cardpile_05", "prop_rub_cardpile_06", "prop_rub_cardpile_07", "prop_rub_carpart_05", "prop_rub_carwreck_10", "prop_rub_carwreck_11", "prop_rub_carwreck_12", "prop_rub_carwreck_13", "prop_rub_carwreck_14", "prop_rub_carwreck_15", "prop_rub_carwreck_16", "prop_rub_carwreck_17", "prop_rub_carwreck_2", "prop_rub_carwreck_3", "prop_rub_carwreck_5", "prop_rub_carwreck_7", "prop_rub_carwreck_8", "prop_rub_carwreck_9", "prop_rub_couch02", "prop_rub_couch03", "prop_rub_couch04", "prop_rub_generator", "prop_rub_pile_03", "prop_rub_pile_04", "prop_rub_table_01", "prop_rub_table_02", "prop_rum_bottle", "prop_rural_windmill", "prop_sacktruck_02b", "prop_sapling_break_01", "prop_sapling_break_02", "prop_satdish_2_b", "prop_satdish_l_02", "prop_satdish_l_02b", "prop_satdish_s_01", "prop_satdish_s_02", "prop_satdish_s_04a", "prop_satdish_s_04b", "prop_satdish_s_04c", "prop_scafold_frame1c", "prop_scrim_02", "prop_sea_rubprox_01", "prop_secdoor_01", "prop_sec_barier_01a", "prop_sec_barier_02a", "prop_sec_barier_02b", "prop_sec_barier_03a", "prop_sec_barier_03b", "prop_sec_barier_04a", "prop_sec_barier_04b", "prop_sec_barier_base_01", "prop_sec_barrier_ld_01a", "prop_sec_barrier_ld_02a", "prop_sglasses_stand_1b", "prop_shopsign_01", "prop_shot_glass", "prop_showroom_glass_1", "prop_showroom_glass_2", "prop_showroom_glass_3", "prop_showroom_glass_4", "prop_showroom_glass_5", "prop_showroom_glass_6", "prop_sign_freewayentrance", "prop_sign_gas_01", "prop_sign_gas_02", "prop_sign_gas_03", "prop_sign_gas_04", "prop_sign_interstate_01", "prop_sign_interstate_02", "prop_sign_interstate_03", "prop_sign_interstate_04", "prop_sign_interstate_05", "prop_sign_loading_1", "prop_sign_parking_1", "prop_sign_prologue_01a", "prop_sign_prologue_06e", "prop_sign_prologue_06g", "prop_sign_road_01a", "prop_sign_road_01b", "prop_sign_road_01c", "prop_sign_road_02a", "prop_sign_road_03a", "prop_sign_road_03b", "prop_sign_road_03c", "prop_sign_road_03d", "prop_sign_road_03e", "prop_sign_road_03f", "prop_sign_road_03g", "prop_sign_road_03h", "prop_sign_road_03i", "prop_sign_road_03j", "prop_sign_road_03k", "prop_sign_road_03l", "prop_sign_road_03m", "prop_sign_road_03n", "prop_sign_road_03o", "prop_sign_road_03p", "prop_sign_road_03q", "prop_sign_road_03r", "prop_sign_road_03s", "prop_sign_road_03t", "prop_sign_road_03u", "prop_sign_road_03v", "prop_sign_road_03w", "prop_sign_road_03x", "prop_sign_road_03y", "prop_sign_road_03z", "prop_sign_road_04a", "prop_sign_road_04b", "prop_sign_road_04c", "prop_sign_road_04d", "prop_sign_road_04e", "prop_sign_road_04f", "prop_sign_road_04g", "prop_sign_road_04h", "prop_sign_road_04i", "prop_sign_road_04j", "prop_sign_road_04k", "prop_sign_road_04l", "prop_sign_road_04m", "prop_sign_road_04n", "prop_sign_road_04o", "prop_sign_road_04p", "prop_sign_road_04q", "prop_sign_road_04r", "prop_sign_road_04s", "prop_sign_road_04t", "prop_sign_road_04u", "prop_sign_road_04v", "prop_sign_road_04w", "prop_sign_road_04x", "prop_sign_road_04y", "prop_sign_road_04z", "prop_sign_road_04za", "prop_sign_road_04zb", "prop_sign_road_05a", "prop_sign_road_05b", "prop_sign_road_05c", "prop_sign_road_05d", "prop_sign_road_05e", "prop_sign_road_05f", "prop_sign_road_05g", "prop_sign_road_05h", "prop_sign_road_05i", "prop_sign_road_05j", "prop_sign_road_05k", "prop_sign_road_05l", "prop_sign_road_05m", "prop_sign_road_05n", "prop_sign_road_05o", "prop_sign_road_05p", "prop_sign_road_05q", "prop_sign_road_05r", "prop_sign_road_05s", "prop_sign_road_05t", "prop_sign_road_05u", "prop_sign_road_05v", "prop_sign_road_05w", "prop_sign_road_05x", "prop_sign_road_05y", "prop_sign_road_05z", "prop_sign_road_05za", "prop_sign_road_06a", "prop_sign_road_06b", "prop_sign_road_06c", "prop_sign_road_06d", "prop_sign_road_06e", "prop_sign_road_06f", "prop_sign_road_06g", "prop_sign_road_06h", "prop_sign_road_06i", "prop_sign_road_06j", "prop_sign_road_06k", "prop_sign_road_06l", "prop_sign_road_06m", "prop_sign_road_06n", "prop_sign_road_06o", "prop_sign_road_06p", "prop_sign_road_06q", "prop_sign_road_06r", "prop_sign_road_07a", "prop_sign_road_07b", "prop_sign_road_08a", "prop_sign_road_08b", "prop_sign_road_09a", "prop_sign_road_09b", "prop_sign_road_09c", "prop_sign_road_09d", "prop_sign_road_09e", "prop_sign_road_09f", "prop_sign_road_callbox", "prop_sign_road_restriction_10", "prop_sign_route_01", "prop_sign_route_11", "prop_sign_route_13", "prop_sign_route_15", "prop_sign_sec_01", "prop_sign_sec_02", "prop_sign_sec_03", "prop_sign_sec_04", "prop_sign_sec_05", "prop_sign_sec_06", "prop_sign_taxi_1", "prop_skid_box_01", "prop_skid_box_02", "prop_skid_box_03", "prop_skid_box_04", "prop_skid_box_05", "prop_skid_box_06", "prop_skid_box_07", "prop_skid_pillar_01", "prop_skid_pillar_02", "prop_skid_tent_01", "prop_skid_tent_01b", "prop_skid_tent_03", "prop_skid_tent_cloth", "prop_skid_trolley_1", "prop_skid_trolley_2", "prop_snow_dumpster_01", "prop_snow_sign_road_01a", "prop_snow_sign_road_06e", "prop_snow_sign_road_06g", "prop_snow_streetlight_09", "prop_snow_wall_light_09a", "prop_snow_xmas_cards_01", "prop_snow_xmas_cards_02", "prop_sock_box_01", "prop_stoneshroom1", "prop_stoneshroom2", "prop_storagetank_02b", "prop_streetlight_01", "prop_streetlight_01b", "prop_streetlight_02", "prop_streetlight_03", "prop_streetlight_03b", "prop_streetlight_03c", "prop_streetlight_03d", "prop_streetlight_03e", "prop_streetlight_04", "prop_streetlight_05", "prop_streetlight_05_b", "prop_streetlight_06", "prop_streetlight_07a", "prop_streetlight_07b", "prop_streetlight_08", "prop_streetlight_09", "prop_streetlight_10", "prop_streetlight_11a", "prop_streetlight_11b", "prop_streetlight_11c", "prop_streetlight_12a", "prop_streetlight_12b", "prop_streetlight_14a", "prop_streetlight_15a", "prop_streetlight_16a", "prop_stripmenu", "prop_stripset", "prop_studio_light_01", "prop_surf_board_01", "prop_surf_board_02", "prop_surf_board_03", "prop_surf_board_04", "prop_table_01", "prop_table_01_chr_a", "prop_table_01_chr_b", "prop_table_02_chr", "prop_table_03", "prop_table_03b", "prop_table_03b_chr", "prop_table_03_chr", "prop_table_para_comb_01", "prop_table_para_comb_02", "prop_table_para_comb_03", "prop_table_para_comb_04", "prop_table_para_comb_05", "prop_tall_glass", "prop_tanktrailer_01a", "prop_target_frag_board", "prop_tennis_net_01", "prop_tequila", "prop_tequila_bottle", "prop_tequsunrise",  "prop_test_rocks02", "prop_test_rocks03", "prop_test_rocks04", "prop_test_sandcas_002", "prop_till_01", "prop_tollbooth_1", "prop_tool_bench02", "prop_tool_bench02_ld", "prop_tool_blowtorch", "prop_trafficdiv_01", "prop_trafficdiv_02", "prop_traffic_01a", "prop_traffic_01b", "prop_traffic_01d", "prop_traffic_02a", "prop_traffic_02b", "prop_traffic_03a", "prop_traffic_03b", "prop_traffic_lightset_01", "prop_traffic_rail_1a", "prop_traffic_rail_2", "prop_traffic_rail_3", "prop_trailr_backside", "prop_trailr_fridge", "prop_trailr_porch1", "prop_trials_seesaw", "prop_trials_seesaw2", "prop_tshirt_box_01", "prop_turnstyle_bars", "prop_tv_01", "prop_tv_03", "prop_tv_flat_02", "prop_tv_screeen_sign", "prop_tv_stand_01", "prop_t_coffe_table_02", "prop_valet_01", "prop_valet_02", "prop_valet_04", "prop_veg_crop_03_cab", "prop_veg_crop_03_pump", "prop_vend_fridge01", "prop_vend_snak_01", "prop_vend_soda_01", "prop_vend_soda_02", "prop_vend_water_01", "prop_venice_sign_01", "prop_venice_sign_02", "prop_venice_sign_03", "prop_venice_sign_04", "prop_venice_sign_05", "prop_venice_sign_06", "prop_venice_sign_07", "prop_venice_sign_08", "prop_venice_sign_19", "prop_vinewood_sign_01", "prop_vintage_pump", "prop_vodka_bottle", "prop_wallbrick_01", "prop_wallbrick_02", "prop_wallbrick_03", "prop_wallchunk_01", "prop_walllight_ld_01", "prop_wall_light_01a", "prop_wall_light_02a", "prop_wall_light_03a", "prop_wall_light_03b", "prop_wall_light_04a", "prop_wall_light_05a", "prop_wall_light_05c", "prop_wall_light_06a", "prop_wall_light_07a", "prop_wall_light_09a", "prop_wall_light_09b", "prop_wall_light_09c", "prop_wall_light_09d", "prop_wall_light_12a", "prop_wall_light_13a", "prop_wall_light_13_snw", "prop_wall_light_14a", "prop_wall_light_14b", "prop_wall_light_15a", "prop_wall_light_16a", "prop_wall_light_16b", "prop_wall_light_16c", "prop_wall_light_16d", "prop_wall_light_16e", "prop_wall_light_17a", "prop_wall_light_19a", "prop_wall_light_20a", "prop_watercooler", "prop_watercooler_dark", "prop_water_frame", "prop_weight_bench_02", "prop_weight_squat", "prop_whiskey_01", "prop_whiskey_bottle", "prop_whiskey_glasses", "prop_windmill1",  "prop_wine_bot_01", "prop_wine_bot_02", "prop_wine_glass", "prop_wine_red", "prop_wine_rose", "prop_wine_white", "prop_wooden_barrel", "prop_woodpile_01a", "prop_woodpile_01b", "prop_woodpile_01c", "prop_woodpile_03a", "prop_woodpile_04a", "prop_woodpile_04b", "prop_worklight_01a", "prop_worklight_02a", "prop_worklight_03a", "prop_worklight_03b", "prop_worklight_04b", "prop_worklight_04c", "prop_worklight_04d", "p_airdancer_01_s", "p_barriercrash_01_s", "p_cloth_airdancer_s", "p_fnclink_dtest", "p_gate_prison_01_s", "p_gdoortest_s", "p_ing_coffeecup_01", "p_ing_coffeecup_02", "p_oil_pjack_01_s", "p_oil_pjack_02_s", "p_oil_pjack_03_s", "p_phonebox_01b_s", "p_rub_binbag_test", "p_wine_glass_s", "p_w_grass_gls_s", "spiritsrow",  "vodkarow", "v_club_vu_ashtray", "v_club_vu_coffeecup", "v_club_vu_coffeemug1", "v_club_vu_coffeemug2", "v_club_vu_ink_1", "v_club_vu_ink_2", "v_club_vu_ink_3", "v_club_vu_ink_4", "v_club_vu_lamp", "v_club_vu_pills", "v_club_vu_roladex", "v_club_vu_statue", "v_haird_mousse", "v_hair_d_bcream", "v_hair_d_gel", "v_hair_d_shave", "v_ilev_247door", "v_ilev_247door_r", "v_ilev_cf_officedoor", "v_ilev_cor_darkdoor", "v_ilev_cor_doorglassa", "v_ilev_cor_doorglassb", "v_ilev_cor_offdoora", "v_ilev_cor_windowsmash", "v_ilev_exball_blue", "v_ilev_exball_grey", "v_ilev_fh_door03", "v_ilev_fh_door4", "v_ilev_fib_atrgl1", "v_ilev_fib_atrgl2", "v_ilev_fib_atrgl3", "v_ilev_fib_atrglswap", "v_ilev_fib_door_ld", "v_ilev_fib_frame", "v_ilev_fib_frame02", "v_ilev_fib_frame03", "v_ilev_gasdoor", "v_ilev_gasdoor_r", "v_ilev_gc_door02", "v_ilev_go_window", "v_ilev_ml_door1", "v_ilev_m_dinechair", "v_ind_cf_chckbox1", "v_ind_cf_chckbox2", "v_ind_cf_chckbox3", "v_med_bottles1", "v_med_bottles2", "v_med_bottles3", "v_med_cor_cemtrolly", "v_med_cor_offglass", "v_med_cor_offglasssm", "v_med_cor_offglasstopw", "v_med_cor_reception_glass", "v_med_cor_walllight", "v_med_cor_winftop", "v_med_cor_winfwide", "v_med_curtainsnewcloth1", "v_med_curtainsnewcloth2", "v_med_flask", "v_med_p_phrenhead", "v_med_p_vaseround", "v_med_smokealarm", "v_med_testtubes", "v_med_testuberack", "v_med_vcor_winfnarrow", "v_michael", "v_michael_garage", "v_res_binder", "v_res_desktidy", "v_res_exoticvase", "v_res_fa_book01", "v_res_fa_book02", "v_res_fa_book03", "v_res_fa_book04", "v_res_fa_bread01", "v_res_fa_bread02", "v_res_fa_bread03", "v_res_fa_candle01", "v_res_fa_candle02", "v_res_fa_candle03", "v_res_fa_candle04", "v_res_fa_cereal01", "v_res_fa_cereal02", "v_res_fa_crystal01", "v_res_fa_crystal02", "v_res_fa_crystal03", "v_res_fa_ketchup", "v_res_fa_mag_motor", "v_res_fa_mag_rumor", "v_res_fa_plant01", "v_res_fa_potcof", "v_res_fa_potnoodle", "v_res_fa_potsug", "v_res_fa_pottea", "v_res_fa_radioalrm", "v_res_fa_stones01", "v_res_fa_tincorn", "v_res_fa_tintomsoup", "v_res_fa_washlq", "v_res_foodjara", "v_res_foodjarb", "v_res_foodjarc", "v_res_j_phone", "v_res_kitchnstool", "v_res_mbathpot", "v_res_mbowl", "v_res_mcofcup", "v_res_mcofcupdirt", "v_res_mconsoletrad", "v_res_mm_audio", "v_res_monitorsquare", "v_res_mountedprojector", "v_res_mplatelrg", "v_res_mplatesml", "v_res_mpotpouri", "v_res_m_dinetble", "v_res_m_horsefig", "v_res_m_h_sofa", "v_res_m_l_chair1", "v_res_m_pot1", "v_res_m_spanishbox", "v_res_m_statue", "v_res_m_vasedead", "v_res_m_vasefresh", "v_res_picture_frame", "v_res_rosevase", "v_res_r_bublbath", "v_res_r_coffpot", "v_res_r_fighorse", "v_res_r_fighorsestnd", "v_res_r_lotion", "v_res_r_pepppot", "v_res_r_perfume", "v_res_r_sugarbowl", "v_res_sculpt_decb", "v_res_tabloidsb", "v_res_tre_banana", "v_res_tt_bowl", "v_res_tt_bowlpile01", "v_res_tt_bowlpile02", "v_res_tt_can01", "v_res_tt_can02", "v_res_tt_can03", "v_res_tt_cancrsh01", "v_res_tt_cancrsh02", "v_res_tt_cbbox", "v_res_tt_cereal01", "v_res_tt_cereal02", "v_res_tt_cigs01", "v_res_tt_doughnut01", "v_res_tt_doughnuts", "v_res_tt_litter1", "v_res_tt_litter2", "v_res_tt_litter3", "v_res_tt_milk", "v_res_tt_mug01", "v_res_tt_mug2", "v_res_tt_pharm1", "v_res_tt_pharm2", "v_res_tt_pharm3", "v_res_tt_pizzaplate", "v_res_tt_plate01", "v_res_tt_platepile", "v_res_tt_porndvd01", "v_res_tt_porndvd02", "v_res_tt_porndvd03", "v_res_tt_porndvd04", "v_res_tt_pornmag01", "v_res_tt_pornmag02", "v_res_tt_pornmag03", "v_res_tt_pornmag04", "v_res_tt_tissues", "v_res_wall", "v_res_wall_cornertop", "v_ret_247shelves01", "v_ret_247shelves02", "v_ret_247shelves03", "v_ret_247shelves04", "v_ret_247shelves05", "v_ret_247_cereal1", "v_ret_247_cigs", "v_ret_247_donuts", "v_ret_247_eggs", "v_ret_247_fruit", "v_ret_247_ketchup1", "v_ret_247_lottery", "v_ret_247_lotterysign", "v_ret_247_mustard", "v_ret_247_pharmbetta", "v_ret_247_pharmbox", "v_ret_247_pharmdeo", "v_ret_247_pharmstuff", "v_ret_247_popbot4", "v_ret_247_sweetcount", "v_ret_247_win1", "v_ret_247_win2", "v_ret_247_win3", "v_ret_fhglassairfrm", "v_ret_fhglassfrm", "v_ret_fhglassfrmsml", "v_ret_fh_ashtray", "v_ret_fh_bsbag", "v_ret_fh_bscup", "v_ret_fh_chair01", "v_ret_fh_coolbox", "v_ret_fh_dinetable", "v_ret_fh_displayc", "v_ret_fh_doorframe", "v_ret_fh_doorfrmwide", "v_ret_fh_emptybot1", "v_ret_fh_emptybot2", "v_ret_fh_kitchtable", "v_ret_fh_pizza01", "v_ret_fh_pizza02", "v_ret_fh_plate1", "v_ret_fh_plate2", "v_ret_fh_plate3", "v_ret_fh_plate4", "v_ret_fh_shelf_01", "v_ret_fh_shelf_02", "v_ret_fh_shelf_03", "v_ret_fh_shelf_04", "v_ret_gassweetcount", "v_ret_gassweets", "v_ret_gc_ammostack", "v_ret_gc_bootdisp", "v_ret_gc_mags", "v_ret_gc_mug01", "v_ret_gc_mug02", "v_ret_gc_mug03", "v_ret_gc_mugdisplay", "v_ret_gc_plant1", "v_ret_gc_trays", "v_ret_gc_tv", "v_ret_gs_glass01", "v_ret_gs_glass02", "v_ret_ml_6bottles", "v_ret_ml_beeram", "v_ret_ml_beerbar", "v_ret_ml_beerben1", "v_ret_ml_beerben2", "v_ret_ml_beerbla1", "v_ret_ml_beerbla2", "v_ret_ml_beerdus", "v_ret_ml_beerjak1", "v_ret_ml_beerjak2", "v_ret_ml_beerlog1", "v_ret_ml_beerlog2", "v_ret_ml_beerpat1", "v_ret_ml_beerpat2", "v_ret_ml_beerpis1", "v_ret_ml_beerpis2", "v_ret_ml_beerpride", "v_ret_ml_chips1", "v_ret_ml_chips2", "v_ret_ml_chips3", "v_ret_ml_chips4", "v_ret_ml_cigs", "v_ret_ml_cigs2", "v_ret_ml_cigs3", "v_ret_ml_cigs4", "v_ret_ml_cigs5", "v_ret_ml_cigs6", "v_ret_ml_liqshelfa", "v_ret_ml_liqshelfb", "v_ret_ml_liqshelfc", "v_ret_ml_liqshelfd", "v_ret_ml_liqshelfe", "v_ret_ml_meth", "v_ret_ml_methcigs", "v_ret_ml_methsweets", "v_ret_ml_papers", "v_ret_ml_partframe1", "v_ret_ml_partframe2", "v_ret_ml_partframe3", "v_ret_ml_sweet1", "v_ret_ml_sweet2", "v_ret_ml_sweet3", "v_ret_ml_sweet4", "v_ret_ml_sweet5", "v_ret_ml_sweet6", "v_ret_ml_sweet7", "v_ret_ml_sweet8", "v_ret_ml_sweet9", "v_ret_ml_sweetego", "v_ret_ml_tablea", "v_ret_ml_tableb", "v_ret_ml_tablec", "v_ret_ml_win2", "v_ret_ml_win3", "v_ret_ml_win4", "v_ret_ml_win5", "v_ret_neon_baracho", "v_ret_neon_blarneys", "v_ret_neon_logger", "v_ret_ps_toiletry_01", "v_ret_tat2stuff_01", "v_ret_tat2stuff_02", "v_ret_tat2stuff_03", "v_ret_tat2stuff_04", "v_ret_tat2stuff_05", "v_ret_tat2stuff_06", "v_ret_tat2stuff_07", "v_ret_tatstuff01", "v_ret_tatstuff02", "v_ret_tatstuff03", "v_ret_tatstuff04", "v_ret_washpow1", "v_ret_washpow2", "v_ret_wind2", "v_ret_window", "v_ret_windowair", "v_ret_windowsmall", "v_ret_windowutil", "v_serv_bs_clutter", "v_serv_bs_cond", "v_serv_bs_foamx3", "v_serv_bs_gelx3", "v_serv_bs_mug", "v_serv_ct_monitor01", "v_serv_ct_monitor02", "v_serv_ct_monitor03", "v_serv_ct_monitor04", "v_serv_ct_monitor05", "v_serv_ct_monitor06", "v_serv_ct_monitor07", "v_serv_firealarm", "v_serv_gt_glass1", "v_serv_gt_glass2", "v_serv_plas_boxg4", "winerow", "zprop_bin_01a_old", "w_ar_assaultrifle_boxmag", "w_ar_carbinerifle_boxmag", "w_ar_specialcarbine_boxmag", "w_sb_compactsmg_boxmag", "w_sb_pdw_boxmag", "w_sb_smg_boxmag", "w_sg_heavyshotgun_boxmag", "w_ar_assaultrifle_boxmag_luxe", "w_ar_carbinerifle_boxmag_luxe", "w_ar_specialcarbine_boxmag_luxe", "w_sb_smg_boxmag_luxe", "ex_officedeskcollision", "ex_prop_exec_office_door01", "ex_prop_office_louvres", "ex_prop_safedoor_office1a_l", "ex_prop_safedoor_office1a_r", "ex_prop_safedoor_office1b_l", "ex_prop_safedoor_office1b_r", "ex_prop_safedoor_office1c_l", "ex_prop_safedoor_office1c_r", "ex_prop_safedoor_office2a_l", "ex_prop_safedoor_office2a_r", "ex_prop_safedoor_office3a_l", "ex_prop_safedoor_office3a_r", "ex_prop_safedoor_office3c_l", "ex_prop_safedoor_office3c_r", "ex_p_mp_door_apart_door", "ex_p_mp_door_apart_doorbrown01", "ex_p_mp_door_apart_doorbrown_s", "ex_p_mp_door_apart_doorwhite01", "ex_p_mp_door_apart_doorwhite01_s", "ex_p_mp_door_apart_door_black", "ex_p_mp_door_apart_door_black_s", "ex_p_mp_door_apart_door_s", "ex_p_mp_door_office_door01", "ex_p_mp_door_office_door01_s", "ex_p_mp_h_showerdoor_s", "ex_cash_pile_004", "ex_cash_pile_005", "ex_cash_pile_006", "ex_cash_pile_01", "ex_cash_pile_02", "ex_cash_pile_07", "ex_cash_pile_8", "ex_cash_roll_01", "ex_cash_scatter_01", "ex_cash_scatter_02", "ex_cash_scatter_03", "ex_mapmarker_10_elburroheight_1", "ex_mapmarker_11_elysian_island_3", "ex_mapmarker_12_la_mesa_2", "ex_mapmarker_13_maze_bank_arena_1", "ex_mapmarker_14_strawberry_1", "ex_mapmarker_15_downtn_vine_1", "ex_mapmarker_16_la_mesa_3", "ex_mapmarker_17_la_mesa_4", "ex_mapmarker_18_cypress_flats_2", "ex_mapmarker_19_cypress_flats_3", "ex_mapmarker_1_elysian_island_2", "ex_mapmarker_20_vinewood_1", "ex_mapmarker_21_rancho_2", "ex_mapmarker_22_banning_1", "ex_mapmarker_2_la_puerta_1", "ex_mapmarker_3_la_mesa_1", "ex_mapmarker_4_rancho_1", "ex_mapmarker_5_west_vinewood_1", "ex_mapmarker_6_lsia_1", "ex_mapmarker_7_del_perro_1", "ex_mapmarker_8_lsia_2", "ex_mapmarker_9_elysian_island_1", "ex_mp_h_acc_artwalll_02", "ex_mp_h_acc_artwalll_03", "ex_mp_h_acc_artwallm_02", "ex_mp_h_acc_artwallm_03", "ex_mp_h_acc_artwallm_04", "ex_mp_h_acc_bottle_01", "ex_mp_h_acc_bowl_ceramic_01", "ex_mp_h_acc_box_trinket_01", "ex_mp_h_acc_box_trinket_02", "ex_mp_h_acc_candles_01", "ex_mp_h_acc_candles_02", "ex_mp_h_acc_candles_04", "ex_mp_h_acc_candles_05", "ex_mp_h_acc_candles_06", "ex_mp_h_acc_coffeemachine_01", "ex_mp_h_acc_dec_head_01", "ex_mp_h_acc_dec_plate_01", "ex_mp_h_acc_dec_plate_02", "ex_mp_h_acc_dec_sculpt_01", "ex_mp_h_acc_dec_sculpt_02", "ex_mp_h_acc_dec_sculpt_03", "ex_mp_h_acc_fruitbowl_01", "ex_mp_h_acc_fruitbowl_02", "ex_mp_h_acc_plant_palm_01", "ex_mp_h_acc_plant_tall_01", "ex_mp_h_acc_rugwoolm_04", "ex_mp_h_acc_scent_sticks_01", "ex_mp_h_acc_tray_01", "ex_mp_h_acc_vase_01", "ex_mp_h_acc_vase_02", "ex_mp_h_acc_vase_04", "ex_mp_h_acc_vase_05", "ex_mp_h_acc_vase_06", "ex_mp_h_acc_vase_flowers_01", "ex_mp_h_acc_vase_flowers_02", "ex_mp_h_acc_vase_flowers_03", "ex_mp_h_acc_vase_flowers_04", "ex_mp_h_din_chair_04", "ex_mp_h_din_chair_08", "ex_mp_h_din_chair_09", "ex_mp_h_din_chair_12", "ex_mp_h_din_stool_04", "ex_mp_h_din_table_01", "ex_mp_h_din_table_04", "ex_mp_h_din_table_05", "ex_mp_h_din_table_06", "ex_mp_h_din_table_11", "ex_mp_h_lit_lamptable_02", "ex_mp_h_lit_lightpendant_01", "ex_mp_h_off_chairstrip_01", "ex_mp_h_off_easychair_01", "ex_mp_h_off_sofa_003", "ex_mp_h_off_sofa_01", "ex_mp_h_off_sofa_02", "ex_mp_h_stn_chairarm_03", "ex_mp_h_stn_chairarm_24", "ex_mp_h_stn_chairstrip_01", "ex_mp_h_stn_chairstrip_010", "ex_mp_h_stn_chairstrip_011", "ex_mp_h_stn_chairstrip_05", "ex_mp_h_stn_chairstrip_07", "ex_mp_h_tab_coffee_05", "ex_mp_h_tab_coffee_08", "ex_mp_h_tab_sidelrg_07", "ex_mp_h_yacht_barstool_01", "ex_mp_h_yacht_coffee_table_01", "ex_mp_h_yacht_coffee_table_02", "ex_office_citymodel_01", "ex_office_swag_booze_cigs", "ex_office_swag_booze_cigs2", "ex_office_swag_booze_cigs3", "ex_office_swag_counterfeit1", "ex_office_swag_counterfeit2", "ex_office_swag_drugbag2", "ex_office_swag_drugbags", "ex_office_swag_drugstatue", "ex_office_swag_drugstatue2", "ex_office_swag_electronic", "ex_office_swag_electronic2", "ex_office_swag_electronic3", "ex_office_swag_furcoats", "ex_office_swag_furcoats2", "ex_office_swag_furcoats3", "ex_office_swag_gem01", "ex_office_swag_gem02", "ex_office_swag_gem03", "ex_office_swag_guns01", "ex_office_swag_guns02", "ex_office_swag_guns03", "ex_office_swag_guns04", "ex_office_swag_ivory", "ex_office_swag_ivory2", "ex_office_swag_ivory3", "ex_office_swag_ivory4", "ex_office_swag_jewelwatch", "ex_office_swag_jewelwatch2", "ex_office_swag_jewelwatch3", "ex_office_swag_med1", "ex_office_swag_med2", "ex_office_swag_med3", "ex_office_swag_med4", "ex_office_swag_paintings01", "ex_office_swag_paintings02", "ex_office_swag_paintings03", "ex_office_swag_pills1", "ex_office_swag_pills2", "ex_office_swag_pills3", "ex_office_swag_pills4", "ex_office_swag_silver", "ex_office_swag_silver2", "ex_office_swag_silver3", "ex_prop_adv_case", "ex_prop_adv_case_sm", "ex_prop_adv_case_sm_02", "ex_prop_adv_case_sm_03", "ex_prop_adv_case_sm_flash", "ex_prop_ashtray_luxe_02", "ex_prop_crate_ammo_bc", "ex_prop_crate_ammo_sc", "ex_prop_crate_art_02_bc", "ex_prop_crate_art_02_sc", "ex_prop_crate_art_bc", "ex_prop_crate_art_sc", "ex_prop_crate_biohazard_bc", "ex_prop_crate_biohazard_sc", "ex_prop_crate_bull_bc_02", "ex_prop_crate_bull_sc_02", "ex_prop_crate_closed_bc", "ex_prop_crate_closed_ms", "ex_prop_crate_closed_mw", "ex_prop_crate_closed_rw", "ex_prop_crate_closed_sc", "ex_prop_crate_clothing_bc", "ex_prop_crate_clothing_sc", "ex_prop_crate_elec_bc", "ex_prop_crate_elec_sc", "ex_prop_crate_expl_bc", "ex_prop_crate_expl_sc", "ex_prop_crate_freel", "ex_prop_crate_furjacket_bc", "ex_prop_crate_furjacket_sc", "ex_prop_crate_gems_bc", "ex_prop_crate_gems_sc", "ex_prop_crate_highend_pharma_bc", "ex_prop_crate_highend_pharma_sc", "ex_prop_crate_jewels_bc", "ex_prop_crate_jewels_racks_bc", "ex_prop_crate_jewels_racks_sc", "ex_prop_crate_jewels_sc", "ex_prop_crate_med_bc", "ex_prop_crate_med_sc", "ex_prop_crate_minig", "ex_prop_crate_money_bc", "ex_prop_crate_money_sc", "ex_prop_crate_narc_bc", "ex_prop_crate_narc_sc", "ex_prop_crate_oegg", "ex_prop_crate_pharma_bc", "ex_prop_crate_pharma_sc", "ex_prop_crate_shide", "ex_prop_crate_tob_bc", "ex_prop_crate_tob_sc", "ex_prop_crate_watch", "ex_prop_crate_wlife_bc", "ex_prop_crate_wlife_sc", "ex_prop_crate_xldiam", "ex_prop_door_arcad_ent_l", "ex_prop_door_arcad_ent_r", "ex_prop_door_arcad_roof_l", "ex_prop_door_arcad_roof_r", "ex_prop_door_lowbank_ent_l", "ex_prop_door_lowbank_ent_r", "ex_prop_door_lowbank_roof", "ex_prop_door_maze2_ent_l", "ex_prop_door_maze2_ent_r", "ex_prop_door_maze2_rf_l", "ex_prop_door_maze2_rf_r", "ex_prop_door_maze2_roof", "ex_prop_exec_ashtray_01", "ex_prop_exec_award_bronze", "ex_prop_exec_award_diamond", "ex_prop_exec_award_gold", "ex_prop_exec_award_plastic", "ex_prop_exec_award_silver", "ex_prop_exec_bed_01", "ex_prop_exec_cashpile", "ex_prop_exec_cigar_01", "ex_prop_exec_crashedp", "ex_prop_exec_guncase", "ex_prop_exec_lighter_01", "ex_prop_ex_console_table_01", "ex_prop_ex_laptop_01a", "ex_prop_ex_office_text", "ex_prop_ex_toolchest_01", "ex_prop_ex_tv_flat_01", "ex_prop_monitor_01_ex", "ex_prop_offchair_exec_01", "ex_prop_offchair_exec_02", "ex_prop_offchair_exec_03", "ex_prop_offchair_exec_04", "ex_prop_trailer_monitor_01", "ex_prop_tv_settop_box", "ex_prop_tv_settop_remote", "ex_p_ex_decanter_01_s", "ex_p_ex_decanter_02_s", "ex_p_ex_decanter_03_s", "ex_p_ex_tumbler_01_empty", "ex_p_ex_tumbler_01_s", "ex_p_ex_tumbler_02_empty", "ex_p_ex_tumbler_02_s", "ex_p_ex_tumbler_03_empty", "ex_p_ex_tumbler_03_s", "ex_p_ex_tumbler_04_empty", "ex_p_h_acc_artwalll_01", "ex_p_h_acc_artwalll_03", "ex_p_h_acc_artwallm_01", "ex_p_h_acc_artwallm_03", "ex_p_h_acc_artwallm_04", "stt_prop_c4_stack", "stt_prop_corner_sign_01", "stt_prop_corner_sign_02", "stt_prop_corner_sign_03", "stt_prop_corner_sign_04", "stt_prop_corner_sign_05", "stt_prop_corner_sign_06", "stt_prop_corner_sign_07", "stt_prop_corner_sign_08", "stt_prop_corner_sign_09", "stt_prop_corner_sign_10", "stt_prop_corner_sign_11", "stt_prop_corner_sign_12", "stt_prop_corner_sign_13", "stt_prop_corner_sign_14",  "stt_prop_flagpole_1b", "stt_prop_flagpole_1c", "stt_prop_flagpole_1d", "stt_prop_flagpole_1e", "stt_prop_flagpole_1f", "stt_prop_flagpole_2a", "stt_prop_flagpole_2b", "stt_prop_flagpole_2c", "stt_prop_flagpole_2d", "stt_prop_flagpole_2e", "stt_prop_flagpole_2f", "stt_prop_hoop_constraction_01a", "stt_prop_hoop_small_01", "stt_prop_hoop_tyre_01a", "stt_prop_lives_bottle", "stt_prop_race_gantry_01", "stt_prop_race_start_line_01", "stt_prop_race_start_line_01b", "stt_prop_race_start_line_02", "stt_prop_race_start_line_02b", "stt_prop_race_start_line_03", "stt_prop_race_start_line_03b", "stt_prop_race_tannoy", "stt_prop_ramp_adj_flip_m", "stt_prop_ramp_adj_flip_s", "stt_prop_ramp_adj_flip_sb", "stt_prop_ramp_adj_hloop", "stt_prop_ramp_adj_loop", "stt_prop_ramp_jump_l", "stt_prop_ramp_jump_m", "stt_prop_ramp_jump_s","stt_prop_ramp_jump_xs", "stt_prop_ramp_jump_xxl", "stt_prop_ramp_multi_loop_rb", "stt_prop_ramp_spiral_l", "stt_prop_ramp_spiral_l_l", "stt_prop_ramp_spiral_l_m", "stt_prop_ramp_spiral_l_s", "stt_prop_ramp_spiral_l_xxl",  "stt_prop_ramp_spiral_s",  "stt_prop_sign_circuit_01", "stt_prop_sign_circuit_02", "stt_prop_sign_circuit_03", "stt_prop_sign_circuit_04", "stt_prop_sign_circuit_05", "stt_prop_sign_circuit_06", "stt_prop_sign_circuit_07", "stt_prop_sign_circuit_08", "stt_prop_sign_circuit_09", "stt_prop_sign_circuit_10", "stt_prop_sign_circuit_11", "stt_prop_sign_circuit_11b", "stt_prop_sign_circuit_12", "stt_prop_sign_circuit_13", "stt_prop_sign_circuit_13b", "stt_prop_sign_circuit_14", "stt_prop_sign_circuit_14b", "stt_prop_sign_circuit_15", "stt_prop_slow_down", "stt_prop_speakerstack_01a", "stt_prop_startline_gantry", "stt_prop_stunt_bblock_huge_01", "stt_prop_stunt_bblock_huge_02", "stt_prop_stunt_bblock_huge_03", "stt_prop_stunt_bblock_huge_04", "stt_prop_stunt_bblock_huge_05", "stt_prop_stunt_bblock_hump_01", "stt_prop_stunt_bblock_hump_02", "stt_prop_stunt_bblock_lrg1", "stt_prop_stunt_bblock_lrg2", "stt_prop_stunt_bblock_lrg3", "stt_prop_stunt_bblock_mdm1", "stt_prop_stunt_bblock_mdm2", "stt_prop_stunt_bblock_mdm3", "stt_prop_stunt_bblock_qp", "stt_prop_stunt_bblock_qp2", "stt_prop_stunt_bblock_qp3", "stt_prop_stunt_bblock_sml1", "stt_prop_stunt_bblock_sml2", "stt_prop_stunt_bblock_sml3", "stt_prop_stunt_bblock_xl1", "stt_prop_stunt_bblock_xl2", "stt_prop_stunt_bblock_xl3", "stt_prop_stunt_bowling_ball", "stt_prop_stunt_bowling_pin", "stt_prop_stunt_bowlpin_stand", "stt_prop_stunt_domino", "stt_prop_stunt_jump15", "stt_prop_stunt_jump30", "stt_prop_stunt_jump45", "stt_prop_stunt_jump_l", "stt_prop_stunt_jump_lb", "stt_prop_stunt_jump_loop", "stt_prop_stunt_jump_m", "stt_prop_stunt_jump_mb", "stt_prop_stunt_jump_s", "stt_prop_stunt_jump_sb", "stt_prop_stunt_landing_zone_01", "stt_prop_stunt_ramp", "stt_prop_stunt_soccer_ball", "stt_prop_stunt_soccer_goal", "stt_prop_stunt_soccer_lball", "stt_prop_stunt_soccer_sball", "stt_prop_stunt_target", "stt_prop_stunt_track_bumps", "stt_prop_stunt_track_cutout", "stt_prop_stunt_track_dwlink", "stt_prop_stunt_track_dwlink_02", "stt_prop_stunt_track_dwsh15", "stt_prop_stunt_track_dwshort", "stt_prop_stunt_track_dwslope15", "stt_prop_stunt_track_dwslope45", "stt_prop_stunt_track_dwturn", "stt_prop_stunt_track_dwuturn", "stt_prop_stunt_track_exshort", "stt_prop_stunt_track_fork", "stt_prop_stunt_track_funlng", "stt_prop_stunt_track_funnel", "stt_prop_stunt_track_link", "stt_prop_stunt_track_otake", "stt_prop_stunt_track_sh15", "stt_prop_stunt_track_sh30", "stt_prop_stunt_track_sh45", "stt_prop_stunt_track_sh45_a", "stt_prop_stunt_track_short", "stt_prop_stunt_track_slope15", "stt_prop_stunt_track_slope30", "stt_prop_stunt_track_slope45", "stt_prop_stunt_track_start", "stt_prop_stunt_track_start_02", "stt_prop_stunt_track_straight", "stt_prop_stunt_track_st_01", "stt_prop_stunt_track_st_02", "stt_prop_stunt_track_uturn", "stt_prop_stunt_tube_crn", "stt_prop_stunt_tube_crn2", "stt_prop_stunt_tube_crn_15d", "stt_prop_stunt_tube_crn_30d", "stt_prop_stunt_tube_crn_5d", "stt_prop_stunt_tube_end", "stt_prop_stunt_tube_ent", "stt_prop_stunt_tube_fn_01", "stt_prop_stunt_tube_fn_02", "stt_prop_stunt_tube_fn_03", "stt_prop_stunt_tube_fn_04", "stt_prop_stunt_tube_fn_05", "stt_prop_stunt_tube_fork", "stt_prop_stunt_tube_gap_01", "stt_prop_stunt_tube_gap_02", "stt_prop_stunt_tube_gap_03", "stt_prop_stunt_tube_hg", "stt_prop_stunt_tube_jmp", "stt_prop_stunt_tube_jmp2", "stt_prop_stunt_tube_l", "stt_prop_stunt_tube_m", "stt_prop_stunt_tube_qg", "stt_prop_stunt_tube_s", "stt_prop_stunt_tube_speed", "stt_prop_stunt_tube_speeda", "stt_prop_stunt_tube_speedb", "stt_prop_stunt_tube_xs", "stt_prop_stunt_tube_xxs", "stt_prop_stunt_wideramp", "stt_prop_track_bend2_bar_l", "stt_prop_track_bend2_bar_l_b", "stt_prop_track_bend2_l", "stt_prop_track_bend2_l_b", "stt_prop_track_bend_15d", "stt_prop_track_bend_15d_bar", "stt_prop_track_bend_180d", "stt_prop_track_bend_180d_bar", "stt_prop_track_bend_30d", "stt_prop_track_bend_30d_bar", "stt_prop_track_bend_5d", "stt_prop_track_bend_5d_bar", "stt_prop_track_bend_bar_l", "stt_prop_track_bend_bar_l_b", "stt_prop_track_bend_bar_m", "stt_prop_track_bend_l", "stt_prop_track_bend_l_b", "stt_prop_track_bend_m", "stt_prop_track_block_01", "stt_prop_track_block_02", "stt_prop_track_block_03", "stt_prop_track_chicane_l", "stt_prop_track_chicane_l_02", "stt_prop_track_chicane_r", "stt_prop_track_chicane_r_02", "stt_prop_track_cross", "stt_prop_track_cross_bar", "stt_prop_track_fork", "stt_prop_track_fork_bar", "stt_prop_track_funnel", "stt_prop_track_funnel_ads_01a", "stt_prop_track_funnel_ads_01b", "stt_prop_track_funnel_ads_01c", "stt_prop_track_jump_01a", "stt_prop_track_jump_01b", "stt_prop_track_jump_01c", "stt_prop_track_jump_02a", "stt_prop_track_jump_02b", "stt_prop_track_jump_02c", "stt_prop_track_link", "stt_prop_track_slowdown", "stt_prop_track_slowdown_t1", "stt_prop_track_slowdown_t2", "stt_prop_track_speedup", "stt_prop_track_speedup_t1", "stt_prop_track_speedup_t2", "stt_prop_track_start", "stt_prop_track_start_02", "stt_prop_track_stop_sign", "stt_prop_track_straight_bar_l", "stt_prop_track_straight_bar_m", "stt_prop_track_straight_bar_s", "stt_prop_track_straight_l", "stt_prop_track_straight_lm", "stt_prop_track_straight_lm_bar", "stt_prop_track_straight_m", "stt_prop_track_straight_s", "stt_prop_track_tube_01", "stt_prop_track_tube_02", "stt_prop_tyre_wall_01", "stt_prop_tyre_wall_010", "stt_prop_tyre_wall_011", "stt_prop_tyre_wall_012", "stt_prop_tyre_wall_013", "stt_prop_tyre_wall_014", "stt_prop_tyre_wall_015", "stt_prop_tyre_wall_02", "stt_prop_tyre_wall_03", "stt_prop_tyre_wall_04", "stt_prop_tyre_wall_05", "stt_prop_tyre_wall_06", "stt_prop_tyre_wall_07", "stt_prop_tyre_wall_08", "stt_prop_tyre_wall_09", "stt_prop_tyre_wall_0l010", "stt_prop_tyre_wall_0l012", "stt_prop_tyre_wall_0l013", "stt_prop_tyre_wall_0l014", "stt_prop_tyre_wall_0l015", "stt_prop_tyre_wall_0l018", "stt_prop_tyre_wall_0l019", "stt_prop_tyre_wall_0l020", "stt_prop_tyre_wall_0l04", "stt_prop_tyre_wall_0l05", "stt_prop_tyre_wall_0l06", "stt_prop_tyre_wall_0l07", "stt_prop_tyre_wall_0l08", "stt_prop_tyre_wall_0l1", "stt_prop_tyre_wall_0l16", "stt_prop_tyre_wall_0l17", "stt_prop_tyre_wall_0l2", "stt_prop_tyre_wall_0l3", "stt_prop_tyre_wall_0r010", "stt_prop_tyre_wall_0r011", "stt_prop_tyre_wall_0r012", "stt_prop_tyre_wall_0r013", "stt_prop_tyre_wall_0r014", "stt_prop_tyre_wall_0r015", "stt_prop_tyre_wall_0r016", "stt_prop_tyre_wall_0r017", "stt_prop_tyre_wall_0r018", "stt_prop_tyre_wall_0r019", "stt_prop_tyre_wall_0r04", "stt_prop_tyre_wall_0r05", "stt_prop_tyre_wall_0r06", "stt_prop_tyre_wall_0r07", "stt_prop_tyre_wall_0r08", "stt_prop_tyre_wall_0r09", "stt_prop_tyre_wall_0r1", "stt_prop_tyre_wall_0r2", "stt_prop_tyre_wall_0r3", "stt_prop_wallride_01", "stt_prop_wallride_01b", "stt_prop_wallride_02", "stt_prop_wallride_02b", "stt_prop_wallride_04", "stt_prop_wallride_05", "stt_prop_wallride_05b", "stt_prop_wallride_45l", "stt_prop_wallride_45la", "stt_prop_wallride_45r", "stt_prop_wallride_45ra", "stt_prop_wallride_90l", "stt_prop_wallride_90lb", "stt_prop_wallride_90r", "stt_prop_wallride_90rb", "bkr_cash_scatter_02", "bkr_prop_biker_barstool_01", "bkr_prop_biker_barstool_02", "bkr_prop_biker_barstool_03", "bkr_prop_biker_barstool_04", "bkr_prop_biker_boardchair01", "bkr_prop_biker_campbed_01", "bkr_prop_biker_ceiling_fan_base", "bkr_prop_biker_chairstrip_01", "bkr_prop_biker_chair_01", "bkr_prop_biker_door_entry", "bkr_prop_biker_garage_locker_01", "bkr_prop_biker_pendant_light", "bkr_prop_biker_safebody_01a", "bkr_prop_biker_safedoor_01a", "bkr_prop_biker_scriptrt_logo", "bkr_prop_biker_scriptrt_table", "bkr_prop_biker_scriptrt_wall", "bkr_prop_bkr_cashpile_01", "bkr_prop_bkr_cashpile_02", "bkr_prop_bkr_cashpile_03", "bkr_prop_bkr_cashpile_04", "bkr_prop_bkr_cashpile_05", "bkr_prop_bkr_cashpile_06", "bkr_prop_bkr_cashpile_07", "bkr_prop_bkr_cash_roll_01", "bkr_prop_bkr_cash_scatter_01", "bkr_prop_bkr_cash_scatter_03", "bkr_prop_bkr_cashpile_01", "bkr_prop_bkr_cashpile_02", "bkr_prop_bkr_cashpile_03", "bkr_prop_bkr_cashpile_04", "bkr_prop_bkr_cashpile_05", "bkr_prop_bkr_cashpile_06", "bkr_prop_bkr_cashpile_07", "bkr_prop_biker_tool_broom", "bkr_prop_meth_acetone", "bkr_prop_meth_ammonia", "bkr_prop_meth_bigbag_01a", "bkr_prop_meth_bigbag_02a", "bkr_prop_meth_bigbag_03a", "bkr_prop_meth_bigbag_04a", "bkr_prop_meth_chiller_01a", "bkr_prop_meth_hcacid", "bkr_prop_meth_lithium", "bkr_prop_meth_openbag_01a", "bkr_prop_meth_openbag_02", "bkr_prop_meth_pallet_01a", "bkr_prop_meth_phosphorus", "bkr_prop_meth_pseudoephedrine", "bkr_prop_meth_sacid", "bkr_prop_meth_scoop_01a", "bkr_prop_meth_smallbag_01a", "bkr_prop_meth_smashedtray_01", "bkr_prop_meth_smashedtray_02", "bkr_prop_meth_sodium", "bkr_prop_meth_table01a", "bkr_prop_meth_toulene", "bkr_prop_meth_tray_01a", "bkr_prop_meth_tray_01b", "bkr_prop_meth_tray_02a", "bkr_prop_slow_down", "bkr_prop_mast_01a", "bkr_prop_crate_set_01a", "bkr_prop_rt_clubhouse_wall", "bkr_prop_rt_clubhouse_table", "bkr_prop_rt_clubhouse_plan_01a", "bkr_prop_jailer_keys_01a", "bkr_prop_duffel_bag_01a", "bkr_prop_clubhouse_laptop_01b", "bkr_prop_clubhouse_laptop_01a", "bkr_prop_clubhouse_blackboard_01a", "bkr_prop_clubhouse_arm_wrestle_02a", "bkr_prop_clubhouse_arm_wrestle_01a", "bkr_prop_biker_jump_01a", "bkr_prop_biker_jump_01b", "bkr_prop_biker_jump_01c", "bkr_prop_biker_jump_02a", "bkr_prop_biker_jump_02b", "bkr_prop_biker_jump_02c", "bkr_prop_biker_jump_l", "bkr_prop_biker_jump_lb", "bkr_prop_biker_jump_m", "bkr_prop_biker_jump_mb", "bkr_prop_biker_jump_s", "bkr_prop_biker_jump_sb", "bkr_prop_biker_bblock_cor", "bkr_prop_biker_bblock_cor_02", "bkr_prop_biker_bblock_cor_03", "bkr_prop_biker_bblock_huge_01", "bkr_prop_biker_bblock_huge_03", "bkr_prop_biker_bblock_huge_04", "bkr_prop_biker_bblock_huge_05", "bkr_prop_biker_bblock_hump_01", "bkr_prop_biker_bblock_hump_02", "bkr_prop_biker_bblock_lrg1", "bkr_prop_biker_bblock_lrg2", "bkr_prop_biker_bblock_lrg3", "bkr_prop_biker_bblock_mdm1", "bkr_prop_biker_bblock_mdm2", "bkr_prop_biker_bblock_mdm3", "bkr_prop_biker_bblock_qp", "bkr_prop_biker_bblock_qp2", "bkr_prop_biker_bblock_qp3", "bkr_prop_biker_bblock_sml1", "bkr_prop_biker_bblock_sml2", "bkr_prop_biker_bblock_sml3", "bkr_prop_biker_bblock_xl1", "bkr_prop_biker_bblock_xl2", "bkr_prop_biker_bblock_xl3", "bkr_prop_biker_bowlpin_stand", "bkr_prop_biker_landing_zone_01", "bkr_prop_biker_target", "bkr_prop_biker_target_small", "bkr_prop_fertiliser_pallet_01a", "bkr_prop_fertiliser_pallet_01b", "bkr_prop_fertiliser_pallet_01c", "bkr_prop_fertiliser_pallet_01d", "bkr_prop_fertiliser_pallet_02a", "bkr_prop_grow_lamp_02a", "bkr_prop_grow_lamp_02b", "bkr_prop_weed_01_small_01a", "bkr_prop_weed_01_small_01b", "bkr_prop_weed_01_small_01c", "bkr_prop_weed_bag_01a", "bkr_prop_weed_bag_pile_01a", "bkr_prop_weed_bigbag_01a", "bkr_prop_weed_bigbag_02a", "bkr_prop_weed_bigbag_03a", "bkr_prop_weed_bigbag_open_01a", "bkr_prop_weed_bucket_01a", "bkr_prop_weed_bucket_01b", "bkr_prop_weed_bucket_01c", "bkr_prop_weed_bucket_01d", "bkr_prop_weed_bucket_open_01a", "bkr_prop_weed_bud_01a", "bkr_prop_weed_bud_01b", "bkr_prop_weed_bud_02a", "bkr_prop_weed_bud_02b", "bkr_prop_weed_bud_pruned_01a", "bkr_prop_weed_chair_01a", "bkr_prop_weed_drying_01a", "bkr_prop_weed_drying_02a", "bkr_prop_weed_dry_01a", "bkr_prop_weed_dry_02a", "bkr_prop_weed_dry_02b", "bkr_prop_weed_fan_ceiling_01a", "bkr_prop_weed_fan_floor_01a", "bkr_prop_weed_leaf_01a", "bkr_prop_weed_leaf_dry_01a", "bkr_prop_weed_lrg_01a", "bkr_prop_weed_lrg_01b", "bkr_prop_weed_med_01a", "bkr_prop_weed_med_01b", "bkr_prop_weed_pallet", "bkr_prop_weed_plantpot_stack_01a", "bkr_prop_weed_plantpot_stack_01b", "bkr_prop_weed_plantpot_stack_01c", "bkr_prop_weed_scales_01a", "bkr_prop_weed_scales_01b", "bkr_prop_weed_smallbag_01a", "bkr_prop_weed_spray_01a", "bkr_prop_weed_table_01a", "bkr_prop_weed_table_01b", "bkr_prop_rt_memorial_vice_pres", "bkr_prop_rt_memorial_president", "bkr_prop_rt_memorial_active_03", "bkr_prop_rt_memorial_active_02", "bkr_prop_rt_memorial_active_01", "bkr_prop_memorial_wall_01a", "bkr_prop_grenades_02", "bkr_prop_clubhouse_sofa_01a", "bkr_prop_clubhouse_offchair_01a", "bkr_prop_clubhouse_chair_01", "bkr_prop_clubhouse_chair_03", "bkr_prop_clubhouse_armchair_01a", "bkr_prop_biker_chairstrip_02", "bkr_prop_clubhouse_jukebox_02a", "bkr_prop_clubhouse_jukebox_01b", "bkr_prop_clubhouse_jukebox_01a", "bkr_prop_tin_cash_01a", "bkr_prop_scrunched_moneypage", "bkr_prop_prtmachine_paperream", "bkr_prop_prtmachine_moneyream", "bkr_prop_prtmachine_moneypage_anim", "bkr_prop_prtmachine_moneypage", "bkr_prop_prtmachine_dryer_spin", "bkr_prop_prtmachine_dryer_op", "bkr_prop_prtmachine_dryer", "bkr_prop_printmachine_cutter", "bkr_prop_printmachine_6rollerp_st", "bkr_prop_printmachine_6rollerpress", "bkr_prop_printmachine_6puller", "bkr_prop_printmachine_4rollerp_st", "bkr_prop_printmachine_4rollerpress", "bkr_prop_printmachine_4puller", "bkr_prop_cutter_singlestack_01a", "bkr_prop_cutter_moneystrip", "bkr_prop_cutter_moneystack_01a", "bkr_prop_cutter_moneypage", "bkr_prop_cashtrolley_01a", "bkr_prop_cashmove", "bkr_prop_money_wrapped_01", "bkr_prop_money_unsorted_01", "bkr_prop_money_sorted_01", "bkr_prop_money_pokerbucket", "bkr_prop_money_counter", "bkr_prop_moneypack_03a", "bkr_prop_moneypack_02a", "bkr_prop_moneypack_01a", "bkr_prop_gunlocker_ammo_01a", "bkr_prop_gunlocker_01a", "bkr_prop_biker_gcase_s", "bkr_prop_biker_case_shut", "bkr_prop_fakeid_binbag_01", "bkr_prop_fakeid_boxdriverl_01a", "bkr_prop_fakeid_boxpassport_01a", "bkr_prop_fakeid_bundledriverl", "bkr_prop_fakeid_bundlepassports", "bkr_prop_fakeid_cd_01a", "bkr_prop_fakeid_clipboard_01a", "bkr_prop_fakeid_deskfan_01a", "bkr_prop_fakeid_desklamp_01a", "bkr_prop_fakeid_embosser", "bkr_prop_fakeid_foiltipper", "bkr_prop_fakeid_laminator", "bkr_prop_fakeid_magnifyingglass", "bkr_prop_fakeid_openpassport", "bkr_prop_fakeid_papercutter", "bkr_prop_fakeid_penclipboard", "bkr_prop_fakeid_pen_01a", "bkr_prop_fakeid_pen_02a", "bkr_prop_fakeid_ruler_01a", "bkr_prop_fakeid_ruler_02a", "bkr_prop_fakeid_scalpel_01a", "bkr_prop_fakeid_scalpel_02a", "bkr_prop_fakeid_scalpel_03a", "bkr_prop_fakeid_singledriverl", "bkr_prop_fakeid_singlepassport", "bkr_prop_fakeid_table", "bkr_prop_fakeid_tablet_01a", "bkr_prop_biker_tube_crn", "bkr_prop_biker_tube_crn2", "bkr_prop_biker_tube_cross", "bkr_prop_biker_tube_gap_01", "bkr_prop_biker_tube_gap_02", "bkr_prop_biker_tube_gap_03", "bkr_prop_biker_tube_l", "bkr_prop_biker_tube_m", "bkr_prop_biker_tube_s", "bkr_prop_biker_tube_xs", "bkr_prop_biker_tube_xxs", "bkr_prop_coke_bakingsoda", "bkr_prop_coke_bakingsoda_o", "bkr_prop_coke_block_01a", "bkr_prop_coke_bottle_01a", "bkr_prop_coke_bottle_02a", "bkr_prop_coke_boxeddoll", "bkr_prop_coke_box_01a", "bkr_prop_coke_cracktray_01", "bkr_prop_coke_cutblock_01", "bkr_prop_coke_cut_01", "bkr_prop_coke_cut_02", "bkr_prop_coke_dehydrator_01", "bkr_prop_coke_doll", "bkr_prop_coke_dollbox", "bkr_prop_coke_dollboxfolded", "bkr_prop_coke_dollcast", "bkr_prop_coke_dollmould", "bkr_prop_coke_doll_bigbox", "bkr_prop_coke_fullmetalbowl_02", "bkr_prop_coke_fullscoop_01a", "bkr_prop_coke_fullsieve_01a", "bkr_prop_coke_heatbasket_01", "bkr_prop_coke_heat_01", "bkr_prop_coke_metalbowl_01", "bkr_prop_coke_metalbowl_02", "bkr_prop_coke_metalbowl_03", "bkr_prop_coke_mixer_01", "bkr_prop_coke_mixtube_01", "bkr_prop_coke_mixtube_02", "bkr_prop_coke_mixtube_03", "bkr_prop_coke_mold_01a", "bkr_prop_coke_mold_02a", "bkr_prop_coke_mortalpestle", "bkr_prop_coke_painkiller_01a", "bkr_prop_coke_pallet_01a", "bkr_prop_coke_plasticbowl_01", "bkr_prop_coke_powderbottle_01", "bkr_prop_coke_powderbottle_02", "bkr_prop_coke_powderedmilk", "bkr_prop_coke_powderedmilk_o", "bkr_prop_coke_powder_01", "bkr_prop_coke_powder_02", "bkr_prop_coke_press_01a", "bkr_prop_coke_press_01b", "bkr_prop_coke_scale_01", "bkr_prop_coke_scale_02", "bkr_prop_coke_scale_03", "bkr_prop_coke_spatula_01", "bkr_prop_coke_spatula_02", "bkr_prop_coke_spatula_03", "bkr_prop_coke_spoon_01", "bkr_prop_coke_striplamp_long_01a", "bkr_prop_coke_striplamp_short_01a", "bkr_prop_coke_table01a", "bkr_prop_coke_tablepowder", "bkr_prop_coke_testtubes", "bkr_prop_coke_tin_01", "bkr_prop_coke_tube_01", "bkr_prop_coke_tube_02", "bkr_prop_coke_tube_03", "bkr_prop_coke_tub_01a", "bkr_prop_crate_set_01a", "bkr_prop_cutter_moneypage", "bkr_prop_cutter_moneystack_01a", "bkr_prop_cutter_moneystrip", "bkr_prop_cutter_singlestack_01a", "bkr_prop_duffel_bag_01a", "bkr_prop_fakeid_binbag_01", "bkr_prop_fakeid_boxdriverl_01a", "bkr_prop_fakeid_boxpassport_01a", "bkr_prop_fakeid_bundledriverl", "bkr_prop_fakeid_bundlepassports", "bkr_prop_fakeid_cd_01a", "bkr_prop_fakeid_clipboard_01a", "bkr_prop_fakeid_deskfan_01a", "bkr_prop_fakeid_desklamp_01a", "bkr_prop_fakeid_embosser", "bkr_prop_fakeid_foiltipper", "bkr_prop_fakeid_laminator", "bkr_prop_fakeid_magnifyingglass", "bkr_prop_fakeid_openpassport", "bkr_prop_fakeid_papercutter", "bkr_prop_fakeid_penclipboard", "bkr_prop_fakeid_pen_01a", "bkr_prop_fakeid_pen_02a", "bkr_prop_fakeid_ruler_01a", "bkr_prop_fakeid_ruler_02a", "bkr_prop_fakeid_scalpel_01a", "bkr_prop_fakeid_scalpel_02a", "bkr_prop_fakeid_scalpel_03a", "bkr_prop_fakeid_singledriverl", "bkr_prop_fakeid_singlepassport", "bkr_prop_fakeid_table", "bkr_prop_fakeid_tablet_01a", "bkr_prop_fertiliser_pallet_01a", "bkr_prop_fertiliser_pallet_01b", "bkr_prop_fertiliser_pallet_01c", "bkr_prop_fertiliser_pallet_01d", "bkr_prop_fertiliser_pallet_02a", "bkr_prop_grenades_02", "bkr_prop_grow_lamp_02a", "bkr_prop_grow_lamp_02b", "bkr_prop_gunlocker_01a", "bkr_prop_gunlocker_ammo_01a", "bkr_prop_jailer_keys_01a", "bkr_prop_mast_01a", "bkr_prop_memorial_wall_01a", "bkr_prop_moneypack_01a", "bkr_prop_moneypack_02a", "bkr_prop_moneypack_03a", "bkr_prop_money_counter", "bkr_prop_money_pokerbucket", "bkr_prop_money_sorted_01", "bkr_prop_money_unsorted_01", "bkr_prop_money_wrapped_01", "bkr_prop_printmachine_4puller", "bkr_prop_printmachine_4rollerpress", "bkr_prop_printmachine_4rollerp_st", "bkr_prop_printmachine_6puller", "bkr_prop_printmachine_6rollerpress", "bkr_prop_printmachine_6rollerp_st", "bkr_prop_printmachine_cutter", "bkr_prop_prtmachine_dryer", "bkr_prop_prtmachine_dryer_op", "bkr_prop_prtmachine_dryer_spin", "bkr_prop_prtmachine_moneypage", "bkr_prop_prtmachine_moneypage_anim", "bkr_prop_prtmachine_moneyream", "bkr_prop_prtmachine_paperream", "bkr_prop_rt_clubhouse_plan_01a", "bkr_prop_rt_clubhouse_table", "bkr_prop_rt_clubhouse_wall", "bkr_prop_rt_memorial_active_01", "bkr_prop_rt_memorial_active_02", "bkr_prop_rt_memorial_active_03", "bkr_prop_rt_memorial_president", "bkr_prop_rt_memorial_vice_pres", "bkr_prop_scrunched_moneypage", "bkr_prop_slow_down", "bkr_prop_tin_cash_01a", "bkr_prop_weed_01_small_01a", "bkr_prop_weed_01_small_01b", "bkr_prop_weed_01_small_01c", "bkr_prop_weed_bag_01a", "bkr_prop_weed_bag_pile_01a", "bkr_prop_weed_bigbag_01a", "bkr_prop_weed_bigbag_02a", "bkr_prop_weed_bigbag_03a", "bkr_prop_weed_bigbag_open_01a", "bkr_prop_weed_bucket_01a", "bkr_prop_weed_bucket_01b", "bkr_prop_weed_bucket_01c", "bkr_prop_weed_bucket_01d", "bkr_prop_weed_bucket_open_01a", "bkr_prop_weed_bud_01a", "bkr_prop_weed_bud_01b", "bkr_prop_weed_bud_02a", "bkr_prop_weed_bud_02b", "bkr_prop_weed_bud_pruned_01a", "bkr_prop_weed_chair_01a", "bkr_prop_weed_drying_01a", "bkr_prop_weed_drying_02a", "bkr_prop_weed_dry_01a", "bkr_prop_weed_dry_02a", "bkr_prop_weed_dry_02b", "bkr_prop_weed_fan_ceiling_01a", "bkr_prop_weed_fan_floor_01a", "bkr_prop_weed_leaf_01a", "bkr_prop_weed_leaf_dry_01a", "bkr_prop_weed_lrg_01a", "bkr_prop_weed_lrg_01b", "bkr_prop_weed_med_01a", "bkr_prop_weed_med_01b", "bkr_prop_weed_pallet", "bkr_prop_weed_plantpot_stack_01a", "bkr_prop_weed_plantpot_stack_01b", "bkr_prop_weed_plantpot_stack_01c", "bkr_prop_weed_scales_01a", "bkr_prop_weed_scales_01b", "bkr_prop_weed_smallbag_01a", "bkr_prop_weed_spray_01a", "bkr_prop_weed_table_01a", "bkr_prop_weed_table_01b", "imp_mapmarker_cypressflats", "imp_mapmarker_davis", "imp_mapmarker_elburroheights", "imp_mapmarker_elysianisland", "imp_mapmarker_lamesa", "imp_mapmarker_lapuerta", "imp_mapmarker_lsia_01", "imp_mapmarker_lsia_02", "imp_mapmarker_murrietaheights", "imp_mapmarker_warehouses", "imp_prop_adv_hdsec", "imp_prop_air_compressor_01a", "imp_prop_axel_stand_01a", "imp_prop_bench_grinder_01a", "imp_prop_bench_vice_01a", "imp_prop_bomb_ball", "imp_prop_car_jack_01a", "imp_prop_covered_vehicle_01a", "imp_prop_covered_vehicle_02a", "imp_prop_covered_vehicle_03a", "imp_prop_covered_vehicle_04a", "imp_prop_covered_vehicle_05a", "imp_prop_covered_vehicle_06a", "imp_prop_covered_vehicle_07a", "imp_prop_drill_01a", "imp_prop_engine_hoist_02a", "imp_prop_flatbed_ramp", "imp_prop_grinder_01a", "imp_prop_groupbarrel_01", "imp_prop_groupbarrel_02", "imp_prop_groupbarrel_03", "imp_prop_ie_carelev01", "imp_prop_ie_carelev02", "imp_prop_impact_driver_01a", "imp_prop_impexp_bblock_huge_01", "imp_prop_impexp_bblock_lrg1", "imp_prop_impexp_bblock_mdm1", "imp_prop_impexp_bblock_qp3", "imp_prop_impexp_bblock_sml1", "imp_prop_impexp_bblock_xl1", "imp_prop_impexp_bonnet_01a", "imp_prop_impexp_bonnet_02a", "imp_prop_impexp_bonnet_03a", "imp_prop_impexp_bonnet_04a", "imp_prop_impexp_bonnet_05a", "imp_prop_impexp_bonnet_06a", "imp_prop_impexp_bonnet_07a", "imp_prop_impexp_boxcoke_01", "imp_prop_impexp_boxpile_01", "imp_prop_impexp_boxpile_02", "imp_prop_impexp_boxwood_01", "imp_prop_impexp_brake_caliper_01a", "imp_prop_impexp_campbed_01", "imp_prop_impexp_cargo_01", "imp_prop_impexp_carrack", "imp_prop_impexp_car_door_01a", "imp_prop_impexp_car_door_02a", "imp_prop_impexp_car_door_03a", "imp_prop_impexp_car_door_04a", "imp_prop_impexp_car_door_05a", "imp_prop_impexp_car_panel_01a", "imp_prop_impexp_clamp_01", "imp_prop_impexp_clamp_02", "imp_prop_impexp_coke_pile", "imp_prop_impexp_coke_trolly", "imp_prop_impexp_differential_01a", "imp_prop_impexp_diff_01", "imp_prop_impexp_door_vid", "imp_prop_impexp_engine_part_01a", "imp_prop_impexp_exhaust_01", "imp_prop_impexp_exhaust_02", "imp_prop_impexp_exhaust_03", "imp_prop_impexp_exhaust_04", "imp_prop_impexp_exhaust_05", "imp_prop_impexp_exhaust_06", "imp_prop_impexp_front_bars_01a", "imp_prop_impexp_front_bars_01b", "imp_prop_impexp_front_bars_02a", "imp_prop_impexp_front_bars_02b", "imp_prop_impexp_front_bumper_01a", "imp_prop_impexp_front_bumper_02a", "imp_prop_impexp_garagegate1", "imp_prop_impexp_garagegate2", "imp_prop_impexp_garagegate3", "imp_prop_impexp_gearbox_01", "imp_prop_impexp_half_cut_rack_01a", "imp_prop_impexp_half_cut_rack_01b", "imp_prop_impexp_hammer_01", "imp_prop_impexp_hub_rack_01a", "imp_prop_impexp_lappy_01a", "imp_prop_impexp_liftdoor_l", "imp_prop_impexp_liftdoor_r", "imp_prop_impexp_mechbench", "imp_prop_impexp_offchair_01a", "imp_prop_impexp_para_s", "imp_prop_impexp_parts_rack_01a", "imp_prop_impexp_parts_rack_02a", "imp_prop_impexp_parts_rack_03a", "imp_prop_impexp_parts_rack_04a", "imp_prop_impexp_parts_rack_05a", "imp_prop_impexp_pliers_01", "imp_prop_impexp_pliers_02", "imp_prop_impexp_pliers_03", "imp_prop_impexp_postlift", "imp_prop_impexp_postlift_up", "imp_prop_impexp_rack_01a", "imp_prop_impexp_rack_02a", "imp_prop_impexp_rack_03a", "imp_prop_impexp_rack_04a", "imp_prop_impexp_radiator_01", "imp_prop_impexp_radiator_02", "imp_prop_impexp_radiator_03", "imp_prop_impexp_radiator_04", "imp_prop_impexp_radiator_05", "imp_prop_impexp_rasp_01", "imp_prop_impexp_rasp_02", "imp_prop_impexp_rasp_03", "imp_prop_impexp_rear_bars_01a", "imp_prop_impexp_rear_bars_01b", "imp_prop_impexp_rear_bumper_01a", "imp_prop_impexp_rear_bumper_02a", "imp_prop_impexp_rear_bumper_03a", "imp_prop_impexp_sdriver_01", "imp_prop_impexp_sdriver_02", "imp_prop_impexp_sdriver_03", "imp_prop_impexp_sofabed_01a", "imp_prop_impexp_spanset_01", "imp_prop_impexp_span_01", "imp_prop_impexp_span_02", "imp_prop_impexp_span_03", "imp_prop_impexp_spoiler_01a", "imp_prop_impexp_spoiler_02a", "imp_prop_impexp_spoiler_03a", "imp_prop_impexp_spoiler_04a", "imp_prop_impexp_tablet", "imp_prop_impexp_tape_01", "imp_prop_impexp_trunk_01a", "imp_prop_impexp_trunk_02a", "imp_prop_impexp_trunk_03a", "imp_prop_impexp_tyre_01a", "imp_prop_impexp_tyre_01b", "imp_prop_impexp_tyre_01c", "imp_prop_impexp_tyre_02a", "imp_prop_impexp_tyre_02b", "imp_prop_impexp_tyre_02c", "imp_prop_impexp_tyre_03a", "imp_prop_impexp_tyre_03b", "imp_prop_impexp_tyre_03c", "imp_prop_impexp_wheel_01a", "imp_prop_impexp_wheel_02a", "imp_prop_impexp_wheel_03a", "imp_prop_impexp_wheel_04a", "imp_prop_impexp_wheel_05a", "imp_prop_impex_gate_01", "imp_prop_impex_gate_sm_13", "imp_prop_impex_gate_sm_15", "imp_prop_int_garage_mirror01", "imp_prop_sand_blaster_01a", "imp_prop_socket_set_01a", "imp_prop_socket_set_01b", "imp_prop_strut_compressor_01a", "imp_prop_tool_box_01a", "imp_prop_tool_box_01b", "imp_prop_tool_box_02a", "imp_prop_tool_box_02b", "imp_prop_tool_cabinet_01a", "imp_prop_tool_cabinet_01b", "imp_prop_tool_cabinet_01c", "imp_prop_tool_chest_01a", "imp_prop_tool_draw_01a", "imp_prop_tool_draw_01b", "imp_prop_tool_draw_01c", "imp_prop_tool_draw_01d", "imp_prop_tool_draw_01e", "imp_prop_torque_wrench_01a", "imp_prop_transmission_lift_01a", "imp_prop_welder_01a", "imp_prop_wheel_balancer_01a", "sr_mp_spec_races_ammu_sign", "sr_mp_spec_races_blimp_sign", "sr_mp_spec_races_ron_sign", "sr_mp_spec_races_take_flight_sign", "sr_mp_spec_races_xero_sign", "sr_prop_spec_target_b_01a", "sr_prop_spec_target_m_01a", "sr_prop_spec_target_s_01a", "sr_prop_spec_tube_crn_01a", "sr_prop_spec_tube_crn_02a", "sr_prop_spec_tube_crn_03a", "sr_prop_spec_tube_crn_04a", "sr_prop_spec_tube_crn_05a", "sr_prop_spec_tube_crn_30d_01a", "sr_prop_spec_tube_crn_30d_02a", "sr_prop_spec_tube_crn_30d_03a", "sr_prop_spec_tube_crn_30d_04a", "sr_prop_spec_tube_crn_30d_05a", "sr_prop_spec_tube_l_01a", "sr_prop_spec_tube_l_02a", "sr_prop_spec_tube_l_03a", "sr_prop_spec_tube_l_04a", "sr_prop_spec_tube_l_05a", "sr_prop_spec_tube_m_01a", "sr_prop_spec_tube_m_02a", "sr_prop_spec_tube_m_03a", "sr_prop_spec_tube_m_04a", "sr_prop_spec_tube_m_05a", "sr_prop_spec_tube_refill", "sr_prop_spec_tube_s_01a", "sr_prop_spec_tube_s_02a", "sr_prop_spec_tube_s_03a", "sr_prop_spec_tube_s_04a", "sr_prop_spec_tube_s_05a", "sr_prop_spec_tube_xxs_01a", "sr_prop_spec_tube_xxs_02a", "sr_prop_spec_tube_xxs_03a",  "sr_prop_special_bblock_lrg2", "sr_prop_special_bblock_lrg3", "sr_prop_special_bblock_lrg11", "sr_prop_special_bblock_mdm1", "sr_prop_special_bblock_mdm2", "sr_prop_special_bblock_mdm3", "sr_prop_special_bblock_sml1", "sr_prop_special_bblock_sml2", "sr_prop_special_bblock_sml3", "sr_prop_special_bblock_xl1", "sr_prop_special_bblock_xl2", "sr_prop_special_bblock_xl3", "sr_prop_special_bblock_xl3_fixed", "sr_prop_specraces_para_s", "sr_prop_specraces_para_s_01", "sr_prop_sr_boxpile_01", "sr_prop_sr_boxpile_02", "sr_prop_sr_boxpile_03", "sr_prop_sr_boxwood_01", "sr_prop_sr_start_line_02", "sr_prop_sr_target_1_01a", "sr_prop_sr_target_2_04a", "sr_prop_sr_target_3_03a", "sr_prop_sr_target_4_01a", "sr_prop_sr_target_5_01a", "sr_prop_sr_target_large_01a", "sr_prop_sr_target_long_01a", "sr_prop_sr_target_small_01a", "sr_prop_sr_target_small_02a", "sr_prop_sr_target_small_03a", "sr_prop_sr_target_small_04a", "sr_prop_sr_target_small_05a", "sr_prop_sr_target_small_06a", "sr_prop_sr_target_small_07a", "sr_prop_sr_target_trap_01a", "sr_prop_sr_target_trap_02a", "sr_prop_sr_track_block_01", "sr_prop_sr_track_jumpwall", "sr_prop_sr_track_wall", "sr_prop_sr_tube_end", "sr_prop_sr_tube_wall", "sr_prop_stunt_tube_crn_5d_01a", "sr_prop_stunt_tube_crn_5d_02a", "sr_prop_stunt_tube_crn_5d_03a", "sr_prop_stunt_tube_crn_5d_04a", "sr_prop_stunt_tube_crn_5d_05a", "sr_prop_stunt_tube_crn_15d_01a", "sr_prop_stunt_tube_crn_15d_02a", "sr_prop_stunt_tube_crn_15d_03a", "sr_prop_stunt_tube_crn_15d_04a", "sr_prop_stunt_tube_crn_15d_05a", "sr_prop_stunt_tube_crn2_01a", "sr_prop_stunt_tube_crn2_02a", "sr_prop_stunt_tube_crn2_03a", "sr_prop_stunt_tube_crn2_04a", "sr_prop_stunt_tube_crn2_05a", "sr_prop_stunt_tube_xs_01a", "sr_prop_stunt_tube_xs_02a", "sr_prop_stunt_tube_xs_03a", "sr_prop_stunt_tube_xs_04a", "sr_prop_stunt_tube_xs_05a", "sr_prop_track_refill", "sr_prop_track_refill_t1", "sr_prop_track_refill_t2", "sr_prop_track_straight_l_d5", "sr_prop_track_straight_l_d15", "sr_prop_track_straight_l_d30", "sr_prop_track_straight_l_d45", "sr_prop_track_straight_l_u5", "sr_prop_track_straight_l_u15", "sr_prop_track_straight_l_u30", "sr_prop_track_straight_l_u45", "gr_prop_gr_hdsec_deactive", "gr_prop_gr_rsply_crate01a", "gr_prop_gr_rsply_crate02a", "gr_prop_gr_rsply_crate03a", "gr_prop_gr_rsply_crate04a", "gr_prop_gr_rsply_crate04b", "gr_prop_gr_single_bullet", "gr_prop_gr_torque_wrench_01a", "gr_prop_gr_wheel_bolt_01a", "gr_prop_gunlocker_ammo_01a", "gr_prop_gr_bunkerglass", "gr_prop_gr_cratespile_01a", "gr_prop_gr_ramproof_gate", "gr_prop_gr_tunnel_gate", "gr_prop_gr_gunsmithsupl_01a", "gr_prop_gr_gunsmithsupl_02a", "gr_prop_gr_gunsmithsupl_03a", "gr_prop_gr_lathe_01a", "gr_prop_gr_lathe_01b", "gr_prop_gr_lathe_01c", "gr_prop_gr_speeddrill_01a", "gr_prop_gr_speeddrill_01b", "gr_prop_gr_speeddrill_01c", "gr_prop_gr_vertmill_01a", "gr_prop_gr_vertmill_01b", "gr_prop_gr_vertmill_01c", "gr_prop_gr_cnc_01a", "gr_prop_gr_cnc_01b", "gr_prop_gr_cnc_01c", "gr_prop_gr_pmine_01a", "gr_prop_damship_01a", "gr_prop_gr_missle_long", "gr_prop_gr_missle_short", "gr_prop_gr_para_s_01", "ar_prop_ar_ammu_sign", "ar_prop_ar_arrow_thin_l", "ar_prop_ar_arrow_thin_m", "ar_prop_ar_arrow_thin_xl", "ar_prop_ar_arrow_wide_l", "ar_prop_ar_arrow_wide_m", "ar_prop_ar_arrow_wide_xl", "ar_prop_ar_bblock_huge_01", "ar_prop_ar_bblock_huge_02", "ar_prop_ar_bblock_huge_03", "ar_prop_ar_bblock_huge_04", "ar_prop_ar_bblock_huge_05", "ar_prop_ar_checkpoints_crn_5d", "ar_prop_ar_checkpoint_crn", "ar_prop_ar_checkpoint_crn02", "ar_prop_ar_checkpoint_crn_15d", "ar_prop_ar_checkpoint_crn_30d", "ar_prop_ar_checkpoint_fork", "ar_prop_ar_checkpoint_l", "ar_prop_ar_checkpoint_m", "ar_prop_ar_checkpoint_s", "ar_prop_ar_checkpoint_xs", "ar_prop_ar_checkpoint_xxs", "ar_prop_ar_cp_bag", "ar_prop_ar_cp_random_transform", "ar_prop_ar_cp_tower4x_01a", "ar_prop_ar_cp_tower8x_01a", "ar_prop_ar_cp_tower_01a", "ar_prop_ar_hoop_med_01", "ar_prop_ar_jetski_ramp_01_dev", "ar_prop_ar_jump_loop", "ar_prop_ar_neon_gate4x_01a", "ar_prop_ar_neon_gate4x_02a", "ar_prop_ar_neon_gate4x_03a", "ar_prop_ar_neon_gate4x_04a", "ar_prop_ar_neon_gate4x_05a", "ar_prop_ar_neon_gate8x_01a", "ar_prop_ar_neon_gate8x_02a", "ar_prop_ar_neon_gate8x_03a", "ar_prop_ar_neon_gate8x_04a", "ar_prop_ar_neon_gate8x_05a", "ar_prop_ar_neon_gate_01a", "ar_prop_ar_neon_gate_01b", "ar_prop_ar_neon_gate_02a", "ar_prop_ar_neon_gate_02b", "ar_prop_ar_neon_gate_03a", "ar_prop_ar_neon_gate_04a", "ar_prop_ar_neon_gate_05a", "ar_prop_ar_speed_ring", "ar_prop_ar_start_01a",  "ar_prop_ar_stunt_block_01b", "ar_prop_ar_tube_2x_crn", "ar_prop_ar_tube_2x_crn2", "ar_prop_ar_tube_2x_crn_15d", "ar_prop_ar_tube_2x_crn_30d", "ar_prop_ar_tube_2x_crn_5d", "ar_prop_ar_tube_2x_gap_02", "ar_prop_ar_tube_2x_l", "ar_prop_ar_tube_2x_m", "ar_prop_ar_tube_2x_s", "ar_prop_ar_tube_2x_speed", "ar_prop_ar_tube_2x_xs", "ar_prop_ar_tube_2x_xxs", "ar_prop_ar_tube_4x_crn", "ar_prop_ar_tube_4x_crn2", "ar_prop_ar_tube_4x_crn_15d", "ar_prop_ar_tube_4x_crn_30d", "ar_prop_ar_tube_4x_crn_5d", "ar_prop_ar_tube_4x_gap_02", "ar_prop_ar_tube_4x_l", "ar_prop_ar_tube_4x_m", "ar_prop_ar_tube_4x_s", "ar_prop_ar_tube_4x_speed", "ar_prop_ar_tube_4x_xs", "ar_prop_ar_tube_4x_xxs", "ar_prop_ar_tube_crn", "ar_prop_ar_tube_crn2", "ar_prop_ar_tube_crn_15d", "ar_prop_ar_tube_crn_30d", "ar_prop_ar_tube_crn_5d", "ar_prop_ar_tube_cross", "ar_prop_ar_tube_fork", "ar_prop_ar_tube_gap_02", "ar_prop_ar_tube_hg", "ar_prop_ar_tube_jmp", "ar_prop_ar_tube_l", "ar_prop_ar_tube_m", "ar_prop_ar_tube_qg", "ar_prop_ar_tube_s", "ar_prop_ar_tube_speed", "ar_prop_ar_tube_xs", "ar_prop_ar_tube_xxs", "ar_prop_gate_cp_90d", "ar_prop_gate_cp_90d_01a", "ar_prop_gate_cp_90d_01a_l2", "ar_prop_gate_cp_90d_01b", "ar_prop_gate_cp_90d_01b_l2", "ar_prop_gate_cp_90d_01c", "ar_prop_gate_cp_90d_01c_l2", "ar_prop_gate_cp_90d_h1", "ar_prop_gate_cp_90d_h1_l2", "ar_prop_gate_cp_90d_h2", "ar_prop_gate_cp_90d_h2_l2", "ar_prop_gate_cp_90d_l2", "ar_prop_ig_cp_h1_l2", "ar_prop_ig_cp_h2_l2", "ar_prop_ig_cp_l2", "ar_prop_ig_cp_loop_01a_l2", "ar_prop_ig_cp_loop_01b_l2", "ar_prop_ig_cp_loop_01c_l2", "ar_prop_ig_cp_loop_h1_l2", "ar_prop_ig_cp_loop_h2_l2", "ar_prop_ig_flow_cp_b", "ar_prop_ig_flow_cp_b_l2", "ar_prop_ig_flow_cp_single", "ar_prop_ig_flow_cp_single_l2", "ar_prop_ig_jackal_cp_b", "ar_prop_ig_jackal_cp_b_l2", "ar_prop_ig_jackal_cp_single", "ar_prop_ig_jackal_cp_single_l2", "ar_prop_ig_metv_cp_b", "ar_prop_ig_metv_cp_b_l2", "ar_prop_ig_metv_cp_single", "ar_prop_ig_metv_cp_single_l2", "ar_prop_ig_raine_cp_b", "ar_prop_ig_raine_cp_l2", "ar_prop_ig_raine_cp_single", "ar_prop_ig_raine_cp_single_l2", "ar_prop_ig_shark_cp_b", "ar_prop_ig_shark_cp_b_l2", "ar_prop_ig_shark_cp_single", "ar_prop_ig_shark_cp_single_l2", "ar_prop_ig_sprunk_cp_b", "ar_prop_ig_sprunk_cp_b_l2", "ar_prop_ig_sprunk_cp_single", "ar_prop_ig_sprunk_cp_single_l2", "ar_prop_inflategates_cp", "ar_prop_inflategates_cp_h1", "ar_prop_inflategates_cp_h2", "ar_prop_inflategates_cp_loop", "ar_prop_inflategates_cp_loop_01a", "ar_prop_inflategates_cp_loop_01b", "ar_prop_inflategates_cp_loop_01c", "ar_prop_inflategates_cp_loop_h1", "ar_prop_inflategates_cp_loop_h2", "ar_prop_inflategates_cp_loop_l2", "sm_prop_hanger_sm_01", "sm_prop_hanger_sm_02", "sm_prop_hanger_sm_03", "sm_prop_hanger_sm_04", "sm_prop_hanger_sm_05", "sm_prop_inttruck_doorblock2", "sm_prop_inttruck_door_static2", "sm_prop_offchair_smug_01", "sm_prop_offchair_smug_02", "sm_prop_portaglass_01", "sm_prop_portaglass_02", "sm_prop_smug_cctv_mon_01", "sm_prop_smug_cont_01a", "sm_prop_smug_cover_01a", "sm_prop_smug_cranecrab_01", "sm_prop_smug_cranecrab_02", "sm_prop_smug_crane_01", "sm_prop_smug_crane_02", "sm_prop_smug_crate_01a", "sm_prop_smug_crate_l_antiques", "sm_prop_smug_crate_l_bones", "sm_prop_smug_crate_l_fake", "sm_prop_smug_crate_l_hazard", "sm_prop_smug_crate_l_jewellery", "sm_prop_smug_crate_l_medical", "sm_prop_smug_crate_l_narc", "sm_prop_smug_crate_l_tobacco", "sm_prop_smug_crate_m_01a", "sm_prop_smug_crate_m_antiques", "sm_prop_smug_crate_m_bones", "sm_prop_smug_crate_m_fake", "sm_prop_smug_crate_m_hazard", "sm_prop_smug_crate_m_jewellery", "sm_prop_smug_crate_m_medical", "sm_prop_smug_crate_m_narc", "sm_prop_smug_crate_m_tobacco", "sm_prop_smug_crate_s_antiques", "sm_prop_smug_crate_s_bones", "sm_prop_smug_crate_s_fake", "sm_prop_smug_crate_s_hazard", "sm_prop_smug_crate_s_jewellery", "sm_prop_smug_crate_s_medical", "sm_prop_smug_crate_s_narc", "sm_prop_smug_crate_s_tobacco", "sm_prop_smug_flask", "sm_prop_smug_hangar_lamp_led_a", "sm_prop_smug_hangar_lamp_led_b", "sm_prop_smug_hangar_lamp_wall_a", "sm_prop_smug_hangar_lamp_wall_b", "sm_prop_smug_hangar_light_a", "sm_prop_smug_hangar_light_b", "sm_prop_smug_hangar_light_c", "sm_prop_smug_hangar_wardrobe_lrig", "sm_prop_smug_havok", "sm_prop_smug_heli", "sm_prop_smug_hgrdoors_01", "sm_prop_smug_hgrdoors_02", "sm_prop_smug_hgrdoors_03", "sm_prop_smug_hgrdoors_light_a", "sm_prop_smug_hgrdoors_light_b", "sm_prop_smug_hgrdoors_light_c", "sm_prop_smug_hgrground_01", "sm_prop_smug_jammer", "sm_prop_smug_mic", "sm_prop_smug_monitor_01", "sm_prop_smug_offchair_01a", "sm_prop_smug_radio_01", "sm_prop_smug_rsply_crate01a", "sm_prop_smug_rsply_crate02a", "sm_prop_smug_speaker", "sm_prop_smug_tv_flat_01", "sm_prop_smug_wall_radio_01", "sm_smugdlc_prop_test", "xm_attach_geom_lighting_hangar_a", "xm_attach_geom_lighting_hangar_b", "xm_attach_geom_lighting_hangar_c", "xm_base_cia_chair_conf", "xm_base_cia_data_desks", "xm_base_cia_desk1", "xm_base_cia_lamp_ceiling_01", "xm_base_cia_lamp_ceiling_01b", "xm_base_cia_lamp_ceiling_02a", "xm_base_cia_lamp_floor_01a", "xm_base_cia_lamp_floor_01b", "xm_base_cia_seats_long", "xm_base_cia_serverhsml_01_rp", "xm_base_cia_serverhubsml_01", "xm_base_cia_serverhub_01", "xm_base_cia_serverhub_02", "xm_base_cia_serverhub_02_proxy", "xm_base_cia_serverhub_03", "xm_base_cia_serverh_01_rp", "xm_base_cia_serverh_02_rp", "xm_base_cia_serverh_03_rp", "xm_base_cia_servermed_01", "xm_base_cia_serverport_01", "xm_base_cia_serverp_01_rp", "xm_base_cia_serversml_01", "xm_base_cia_servertall_01", "xm_base_cia_server_01", "xm_base_cia_server_02", "xm_int_lev_cmptower_case_01", "xm_int_lev_scuba_gear", "xm_int_lev_silo_doorlight_01", "xm_int_lev_silo_keypad_01", "xm_int_lev_sub_chair_01", "xm_int_lev_sub_chair_02", "xm_int_lev_sub_doorl", "xm_int_lev_sub_doorr", "xm_int_lev_sub_hatch", "xm_int_lev_xm17_base_door", "xm_int_lev_xm17_base_doorframe", "xm_int_lev_xm17_base_doorframe_02", "xm_int_lev_xm17_base_door_02", "xm_int_lev_xm17_base_lockup", "xm_int_prop_tinsel_aven_01a", "xm_int_prop_tinsel_truck_carmod", "xm_int_prop_tinsel_truck_command", "xm_int_prop_tinsel_truck_gunmod", "xm_int_prop_tinsel_truck_living", "xm_int_prop_tinsel_truck_main", "xm_lab_chairarm_02", "xm_lab_chairarm_03", "xm_lab_chairarm_11", "xm_lab_chairarm_12", "xm_lab_chairarm_24", "xm_lab_chairarm_25", "xm_lab_chairarm_26", "xm_lab_chairstool_12", "xm_lab_easychair_01", "xm_lab_sofa_01", "xm_lab_sofa_02", "xm_mp_h_stn_chairarm_13", "xm_prop_agt_cia_door_el_02_l", "xm_prop_agt_cia_door_el_02_r", "xm_prop_agt_cia_door_el_l", "xm_prop_agt_cia_door_el_r", "xm_prop_agt_door_01", "xm_prop_auto_salvage_elegy", "xm_prop_auto_salvage_infernus2", "xm_prop_auto_salvage_stromberg", "xm_prop_base_blast_door_01", "xm_prop_base_blast_door_01a", "xm_prop_base_blast_door_02a", "xm_prop_base_blast_door_02_l", "xm_prop_base_blast_door_02_r", "xm_prop_base_cabinet_door_01", "xm_prop_base_computer_01", "xm_prop_base_computer_02", "xm_prop_base_computer_03", "xm_prop_base_computer_04", "xm_prop_base_computer_06", "xm_prop_base_computer_08", "xm_prop_base_crew_emblem", "xm_prop_base_doorlamp_lock", "xm_prop_base_doorlamp_unlock", "xm_prop_base_door_02", "xm_prop_base_door_04", "xm_prop_base_fence_01", "xm_prop_base_fence_02", "xm_prop_base_hanger_glass", "xm_prop_base_hanger_lift", "xm_prop_base_heavy_door_01", "xm_prop_base_jet_01", "xm_prop_base_jet_01_static", "xm_prop_base_jet_02", "xm_prop_base_jet_02_static", "xm_prop_base_rail_cart_01a", "xm_prop_base_rail_cart_01b", "xm_prop_base_rail_cart_01c", "xm_prop_base_rail_cart_01d", "xm_prop_base_silo_lamp_01a", "xm_prop_base_silo_lamp_01b", "xm_prop_base_silo_lamp_01c", "xm_prop_base_silo_platform_01a", "xm_prop_base_silo_platform_01b", "xm_prop_base_silo_platform_01c", "xm_prop_base_silo_platform_01d", "xm_prop_base_slide_door", "xm_prop_base_staff_desk_01", "xm_prop_base_staff_desk_02", "xm_prop_base_tower_lampa", "xm_prop_base_tripod_lampa", "xm_prop_base_tripod_lampb", "xm_prop_base_tripod_lampc", "xm_prop_base_tunnel_hang_lamp", "xm_prop_base_tunnel_hang_lamp2", "xm_prop_base_wall_lampa", "xm_prop_base_wall_lampb", "xm_prop_base_work_station_01", "xm_prop_base_work_station_03", "xm_prop_body_bag", "xm_prop_cannon_room_door", "xm_prop_cannon_room_door_02", "xm_prop_control_panel_tunnel", "xm_prop_crates_pistols_01a", "xm_prop_crates_rifles_01a", "xm_prop_crates_rifles_02a", "xm_prop_crates_rifles_03a", "xm_prop_crates_rifles_04a", "xm_prop_crates_sam_01a", "xm_prop_crates_weapon_mix_01a", "xm_prop_facility_door_01", "xm_prop_facility_door_02", "xm_prop_facility_glass_01b", "xm_prop_facility_glass_01c", "xm_prop_facility_glass_01d", "xm_prop_facility_glass_01e", "xm_prop_facility_glass_01f", "xm_prop_facility_glass_01g", "xm_prop_facility_glass_01h", "xm_prop_facility_glass_01i", "xm_prop_facility_glass_01j", "xm_prop_facility_glass_01l", "xm_prop_facility_glass_01n", "xm_prop_facility_glass_01o", "xm_prop_gr_console_01", "xm_prop_iaa_base_door_01", "xm_prop_iaa_base_door_02", "xm_prop_iaa_base_elevator", "xm_prop_int_avenger_door_01a", "xm_prop_int_hanger_collision", "xm_prop_int_studiolo_colfix", "xm_prop_lab_barrier01", "xm_prop_lab_barrier02", "xm_prop_lab_booth_glass01", "xm_prop_lab_booth_glass02", "xm_prop_lab_booth_glass03", "xm_prop_lab_booth_glass04", "xm_prop_lab_booth_glass05", "xm_prop_lab_ceiling_lampa", "xm_prop_lab_ceiling_lampb", "xm_prop_lab_ceiling_lampb_group3", "xm_prop_lab_ceiling_lampb_group3l", "xm_prop_lab_ceiling_lampb_group5", "xm_prop_lab_cyllight002", "xm_prop_lab_cyllight01", "xm_prop_lab_desk_01", "xm_prop_lab_desk_02", "xm_prop_lab_door01_dna_l", "xm_prop_lab_door01_dna_r", "xm_prop_lab_door01_l", "xm_prop_lab_door01_lbth_l", "xm_prop_lab_door01_lbth_r", "xm_prop_lab_door01_r", "xm_prop_lab_door01_stack_l", "xm_prop_lab_door01_stack_r", "xm_prop_lab_door01_star_l", "xm_prop_lab_door01_star_r", "xm_prop_lab_door02_r", "xm_prop_lab_doorframe01", "xm_prop_lab_doorframe02", "xm_prop_lab_floor_lampa", "xm_prop_lab_lamp_wall_b", "xm_prop_lab_partition01", "xm_prop_lab_strip_lighta", "xm_prop_lab_strip_lightb", "xm_prop_lab_strip_lightbl", "xm_prop_lab_tube_lampa", "xm_prop_lab_tube_lampa_group3", "xm_prop_lab_tube_lampa_group6_g", "xm_prop_lab_tube_lampa_group6_p", "xm_prop_lab_tube_lampa_group6_r", "xm_prop_lab_tube_lampa_group6_y", "xm_prop_lab_tube_lampb", "xm_prop_lab_tube_lampb_group3", "xm_prop_lab_wall_lampa", "xm_prop_lab_wall_lampb", "xm_prop_moderncrate_xplv_01", "xm_prop_orbital_cannon_table", "xm_prop_out_hanger_lift", "xm_prop_rsply_crate04a", "xm_prop_rsply_crate04b", "xm_prop_sam_turret_01", "xm_prop_silo_elev_door01_l", "xm_prop_silo_elev_door01_r", "xm_prop_smug_crate_s_medical", "xm_prop_staff_screens_01", "xm_prop_tunnel_fan_01", "xm_prop_tunnel_fan_02", "xm_prop_vancrate_01a", "xm_prop_x17dlc_monitor_wall_01a", "xm_prop_x17dlc_rep_sign_01a", "xm_prop_x17_add_door_01", "xm_prop_x17_avengerchair", "xm_prop_x17_avengerchair_02", "xm_prop_x17_bag_01a", "xm_prop_x17_bag_01b", "xm_prop_x17_bag_01c", "xm_prop_x17_bag_01d", "xm_prop_x17_bag_med_01a", "xm_prop_x17_barge_01", "xm_prop_x17_barge_col_01", "xm_prop_x17_barge_col_02", "xm_prop_x17_book_bogdan", "xm_prop_x17_boxwood_01", "xm_prop_x17_boxwood_01b", "xm_prop_x17_bunker_door", "xm_prop_x17_b_glasses_01", "xm_prop_x17_cctv_01a", "xm_prop_x17_chest_closed", "xm_prop_x17_chest_open", "xm_prop_x17_clicker_01", "xm_prop_x17_coffee_jug", "xm_prop_x17_computer_01", "xm_prop_x17_computer_02", "xm_prop_x17_corpse_01", "xm_prop_x17_corpse_02", "xm_prop_x17_corpse_03", "xm_prop_x17_corp_offchair", "xm_prop_x17_cover_01", "xm_prop_x17_desk_cover_01a", "xm_prop_x17_filecab_01a", "xm_prop_x17_flight_rec_01a", "xm_prop_x17_harddisk_01a", "xm_prop_x17_hatch_d_l_27m", "xm_prop_x17_hatch_d_r_27m", "xm_prop_x17_hatch_lights", "xm_prop_x17_labvats", "xm_prop_x17_laptop_agent14_01", "xm_prop_x17_laptop_avon", "xm_prop_x17_laptop_lester_01", "xm_prop_x17_laptop_mrsr", "xm_prop_x17_lap_top_01", "xm_prop_x17_ld_case_01", "xm_prop_x17_lectern_01", "xm_prop_x17_l_door_frame_01", "xm_prop_x17_l_door_glass_01", "xm_prop_x17_l_door_glass_op_01", "xm_prop_x17_l_frame_01", "xm_prop_x17_l_frame_02", "xm_prop_x17_l_frame_03", "xm_prop_x17_l_glass_01", "xm_prop_x17_l_glass_02", "xm_prop_x17_l_glass_03", "xm_prop_x17_mine_01a", "xm_prop_x17_mine_02a", "xm_prop_x17_mine_03a", "xm_prop_x17_note_paper_01a", "xm_prop_x17_osphatch_27m", "xm_prop_x17_osphatch_40m", "xm_prop_x17_osphatch_col", "xm_prop_x17_osphatch_op_27m", "xm_prop_x17_para_sp_s", "xm_prop_x17_phone_01", "xm_prop_x17_pillar", "xm_prop_x17_pillar_02", "xm_prop_x17_pillar_03", "xm_prop_x17_powerbox_01", "xm_prop_x17_res_pctower", "xm_prop_x17_rig_osphatch", "xm_prop_x17_screens_01a", "xm_prop_x17_screens_02a", "xm_prop_x17_screens_02a_01", "xm_prop_x17_screens_02a_02", "xm_prop_x17_screens_02a_03", "xm_prop_x17_screens_02a_04", "xm_prop_x17_screens_02a_05", "xm_prop_x17_screens_02a_06", "xm_prop_x17_screens_02a_07", "xm_prop_x17_screens_02a_08", "xm_prop_x17_scuba_tank", "xm_prop_x17_seat_cover_01a", "xm_prop_x17_sec_panel_01", "xm_prop_x17_server_farm_cctv_01", "xm_prop_x17_shamal_crash", "xm_prop_x17_shovel_01a", "xm_prop_x17_shovel_01b", "xm_prop_x17_silo_01a", "xm_prop_x17_silo_01_col", "xm_prop_x17_silo_door_l_01a", "xm_prop_x17_silo_door_r_01a", "xm_prop_x17_silo_open_01a", "xm_prop_x17_silo_rocket_01", "xm_prop_x17_skin_osphatch", "xm_prop_x17_sub", "xm_prop_x17_sub_alarm_lamp", "xm_prop_x17_sub_al_lamp_off", "xm_prop_x17_sub_al_lamp_on", "xm_prop_x17_sub_damage", "xm_prop_x17_sub_extra", "xm_prop_x17_sub_lampa_large_blue", "xm_prop_x17_sub_lampa_large_white", "xm_prop_x17_sub_lampa_large_yel", "xm_prop_x17_sub_lampa_small_blue", "xm_prop_x17_sub_lampa_small_white", "xm_prop_x17_sub_lampa_small_yel", "xm_prop_x17_tablet_01", "xm_prop_x17_tem_control_01", "xm_prop_x17_tool_draw_01a", "xm_prop_x17_torpedo_case_01", "xm_prop_x17_trail_01a", "xm_prop_x17_trail_02a", "xm_prop_x17_tv_ceiling_01", "xm_prop_x17_tv_ceiling_scn_01", "xm_prop_x17_tv_ceiling_scn_02", "xm_prop_x17_tv_flat_01", "xm_prop_x17_tv_flat_02", "xm_prop_x17_tv_scrn_01", "xm_prop_x17_tv_scrn_02", "xm_prop_x17_tv_scrn_03", "xm_prop_x17_tv_scrn_04", "xm_prop_x17_tv_scrn_05", "xm_prop_x17_tv_scrn_06", "xm_prop_x17_tv_scrn_07", "xm_prop_x17_tv_scrn_08", "xm_prop_x17_tv_scrn_09", "xm_prop_x17_tv_scrn_10", "xm_prop_x17_tv_scrn_11", "xm_prop_x17_tv_scrn_12", "xm_prop_x17_tv_scrn_13", "xm_prop_x17_tv_scrn_14", "xm_prop_x17_tv_scrn_15", "xm_prop_x17_tv_scrn_16", "xm_prop_x17_tv_scrn_17", "xm_prop_x17_tv_scrn_18", "xm_prop_x17_tv_scrn_19", "xm_prop_x17_tv_stand_01a", "xm_prop_x17_tv_wall", "xm_prop_x17_xmas_tree_int", "xm_prop_xm17_wayfinding", "xm_prop_xm_gunlocker_01a", "xm_screen_1", "as_prop_as_target_big", "as_prop_as_target_grid", "as_prop_as_target_medium", "as_prop_as_target_scaffold_01a", "as_prop_as_target_scaffold_01b", "as_prop_as_target_scaffold_02a", "as_prop_as_target_scaffold_02b", "as_prop_as_target_small", "as_prop_as_target_small_02", "as_prop_as_tube_gap_02", "as_prop_as_tube_gap_03", "as_prop_as_tube_xxs", "as_prop_as_stunt_target", "as_prop_as_stunt_target_small", "ba_prop_battle_bag_01a", "ba_prop_battle_bag_01b", "ba_prop_battle_bar_beerfridge_01", "ba_prop_battle_bar_fridge_01", "ba_prop_battle_bar_fridge_02", "ba_prop_battle_bikechock", "ba_prop_battle_case_sm_03", "ba_prop_battle_champ_01", "ba_prop_battle_champ_closed", "ba_prop_battle_champ_closed_02", "ba_prop_battle_champ_closed_03", "ba_prop_battle_champ_open", "ba_prop_battle_champ_open_02", "ba_prop_battle_champ_open_03", "ba_prop_battle_club_chair_01", "ba_prop_battle_club_chair_02", "ba_prop_battle_club_chair_03", "ba_prop_battle_club_computer_01", "ba_prop_battle_club_computer_02", "ba_prop_battle_club_screen", "ba_prop_battle_club_screen_02", "ba_prop_battle_club_screen_03", "ba_prop_battle_club_speaker_array", "ba_prop_battle_club_speaker_dj", "ba_prop_battle_club_speaker_large", "ba_prop_battle_club_speaker_med", "ba_prop_battle_club_speaker_small", "ba_prop_battle_coke_block_01a", "ba_prop_battle_coke_doll_bigbox", "ba_prop_battle_control_console", "ba_prop_battle_crate_art_02_bc", "ba_prop_battle_crate_beer_01", "ba_prop_battle_crate_beer_02", "ba_prop_battle_crate_beer_03", "ba_prop_battle_crate_beer_04", "ba_prop_battle_crate_beer_double", "ba_prop_battle_crate_biohazard_bc", "ba_prop_battle_crate_closed_bc", "ba_prop_battle_crate_gems_bc", "ba_prop_battle_crate_m_antiques", "ba_prop_battle_crate_m_bones", "ba_prop_battle_crate_m_hazard", "ba_prop_battle_crate_m_jewellery", "ba_prop_battle_crate_m_medical", "ba_prop_battle_crate_m_tobacco", "ba_prop_battle_crate_med_bc", "ba_prop_battle_crate_tob_bc", "ba_prop_battle_crate_wlife_bc", "ba_prop_battle_crates_pistols_01a", "ba_prop_battle_crates_rifles_01a", "ba_prop_battle_crates_rifles_02a", "ba_prop_battle_crates_rifles_03a", "ba_prop_battle_crates_rifles_04a", "ba_prop_battle_crates_sam_01a", "ba_prop_battle_crates_wpn_mix_01a", "ba_prop_battle_cuffs", "ba_prop_battle_decanter_01_s", "ba_prop_battle_decanter_02_s", "ba_prop_battle_decanter_03_s", "ba_prop_battle_dj_deck_01a", "ba_prop_battle_dj_kit_mixer", "ba_prop_battle_dj_kit_speaker", "ba_prop_battle_dj_mixer_01a", "ba_prop_battle_dj_mixer_01b", "ba_prop_battle_dj_mixer_01c", "ba_prop_battle_dj_mixer_01d", "ba_prop_battle_dj_mixer_01e", "ba_prop_battle_dj_wires_dixon", "ba_prop_battle_dj_wires_madonna", "ba_prop_battle_dj_wires_solomon", "ba_prop_battle_dj_wires_tale", "ba_prop_battle_drone_quad_static", "ba_prop_battle_drug_package_02", "ba_prop_battle_emis_rig_01", "ba_prop_battle_emis_rig_02", "ba_prop_battle_emis_rig_03", "ba_prop_battle_emis_rig_04", "ba_prop_battle_fakeid_boxdl_01a", "ba_prop_battle_fakeid_boxpp_01a", "ba_prop_battle_fan", "ba_prop_battle_glowstick_01", "ba_prop_battle_hacker_screen", "ba_prop_battle_handbag", "ba_prop_battle_headphones_dj", "ba_prop_battle_hobby_horse", "ba_prop_battle_ice_bucket", "ba_prop_battle_laptop_dj", "ba_prop_battle_lights_01_bright", "ba_prop_battle_lights_01_dim", "ba_prop_battle_lights_02_bright", "ba_prop_battle_lights_02_dim", "ba_prop_battle_lights_03_bright", "ba_prop_battle_lights_03_dim", "ba_prop_battle_lights_ceiling_l_a", "ba_prop_battle_lights_ceiling_l_b", "ba_prop_battle_lights_ceiling_l_c", "ba_prop_battle_lights_ceiling_l_d", "ba_prop_battle_lights_ceiling_l_e", "ba_prop_battle_lights_ceiling_l_f", "ba_prop_battle_lights_ceiling_l_g", "ba_prop_battle_lights_ceiling_l_h", "ba_prop_battle_lights_club_dancefloor", "ba_prop_battle_lights_floor", "ba_prop_battle_lights_floor_l_a", "ba_prop_battle_lights_floor_l_b", "ba_prop_battle_lights_floorblue", "ba_prop_battle_lights_floorred", "ba_prop_battle_lights_fx_lamp", "ba_prop_battle_lights_fx_riga", "ba_prop_battle_lights_fx_rigb", "ba_prop_battle_lights_fx_rigc", "ba_prop_battle_lights_fx_rigd", "ba_prop_battle_lights_fx_rige", "ba_prop_battle_lights_fx_rigf", "ba_prop_battle_lights_fx_rigg", "ba_prop_battle_lights_fx_righ", "ba_prop_battle_lights_fx_rotator", "ba_prop_battle_lights_fx_support", "ba_prop_battle_lights_int_03_lr1", "ba_prop_battle_lights_int_03_lr2", "ba_prop_battle_lights_int_03_lr3", "ba_prop_battle_lights_int_03_lr4", "ba_prop_battle_lights_int_03_lr5", "ba_prop_battle_lights_int_03_lr6", "ba_prop_battle_lights_int_03_lr7", "ba_prop_battle_lights_int_03_lr8", "ba_prop_battle_lights_int_03_lr9", "ba_prop_battle_lights_stairs", "ba_prop_battle_lights_support", "ba_prop_battle_lights_tube_l_a", "ba_prop_battle_lights_tube_l_b", "ba_prop_battle_lights_wall_l_a", "ba_prop_battle_lights_wall_l_b", "ba_prop_battle_lights_wall_l_c", "ba_prop_battle_lights_wall_l_d", "ba_prop_battle_lights_wall_l_e", "ba_prop_battle_lights_wall_l_f", "ba_prop_battle_lights_workbench", "ba_prop_battle_mast_01a", "ba_prop_battle_meth_bigbag_01a", "ba_prop_battle_mic", "ba_prop_battle_moneypack_02a", "ba_prop_battle_pbus_screen", "ba_prop_battle_policet_seats", "ba_prop_battle_poster_promo_01", "ba_prop_battle_poster_promo_02", "ba_prop_battle_poster_promo_03", "ba_prop_battle_poster_promo_04", "ba_prop_battle_poster_skin_01", "ba_prop_battle_poster_skin_02", "ba_prop_battle_poster_skin_03", "ba_prop_battle_poster_skin_04", "ba_prop_battle_ps_box_01", "ba_prop_battle_rsply_crate_02a", "ba_prop_battle_rsply_crate_gr_02a", "ba_prop_battle_secpanel", "ba_prop_battle_secpanel_dam", "ba_prop_battle_security_pad", "ba_prop_battle_shot_glass_01", "ba_prop_battle_sniffing_pipe", "ba_prop_battle_sports_helmet", "ba_prop_battle_tent_01", "ba_prop_battle_tent_02", "ba_prop_battle_trophy_battler", "ba_prop_battle_trophy_dancer", "ba_prop_battle_trophy_no1", "ba_prop_battle_vape_01", "ba_prop_battle_vinyl_case", "ba_prop_battle_wallet_pickup", "ba_prop_battle_weed_bigbag_01a", "ba_prop_battle_whiskey_bottle_2_s", "ba_prop_battle_whiskey_bottle_s", "ba_prop_battle_whiskey_opaque_s", "ba_prop_club_champset", "ba_prop_club_dimmer", "ba_prop_club_dressing_board_01", "ba_prop_club_dressing_board_02", "ba_prop_club_dressing_board_03", "ba_prop_club_dressing_board_04", "ba_prop_club_dressing_board_05", "ba_prop_club_dressing_poster_01", "ba_prop_club_dressing_poster_02", "ba_prop_club_dressing_poster_03", "ba_prop_club_dressing_posters_01", "ba_prop_club_dressing_posters_02", "ba_prop_club_dressing_posters_03", "ba_prop_club_dressing_sign_01", "ba_prop_club_dressing_sign_02", "ba_prop_club_dressing_sign_03", "ba_prop_club_emis_rig_01", "ba_prop_club_emis_rig_02", "ba_prop_club_emis_rig_02b", "ba_prop_club_emis_rig_02c", "ba_prop_club_emis_rig_02d", "ba_prop_club_emis_rig_03", "ba_prop_club_emis_rig_04", "ba_prop_club_emis_rig_04b", "ba_prop_club_emis_rig_04c", "ba_prop_club_emis_rig_05", "ba_prop_club_emis_rig_06", "ba_prop_club_emis_rig_07", "ba_prop_club_emis_rig_08", "ba_prop_club_emis_rig_09", "ba_prop_club_emis_rig_10", "ba_prop_club_emis_rig_10_shad", "ba_prop_club_glass_opaque", "ba_prop_club_glass_trans", "ba_prop_club_laptop_dj", "ba_prop_club_laptop_dj_02", "ba_prop_club_screens_01", "ba_prop_club_screens_02", "ba_prop_club_smoke_machine", "ba_prop_club_tonic_bottle", "ba_prop_club_tonic_can", "ba_prop_club_water_bottle", "ba_prop_door_club_edgy_generic", "ba_prop_door_club_edgy_wc", "ba_prop_door_club_entrance", "ba_prop_door_club_generic_vip", "ba_prop_door_club_glam_generic", "ba_prop_door_club_glam_wc", "ba_prop_door_club_glass", "ba_prop_door_club_glass_opaque", "ba_prop_door_club_trad_generic", "ba_prop_door_club_trad_wc", "ba_prop_door_elevator_1l", "ba_prop_door_elevator_1r", "ba_prop_door_gun_safe", "ba_prop_door_safe", "ba_prop_door_safe_02", "ba_prop_glass_front_office", "ba_prop_glass_front_office_opaque", "ba_prop_glass_garage", "ba_prop_glass_garage_opaque", "ba_prop_glass_rear_office", "ba_prop_glass_rear_opaque", "ba_prop_int_edgy_stool", "ba_prop_int_edgy_table_01", "ba_prop_int_edgy_table_02", "ba_prop_int_glam_stool", "ba_prop_int_glam_table", "ba_prop_int_stool_low", "ba_prop_int_trad_table", "ba_prop_sign_galaxy", "ba_prop_sign_gefangnis", "ba_prop_sign_maison", "ba_prop_sign_omega", "ba_prop_sign_omega_02", "ba_prop_sign_palace", "ba_prop_sign_paradise", "ba_prop_sign_studio", "ba_prop_sign_technologie", "ba_prop_sign_tonys", "ba_prop_track_bend_l_b", "ba_prop_track_straight_lm", "ba_rig_dj_01_lights_01_a", "ba_rig_dj_01_lights_01_b", "ba_rig_dj_01_lights_01_c", "ba_rig_dj_01_lights_02_a", "ba_rig_dj_01_lights_02_b", "ba_rig_dj_01_lights_02_c", "ba_rig_dj_01_lights_03_a", "ba_rig_dj_01_lights_03_b", "ba_rig_dj_01_lights_03_c", "ba_rig_dj_01_lights_04_a", "ba_rig_dj_01_lights_04_a_scr", "ba_rig_dj_01_lights_04_b", "ba_rig_dj_01_lights_04_b_scr", "ba_rig_dj_01_lights_04_c", "ba_rig_dj_01_lights_04_c_scr", "ba_rig_dj_02_lights_01_a", "ba_rig_dj_02_lights_01_b", "ba_rig_dj_02_lights_01_c", "ba_rig_dj_02_lights_02_a", "ba_rig_dj_02_lights_02_b", "ba_rig_dj_02_lights_02_c", "ba_rig_dj_02_lights_03_a", "ba_rig_dj_02_lights_03_b", "ba_rig_dj_02_lights_03_c", "ba_rig_dj_02_lights_04_a", "ba_rig_dj_02_lights_04_a_scr", "ba_rig_dj_02_lights_04_b", "ba_rig_dj_02_lights_04_b_scr", "ba_rig_dj_02_lights_04_c", "ba_rig_dj_02_lights_04_c_scr", "ba_rig_dj_03_lights_01_a", "ba_rig_dj_03_lights_01_b", "ba_rig_dj_03_lights_01_c", "ba_rig_dj_03_lights_02_a", "ba_rig_dj_03_lights_02_b", "ba_rig_dj_03_lights_02_c", "ba_rig_dj_03_lights_03_a", "ba_rig_dj_03_lights_03_b", "ba_rig_dj_03_lights_03_c", "ba_rig_dj_03_lights_04_a", "ba_rig_dj_03_lights_04_a_scr", "ba_rig_dj_03_lights_04_b", "ba_rig_dj_03_lights_04_b_scr", "ba_rig_dj_03_lights_04_c", "ba_rig_dj_03_lights_04_c_scr", "ba_rig_dj_04_lights_01_a", "ba_rig_dj_04_lights_01_b", "ba_rig_dj_04_lights_01_c", "ba_rig_dj_04_lights_02_a", "ba_rig_dj_04_lights_02_b", "ba_rig_dj_04_lights_02_c", "ba_rig_dj_04_lights_03_a", "ba_rig_dj_04_lights_03_b", "ba_rig_dj_04_lights_03_c", "ba_rig_dj_04_lights_04_a", "ba_rig_dj_04_lights_04_a_scr", "ba_rig_dj_04_lights_04_b", "ba_rig_dj_04_lights_04_b_scr", "ba_rig_dj_04_lights_04_c", "ba_rig_dj_04_lights_04_c_scr", "ba_rig_dj_all_lights_01_off", "ba_rig_dj_all_lights_02_off", "ba_rig_dj_all_lights_03_off", "ba_rig_dj_all_lights_04_off", "ba_prop_batle_crates_mule", "ba_prop_batle_crates_pounder", "ba_prop_battle_amb_phone", "ba_prop_battle_antique_box", "xs_arenalights_arenastruc", "xs_arenalights_atlantis_spin", "xs_arenalights_track_atlantis", "xs_arenalights_track_dyst01", "xs_arenalights_track_dyst02", "xs_arenalights_track_dyst03", "xs_arenalights_track_dyst04", "xs_arenalights_track_dyst05", "xs_arenalights_track_dyst06", "xs_arenalights_track_dyst07", "xs_arenalights_track_dyst08", "xs_arenalights_track_dyst09", "xs_arenalights_track_dyst10", "xs_arenalights_track_dyst11", "xs_arenalights_track_dyst12", "xs_arenalights_track_dyst13", "xs_arenalights_track_dyst14", "xs_arenalights_track_dyst15", "xs_arenalights_track_dyst16", "xs_arenalights_track_evening", "xs_arenalights_track_hell", "xs_arenalights_track_midday", "xs_arenalights_track_morning", "xs_arenalights_track_night", "xs_arenalights_track_saccharine", "xs_arenalights_track_sandstorm", "xs_arenalights_track_sfnight", "xs_arenalights_track_storm", "xs_arenalights_track_toxic", "xs_arenawars_clothb", "xs_arenawars_clothc", "xs_arenawars_clothd", "xs_arenawarsbanners", "xs_combined_dyst_03_brdg01", "xs_combined_dyst_03_brdg02", "xs_combined_dyst_03_build_a", "xs_combined_dyst_03_build_b", "xs_combined_dyst_03_build_c", "xs_combined_dyst_03_build_d", "xs_combined_dyst_03_build_e", "xs_combined_dyst_03_build_f", "xs_combined_dyst_03_jumps", "xs_combined_dyst_05_props01", "xs_combined_dyst_05_props02", "xs_combined_dyst_06_build_01", "xs_combined_dyst_06_build_02", "xs_combined_dyst_06_build_03", "xs_combined_dyst_06_build_04", "xs_combined_dyst_06_plane", "xs_combined_dyst_06_roads", "xs_combined_dyst_06_rocks", "xs_combined_dyst_fence_04", "xs_combined_dyst_neon_04", "xs_combined_dyst_pipes_04", "xs_combined_dyst_planeb_04", "xs_combined_dystopian_14_brdg01", "xs_combined_dystopian_14_brdg02", "xs_combined_set_dyst_01_build_01", "xs_combined_set_dyst_01_build_02", "xs_combined_set_dyst_01_build_03", "xs_combined_set_dyst_01_build_04", "xs_combined_set_dyst_01_build_05", "xs_combined_set_dyst_01_build_06", "xs_combined_set_dyst_01_build_07", "xs_combined_set_dyst_01_build_08", "xs_combined_set_dyst_01_build_09", "xs_combined_set_dyst_01_build_10", "xs_combined_set_dyst_01_build_11", "xs_combined_set_dyst_01_build_12", "xs_combined2_dyst_07_boatsafety", "xs_combined2_dyst_07_build_a", "xs_combined2_dyst_07_build_b", "xs_combined2_dyst_07_build_c", "xs_combined2_dyst_07_build_d", "xs_combined2_dyst_07_build_e", "xs_combined2_dyst_07_build_f", "xs_combined2_dyst_07_build_g", "xs_combined2_dyst_07_cabin", "xs_combined2_dyst_07_hull", "xs_combined2_dyst_07_rear_hull", "xs_combined2_dyst_07_shipdecals", "xs_combined2_dyst_07_shipdetails", "xs_combined2_dyst_07_shipdetails2", "xs_combined2_dyst_07_turret", "xs_combined2_dyst_08_build_01", "xs_combined2_dyst_08_pipes_01", "xs_combined2_dyst_08_pipes_02", "xs_combined2_dyst_08_ramp", "xs_combined2_dyst_08_towers", "xs_combined2_dyst_barrier_01_09", "xs_combined2_dyst_barrier_01b_09", "xs_combined2_dyst_bridge_01", "xs_combined2_dyst_build_01a_09", "xs_combined2_dyst_build_01b_09", "xs_combined2_dyst_build_01c_09", "xs_combined2_dyst_build_02a_09", "xs_combined2_dyst_build_02b_09", "xs_combined2_dyst_build_02c_09", "xs_combined2_dyst_glue_09", "xs_combined2_dyst_longbuild_a_09", "xs_combined2_dyst_longbuild_b_09", "xs_combined2_dyst_longbuild_c_09", "xs_combined2_dyst_pipea_09", "xs_combined2_dyst_pipeb_09", "xs_combined2_dystdecal_10", "xs_combined2_dystplane_10", "xs_combined2_dystplaneb_10", "xs_combined2_terrain_dystopian_08", "xs_combined2_wallglue_10", "xs_p_para_bag_arena_s", "xs_prop_ar_buildingx_01a_sf", "xs_prop_ar_gate_01a_sf", "xs_prop_ar_pipe_01a_sf", "xs_prop_ar_pipe_conn_01a_sf", "xs_prop_ar_planter_c_01a_sf", "xs_prop_ar_planter_c_02a_sf", "xs_prop_ar_planter_c_03a_sf", "xs_prop_ar_planter_m_01a_sf", "xs_prop_ar_planter_m_30a_sf", "xs_prop_ar_planter_m_30b_sf", "xs_prop_ar_planter_m_60a_sf", "xs_prop_ar_planter_m_60b_sf", "xs_prop_ar_planter_m_90a_sf", "xs_prop_ar_planter_s_01a_sf", "xs_prop_ar_planter_s_45a_sf", "xs_prop_ar_planter_s_90a_sf", "xs_prop_ar_planter_s_180a_sf", "xs_prop_ar_planter_xl_01a_sf", "xs_prop_ar_stand_thick_01a_sf", "xs_prop_ar_tower_01a_sf", "xs_prop_ar_tunnel_01a", "xs_prop_ar_tunnel_01a_sf", "xs_prop_ar_tunnel_01a_wl", "xs_prop_arena_1bay_01a", "xs_prop_arena_2bay_01a", "xs_prop_arena_3bay_01a", "xs_prop_arena_adj_hloop", "xs_prop_arena_adj_hloop_sf", "xs_prop_arena_adj_hloop_wl", "xs_prop_arena_airmissile_01a", "xs_prop_arena_arrow_01a", "xs_prop_arena_arrow_01a_sf", "xs_prop_arena_arrow_01a_wl", "xs_prop_arena_bag_01", "xs_prop_arena_barrel_01a", "xs_prop_arena_barrel_01a_sf", "xs_prop_arena_barrel_01a_wl", "xs_prop_arena_bigscreen_01", "xs_prop_arena_bollard_rising_01a", "xs_prop_arena_bollard_rising_01a_sf", "xs_prop_arena_bollard_rising_01a_wl", "xs_prop_arena_bollard_rising_01b", "xs_prop_arena_bollard_rising_01b_sf", "xs_prop_arena_bollard_rising_01b_wl", "xs_prop_arena_bollard_side_01a", "xs_prop_arena_bollard_side_01a_sf", "xs_prop_arena_bollard_side_01a_wl", "xs_prop_arena_bomb_l", "xs_prop_arena_bomb_m", "xs_prop_arena_bomb_s", "xs_prop_arena_box_test", "xs_prop_arena_building_01a", "xs_prop_arena_car_wall_01a", "xs_prop_arena_car_wall_02a", "xs_prop_arena_car_wall_03a", "xs_prop_arena_cash_pile_l", "xs_prop_arena_cash_pile_m", "xs_prop_arena_cash_pile_s", "xs_prop_arena_champ_closed", "xs_prop_arena_champ_open", "xs_prop_arena_clipboard_01a", "xs_prop_arena_clipboard_01b", "xs_prop_arena_clipboard_paper", "xs_prop_arena_confetti_cannon", "xs_prop_arena_crate_01a", "xs_prop_arena_drone_01", "xs_prop_arena_drone_02", "xs_prop_arena_fence_01a_sf", "xs_prop_arena_fence_01a_wl", "xs_prop_arena_finish_line", "xs_prop_arena_flipper_large_01a_sf", "xs_prop_arena_flipper_large_01a_wl", "xs_prop_arena_flipper_small_01a_sf", "xs_prop_arena_flipper_small_01a_wl", "xs_prop_arena_flipper_xl_01a_sf", "xs_prop_arena_flipper_xl_01a_wl", "xs_prop_arena_gaspole_01", "xs_prop_arena_gaspole_02", "xs_prop_arena_gaspole_03", "xs_prop_arena_gaspole_04", "xs_prop_arena_gate_01a", "xs_prop_arena_goal", "xs_prop_arena_goal_sf", "xs_prop_arena_i_flag_green", "xs_prop_arena_i_flag_pink", "xs_prop_arena_i_flag_purple", "xs_prop_arena_i_flag_red", "xs_prop_arena_i_flag_white", "xs_prop_arena_i_flag_yellow", "xs_prop_arena_industrial_a", "xs_prop_arena_industrial_b", "xs_prop_arena_industrial_c", "xs_prop_arena_industrial_d", "xs_prop_arena_industrial_e", "xs_prop_arena_jump_02b", "xs_prop_arena_jump_l_01a", "xs_prop_arena_jump_l_01a_sf", "xs_prop_arena_jump_l_01a_wl", "xs_prop_arena_jump_m_01a", "xs_prop_arena_jump_m_01a_sf", "xs_prop_arena_jump_m_01a_wl", "xs_prop_arena_jump_s_01a", "xs_prop_arena_jump_s_01a_sf", "xs_prop_arena_jump_s_01a_wl", "xs_prop_arena_jump_xl_01a", "xs_prop_arena_jump_xl_01a_sf", "xs_prop_arena_jump_xl_01a_wl", "xs_prop_arena_jump_xs_01a", "xs_prop_arena_jump_xs_01a_sf", "xs_prop_arena_jump_xs_01a_wl", "xs_prop_arena_jump_xxl_01a", "xs_prop_arena_jump_xxl_01a_sf", "xs_prop_arena_jump_xxl_01a_wl", "xs_prop_arena_landmine_01a", "xs_prop_arena_landmine_01a_sf", "xs_prop_arena_landmine_01c", "xs_prop_arena_landmine_01c_sf", "xs_prop_arena_landmine_01c_wl", "xs_prop_arena_landmine_03a", "xs_prop_arena_landmine_03a_sf", "xs_prop_arena_landmine_03a_wl", "xs_prop_arena_lights_ceiling_l_a", "xs_prop_arena_lights_ceiling_l_c", "xs_prop_arena_lights_tube_l_a", "xs_prop_arena_lights_tube_l_b", "xs_prop_arena_lights_wall_l_a", "xs_prop_arena_lights_wall_l_c", "xs_prop_arena_lights_wall_l_d", "xs_prop_arena_oil_jack_01a", "xs_prop_arena_oil_jack_02a", "xs_prop_arena_overalls_01a", "xs_prop_arena_pipe_bend_01a", "xs_prop_arena_pipe_bend_01b", "xs_prop_arena_pipe_bend_01c", "xs_prop_arena_pipe_bend_02a", "xs_prop_arena_pipe_bend_02b", "xs_prop_arena_pipe_bend_02c", "xs_prop_arena_pipe_end_01a", "xs_prop_arena_pipe_end_02a", "xs_prop_arena_pipe_machine_01a", "xs_prop_arena_pipe_machine_02a", "xs_prop_arena_pipe_ramp_01a", "xs_prop_arena_pipe_straight_01a", "xs_prop_arena_pipe_straight_01b", "xs_prop_arena_pipe_straight_02a", "xs_prop_arena_pipe_straight_02b", "xs_prop_arena_pipe_straight_02c", "xs_prop_arena_pipe_straight_02d", "xs_prop_arena_pipe_track_c_01a", "xs_prop_arena_pipe_track_c_01b", "xs_prop_arena_pipe_track_c_01c", "xs_prop_arena_pipe_track_c_01d", "xs_prop_arena_pipe_track_s_01a", "xs_prop_arena_pipe_track_s_01b", "xs_prop_arena_pipe_transition_01a", "xs_prop_arena_pipe_transition_01b", "xs_prop_arena_pipe_transition_01c", "xs_prop_arena_pipe_transition_02a", "xs_prop_arena_pipe_transition_02b", "xs_prop_arena_pit_double_01a_sf", "xs_prop_arena_pit_double_01a_wl", "xs_prop_arena_pit_double_01b", "xs_prop_arena_pit_double_01b_sf", "xs_prop_arena_pit_double_01b_wl", "xs_prop_arena_pit_fire_01a", "xs_prop_arena_pit_fire_01a_sf", "xs_prop_arena_pit_fire_01a_wl", "xs_prop_arena_pit_fire_02a", "xs_prop_arena_pit_fire_02a_sf", "xs_prop_arena_pit_fire_02a_wl", "xs_prop_arena_pit_fire_03a", "xs_prop_arena_pit_fire_03a_sf", "xs_prop_arena_pit_fire_03a_wl", "xs_prop_arena_pit_fire_04a", "xs_prop_arena_pit_fire_04a_sf", "xs_prop_arena_pit_fire_04a_wl", "xs_prop_arena_planning_rt_01", "xs_prop_arena_podium_01a", "xs_prop_arena_podium_02a", "xs_prop_arena_podium_03a", "xs_prop_arena_pressure_plate_01a", "xs_prop_arena_pressure_plate_01a_sf", "xs_prop_arena_pressure_plate_01a_wl", "xs_prop_arena_roulette", "xs_prop_arena_screen_tv_01", "xs_prop_arena_showerdoor_s", "xs_prop_arena_spikes_01a", "xs_prop_arena_spikes_01a_sf", "xs_prop_arena_spikes_02a", "xs_prop_arena_spikes_02a_sf", "xs_prop_arena_startgate_01a", "xs_prop_arena_startgate_01a_sf", "xs_prop_arena_station_01a", "xs_prop_arena_station_02a", "xs_prop_arena_stickynote_01a", "xs_prop_arena_tablet_drone_01", "xs_prop_arena_telescope_01", "xs_prop_arena_torque_wrench_01a", "xs_prop_arena_tower_01a", "xs_prop_arena_tower_02a", "xs_prop_arena_tower_04a", "xs_prop_arena_trophy_double_01a", "xs_prop_arena_trophy_double_01b", "xs_prop_arena_trophy_double_01c", "xs_prop_arena_trophy_single_01a", "xs_prop_arena_trophy_single_01b", "xs_prop_arena_trophy_single_01c", "xs_prop_arena_turntable_01a", "xs_prop_arena_turntable_01a_sf", "xs_prop_arena_turntable_01a_wl", "xs_prop_arena_turntable_02a", "xs_prop_arena_turntable_02a_sf", "xs_prop_arena_turntable_02a_wl", "xs_prop_arena_turntable_03a", "xs_prop_arena_turntable_03a_sf", "xs_prop_arena_turntable_03a_wl", "xs_prop_arena_turntable_b_01a", "xs_prop_arena_turntable_b_01a_sf", "xs_prop_arena_turntable_b_01a_wl", "xs_prop_arena_turret_01a", "xs_prop_arena_turret_01a_sf", "xs_prop_arena_turret_01a_wl", "xs_prop_arena_turret_post_01a", "xs_prop_arena_turret_post_01a_sf", "xs_prop_arena_turret_post_01a_wl", "xs_prop_arena_turret_post_01b_wl", "xs_prop_arena_wall_01a", "xs_prop_arena_wall_01b", "xs_prop_arena_wall_01c", "xs_prop_arena_wall_02a", "xs_prop_arena_wall_02a_sf", "xs_prop_arena_wall_02a_wl", "xs_prop_arena_wall_02b_wl", "xs_prop_arena_wall_02c_wl", "xs_prop_arena_wall_rising_01a", "xs_prop_arena_wall_rising_01a_sf", "xs_prop_arena_wall_rising_01a_wl", "xs_prop_arena_wall_rising_02a", "xs_prop_arena_wall_rising_02a_sf", "xs_prop_arena_wall_rising_02a_wl", "xs_prop_arena_wedge_01a", "xs_prop_arena_wedge_01a_sf", "xs_prop_arena_wedge_01a_wl", "xs_prop_arena_whiteboard_eraser", "xs_prop_arenaped", "xs_prop_arrow_tyre_01a", "xs_prop_arrow_tyre_01a_sf", "xs_prop_arrow_tyre_01a_wl", "xs_prop_arrow_tyre_01b", "xs_prop_arrow_tyre_01b_sf", "xs_prop_arrow_tyre_01b_wl", "xs_prop_barrier_5m_01a", "xs_prop_barrier_10m_01a", "xs_prop_barrier_15m_01a", "xs_prop_beer_bottle_wl", "xs_prop_burger_meat_wl", "xs_prop_can_tunnel_wl", "xs_prop_can_wl", "xs_prop_chips_tube_wl", "xs_prop_chopstick_wl", "xs_prop_gate_tyre_01a_wl", "xs_prop_hamburgher_wl", "xs_prop_lplate_01a_wl", "xs_prop_lplate_bend_01a_wl", "xs_prop_lplate_wall_01a_wl", "xs_prop_lplate_wall_01b_wl", "xs_prop_lplate_wall_01c_wl", "xs_prop_nacho_wl",  "xs_prop_scifi_01_lights_set", "xs_prop_scifi_02_lights_", "xs_prop_scifi_03_lights_set", "xs_prop_scifi_04_lights_set", "xs_prop_scifi_05_lights_set", "xs_prop_scifi_06_lights_set", "xs_prop_scifi_07_lights_set", "xs_prop_scifi_08_lights_set", "xs_prop_scifi_09_lights_set", "xs_prop_scifi_10_lights_set", "xs_prop_scifi_11_lights_set", "xs_prop_scifi_12_lights_set", "xs_prop_scifi_13_lights_set", "xs_prop_scifi_14_lights_set", "xs_prop_scifi_15_lights_set", "xs_prop_scifi_16_lights_set", "xs_prop_track_slowdown", "xs_prop_track_slowdown_t1", "xs_prop_track_slowdown_t2", "xs_prop_trinket_bag_01a", "xs_prop_trinket_cup_01a", "xs_prop_trinket_mug_01a", "xs_prop_trinket_republican_01a", "xs_prop_trinket_robot_01a", "xs_prop_trinket_skull_01a", "xs_prop_trophy_bandito_01a", "xs_prop_trophy_carfire_01a", "xs_prop_trophy_carstack_01a", "xs_prop_trophy_champ_01a", "xs_prop_trophy_cup_01a", "xs_prop_trophy_drone_01a", "xs_prop_trophy_firepit_01a", "xs_prop_trophy_flags_01a", "xs_prop_trophy_flipper_01a", "xs_prop_trophy_goldbag_01a", "xs_prop_trophy_imperator_01a", "xs_prop_trophy_mines_01a", "xs_prop_trophy_pegasus_01a", "xs_prop_trophy_presents_01a", "xs_prop_trophy_rc_01a", "xs_prop_trophy_shunt_01a", "xs_prop_trophy_spinner_01a", "xs_prop_trophy_telescope_01a", "xs_prop_trophy_tower_01a", "xs_prop_trophy_wrench_01a", "xs_prop_vipl_lights_ceiling_l_d", "xs_prop_vipl_lights_ceiling_l_e", "xs_prop_vipl_lights_floor", "xs_prop_wall_tyre_01a", "xs_prop_wall_tyre_end_01a", "xs_prop_wall_tyre_l_01a", "xs_prop_wall_tyre_start_01a", "xs_prop_waste_10_lightset", "xs_prop_wastel_01_lightset", "xs_prop_wastel_02_lightset", "xs_prop_wastel_03_lightset", "xs_prop_wastel_04_lightset", "xs_prop_wastel_05_lightset", "xs_prop_wastel_06_lightset", "xs_prop_wastel_07_lightset", "xs_prop_wastel_08_lightset", "xs_prop_wastel_09_lightset", "xs_prop_x18_axel_stand_01a", "xs_prop_x18_bench_grinder_01a", "xs_prop_x18_bench_vice_01a", "xs_prop_x18_car_jack_01a", "xs_prop_x18_carlift", "xs_prop_x18_drill_01a", "xs_prop_x18_engine_hoist_02a", "xs_prop_x18_flatbed_ramp", "xs_prop_x18_garagedoor01", "xs_prop_x18_garagedoor02", "xs_prop_x18_hangar_lamp_led_a", "xs_prop_x18_hangar_lamp_led_b", "xs_prop_x18_hangar_lamp_wall_a", "xs_prop_x18_hangar_lamp_wall_b", "xs_prop_x18_hangar_light_a", "xs_prop_x18_hangar_light_b", "xs_prop_x18_hangar_light_b_l1", "xs_prop_x18_hangar_light_c", "xs_prop_x18_impact_driver_01a", "xs_prop_x18_lathe_01a", "xs_prop_x18_prop_welder_01a", "xs_prop_x18_speeddrill_01c", "xs_prop_x18_strut_compressor_01a", "xs_prop_x18_tool_box_01a", "xs_prop_x18_tool_box_01b", "xs_prop_x18_tool_box_02a", "xs_prop_x18_tool_box_02b", "xs_prop_x18_tool_cabinet_01a", "xs_prop_x18_tool_cabinet_01b", "xs_prop_x18_tool_cabinet_01c", "xs_prop_x18_tool_chest_01a", "xs_prop_x18_tool_draw_01a", "xs_prop_x18_tool_draw_01b", "xs_prop_x18_tool_draw_01c", "xs_prop_x18_tool_draw_01d", "xs_prop_x18_tool_draw_01e", "xs_prop_x18_tool_draw_01x", "xs_prop_x18_tool_draw_drink", "xs_prop_x18_tool_draw_rc_cab", "xs_prop_x18_torque_wrench_01a", "xs_prop_x18_transmission_lift_01a", "xs_prop_x18_vip_greeenlight", "xs_prop_x18_wheel_balancer_01a", "xs_propint2_barrier_01", "xs_propint2_building_01", "xs_propint2_building_02", "xs_propint2_building_03", "xs_propint2_building_04", "xs_propint2_building_05", "xs_propint2_building_05b", "xs_propint2_building_06", "xs_propint2_building_07", "xs_propint2_building_08", "xs_propint2_building_base_01", "xs_propint2_building_base_02", "xs_propint2_building_base_03", "xs_propint2_centreline", "xs_propint2_hanging_01", "xs_propint2_path_cover_1", "xs_propint2_path_med_r", "xs_propint2_path_short_r", "xs_propint2_platform_01", "xs_propint2_platform_02", "xs_propint2_platform_03", "xs_propint2_platform_cover_1", "xs_propint2_ramp_large", "xs_propint2_ramp_large_2", "xs_propint2_set_scifi_01", "xs_propint2_set_scifi_01_ems", "xs_propint2_set_scifi_02", "xs_propint2_set_scifi_02_ems",  "xs_propint2_set_scifi_04", "xs_propint2_set_scifi_04_ems", "xs_propint2_set_scifi_05", "xs_propint2_set_scifi_05_ems", "xs_propint2_set_scifi_06", "xs_propint2_set_scifi_06_ems", "xs_propint2_set_scifi_07", "xs_propint2_set_scifi_07_ems", "xs_propint2_set_scifi_08", "xs_propint2_set_scifi_08_ems", "xs_propint2_set_scifi_09", "xs_propint2_set_scifi_09_ems", "xs_propint2_set_scifi_10", "xs_propint2_set_scifi_10_ems", "xs_propint2_stand_01", "xs_propint2_stand_01_ring", "xs_propint2_stand_02", "xs_propint2_stand_02_ring", "xs_propint2_stand_03", "xs_propint2_stand_03_ring", "xs_propint2_stand_thick_01", "xs_propint2_stand_thick_01_ring", "xs_propint2_stand_thin_01", "xs_propint2_stand_thin_01_ring", "xs_propint2_stand_thin_02", "xs_propint2_stand_thin_02_ring", "xs_propint2_stand_thin_03", "xs_propint3_set_waste_03_licencep", "xs_propint3_waste_01_bottles", "xs_propint3_waste_01_garbage_a", "xs_propint3_waste_01_garbage_b", "xs_propint3_waste_01_jumps", "xs_propint3_waste_01_neon", "xs_propint3_waste_01_plates", "xs_propint3_waste_01_rim", "xs_propint3_waste_01_statues", "xs_propint3_waste_01_trees", "xs_propint3_waste_02_garbage_a", "xs_propint3_waste_02_garbage_b", "xs_propint3_waste_02_garbage_c", "xs_propint3_waste_02_plates", "xs_propint3_waste_02_rims", "xs_propint3_waste_02_statues", "xs_propint3_waste_02_tires", "xs_propint3_waste_02_trees", "xs_propint3_waste_03_bikerim", "xs_propint3_waste_03_bluejump", "xs_propint3_waste_03_firering", "xs_propint3_waste_03_mascottes", "xs_propint3_waste_03_redjump", "xs_propint3_waste_03_siderim", "xs_propint3_waste_03_tirerim", "xs_propint3_waste_03_tires", "xs_propint3_waste_03_trees", "xs_propint3_waste_04_firering", "xs_propint3_waste_04_rims", "xs_propint3_waste_04_statues", "xs_propint3_waste_04_tires", "xs_propint3_waste_04_trees", "xs_propint3_waste_05_goals", "xs_propint3_waste_05_tires", "xs_propint3_waste04_wall", "xs_propint4_waste_06_burgers", "xs_propint4_waste_06_garbage", "xs_propint4_waste_06_neon", "xs_propint4_waste_06_plates", "xs_propint4_waste_06_rim", "xs_propint4_waste_06_statue", "xs_propint4_waste_06_tire", "xs_propint4_waste_06_trees", "xs_propint4_waste_07_licence", "xs_propint4_waste_07_neon", "xs_propint4_waste_07_props", "xs_propint4_waste_07_props02", "xs_propint4_waste_07_rims", "xs_propint4_waste_07_statue_team", "xs_propint4_waste_07_tires", "xs_propint4_waste_07_trees", "xs_propint4_waste_08_garbage", "xs_propint4_waste_08_plates", "xs_propint4_waste_08_rim", "xs_propint4_waste_08_statue", "xs_propint4_waste_08_trees", "xs_propint4_waste_09_bikerim", "xs_propint4_waste_09_cans", "xs_propint4_waste_09_intube", "xs_propint4_waste_09_lollywall", "xs_propint4_waste_09_loops", "xs_propint4_waste_09_rim", "xs_propint4_waste_09_tire", "xs_propint4_waste_09_trees", "xs_propint4_waste_10_garbage", "xs_propint4_waste_10_plates", "xs_propint4_waste_10_statues", "xs_propint4_waste_10_tires", "xs_propint4_waste_10_trees", "xs_propint5_waste_01_ground", "xs_propint5_waste_01_ground_d", "xs_propint5_waste_02_ground", "xs_propint5_waste_02_ground_d", "xs_propint5_waste_03_ground", "xs_propint5_waste_03_ground_d", "xs_propint5_waste_04_ground", "xs_propint5_waste_04_ground_d", "xs_propint5_waste_05_ground", "xs_propint5_waste_05_ground_d", "xs_propint5_waste_05_ground_line", "xs_propint5_waste_07_ground", "xs_propint5_waste_07_ground_d", "xs_propint5_waste_08_ground", "xs_propint5_waste_08_ground_d", "xs_propint5_waste_09_ground", "xs_propint5_waste_09_ground_cut", "xs_propint5_waste_09_ground_d", "xs_propint5_waste_10_ground", "xs_propint5_waste_10_ground_d", "xs_propint5_waste_border", "xs_propintarena_bulldozer", "xs_propintarena_edge_wrap_01a", "xs_propintarena_edge_wrap_01b", "xs_propintarena_edge_wrap_01c", "xs_propintarena_lamps_01a", "xs_propintarena_lamps_01b", "xs_propintarena_lamps_01c", "xs_propintarena_pit_high", "xs_propintarena_pit_low", "xs_propintarena_pit_mid", "xs_propintarena_speakers_01a", "xs_propintarena_structure_c_01a", "xs_propintarena_structure_c_01ald", "xs_propintarena_structure_c_01b", "xs_propintarena_structure_c_01bld", "xs_propintarena_structure_c_01c", "xs_propintarena_structure_c_02a", "xs_propintarena_structure_c_02ald", "xs_propintarena_structure_c_02b", "xs_propintarena_structure_c_02c", "xs_propintarena_structure_c_03a", "xs_propintarena_structure_c_04a", "xs_propintarena_structure_c_04b", "xs_propintarena_structure_c_04c", "xs_propintarena_structure_f_01a", "xs_propintarena_structure_f_02a", "xs_propintarena_structure_f_02b", "xs_propintarena_structure_f_02c", "xs_propintarena_structure_f_02d","xs_propintarena_structure_f_03a", "xs_propintarena_structure_f_03b", "xs_propintarena_structure_f_03c", "xs_propintarena_structure_f_03d", "xs_propintarena_structure_f_03e", "xs_propintarena_structure_guide", "xs_propintarena_structure_l_01a", "xs_propintarena_structure_l_02a", "xs_propintarena_structure_l_03a", "xs_propintarena_structure_s_01a", "xs_propintarena_structure_s_01ald", "xs_propintarena_structure_s_01amc", "xs_propintarena_structure_s_02a", "xs_propintarena_structure_s_02ald", "xs_propintarena_structure_s_02b", "xs_propintarena_structure_s_03a", "xs_propintarena_structure_s_03ald", "xs_propintarena_structure_s_04a", "xs_propintarena_structure_s_04ald", "xs_propintarena_structure_s_05a", "xs_propintarena_structure_s_05ald", "xs_propintarena_structure_s_05b", "xs_propintarena_structure_s_06a", "xs_propintarena_structure_s_06b", "xs_propintarena_structure_s_06c", "xs_propintarena_structure_s_07a", "xs_propintarena_structure_s_07ald", "xs_propintarena_structure_s_07b", "xs_propintarena_structure_s_08a", "xs_propintarena_structure_t_01a", "xs_propintarena_structure_t_01b", "xs_propintarena_tiptruck", "xs_propintarena_wall_no_pit", "xs_propintxmas_clubdance_2018", "xs_propintxmas_cluboffice_2018", "xs_propintxmas_terror_2018", "xs_propintxmas_tree_2018", "xs_propintxmas_vip_decs", "xs_staircolhelper", "xs_terrain_dyst_ground_04", "xs_terrain_dyst_ground_07", "xs_terrain_dyst_rocks_04", "xs_terrain_dystopian_03", "xs_terrain_dystopian_08", "xs_terrain_dystopian_12", "xs_terrain_dystopian_17", "xs_terrain_plant_arena_01_01", "xs_terrain_plant_arena_01_02", "xs_terrain_prop_weeddry_nxg01", "xs_terrain_prop_weeddry_nxg02", "xs_terrain_prop_weeddry_nxg02b", "xs_terrain_prop_weeddry_nxg03", "xs_terrain_prop_weeddry_nxg04", "xs_terrain_rock_arena_1_01", "xs_terrain_rockline_arena_1_01", "xs_terrain_rockline_arena_1_02", "xs_terrain_rockline_arena_1_03", "xs_terrain_rockline_arena_1_04", "xs_terrain_rockline_arena_1_05", "xs_terrain_rockline_arena_1_06", "xs_terrain_rockpile_1_01_small", "xs_terrain_rockpile_1_02_small", "xs_terrain_rockpile_1_03_small", "xs_terrain_rockpile_arena_1_01", "xs_terrain_rockpile_arena_1_02", "xs_terrain_rockpile_arena_1_03", "xs_terrain_set_dyst_01_grnd", "xs_terrain_set_dyst_02_detail", "xs_terrain_set_dystopian_02", "xs_terrain_set_dystopian_05", "xs_terrain_set_dystopian_05_line", "xs_terrain_set_dystopian_06", "xs_terrain_set_dystopian_09", "xs_terrain_set_dystopian_10", "xs_wasteland_pitstop", "xs_wasteland_pitstop_aniem", "xs_x18intvip_vip_light_dummy", "trinklet_bag01x", "trinklet_cup01x", "vw_prop_vw_casino_door_01d", "vw_prop_vw_casino_door_02a", "vw_prop_vw_casino_door_r_02a", "vw_prop_vw_casino_podium_01a", "vw_prop_vw_champ_closed", "vw_prop_vw_champ_cool", "vw_prop_vw_champ_open", "vw_prop_vw_chips_bag_01a", "vw_prop_vw_chips_pile_01a", "vw_prop_vw_chips_pile_02a", "vw_prop_vw_chips_pile_03a", "vw_prop_vw_cinema_tv_01", "vw_prop_vw_club_char_02a", "vw_prop_vw_club_char_03a", "vw_prop_vw_club_char_04a", "vw_prop_vw_club_char_05a", "vw_prop_vw_club_char_06a", "vw_prop_vw_club_char_07a", "vw_prop_vw_club_char_08a", "vw_prop_vw_club_char_09a", "vw_prop_vw_club_char_10a", "vw_prop_vw_club_char_a_a", "vw_prop_vw_club_char_j_a", "vw_prop_vw_club_char_k_a", "vw_prop_vw_club_char_q_a", "vw_prop_vw_coin_01a", "vw_prop_vw_colle_alien", "vw_prop_vw_colle_beast", "vw_prop_vw_colle_imporage", "vw_prop_vw_colle_pogo", "vw_prop_vw_colle_prbubble", "vw_prop_vw_colle_rsrcomm", "vw_prop_vw_colle_rsrgeneric", "vw_prop_vw_colle_sasquatch", "vw_prop_vw_crate_01a", "vw_prop_vw_crate_02a", "vw_prop_vw_dia_char_02a", "vw_prop_vw_dia_char_03a", "vw_prop_vw_dia_char_04a", "vw_prop_vw_dia_char_05a", "vw_prop_vw_dia_char_06a", "vw_prop_vw_dia_char_07a", "vw_prop_vw_dia_char_08a", "vw_prop_vw_dia_char_09a", "vw_prop_vw_dia_char_10a", "vw_prop_vw_dia_char_a_a", "vw_prop_vw_dia_char_j_a", "vw_prop_vw_dia_char_k_a", "vw_prop_vw_dia_char_q_a", "vw_prop_vw_door_bath_01a", "vw_prop_vw_door_dd_01a", "vw_prop_vw_door_ddl_01a", "vw_prop_vw_door_lounge_01a", "vw_prop_vw_door_sd_01a", "vw_prop_vw_door_slide_01a", "vw_prop_vw_elecbox_01a", "vw_prop_vw_ex_pe_01a", "vw_prop_vw_garage_coll_01a", "vw_prop_vw_garagedoor_01a", "vw_prop_vw_headset_01a", "vw_prop_vw_hrt_char_02a", "vw_prop_vw_hrt_char_03a", "vw_prop_vw_hrt_char_04a", "vw_prop_vw_hrt_char_05a", "vw_prop_vw_hrt_char_06a", "vw_prop_vw_hrt_char_07a", "vw_prop_vw_hrt_char_08a", "vw_prop_vw_hrt_char_09a", "vw_prop_vw_hrt_char_10a", "vw_prop_vw_hrt_char_a_a", "vw_prop_vw_hrt_char_j_a", "vw_prop_vw_hrt_char_k_a", "vw_prop_vw_hrt_char_q_a", "vw_prop_vw_ice_bucket_01a", "vw_prop_vw_ice_bucket_02a", "vw_prop_vw_jackpot_off", "vw_prop_vw_jackpot_on", "vw_prop_vw_jo_char_01a", "vw_prop_vw_jo_char_02a", "vw_prop_vw_key_cabinet_01a", "vw_prop_vw_key_card_01a", "vw_prop_vw_lamp_01", "vw_prop_vw_lrggate_05a", "vw_prop_vw_luckylight_off", "vw_prop_vw_luckylight_on", "vw_prop_vw_luckywheel_01a", "vw_prop_vw_lux_card_01a", "vw_prop_vw_marker_01a", "vw_prop_vw_marker_02a", "vw_prop_vw_monitor_01", "vw_prop_vw_offchair_01", "vw_prop_vw_offchair_02", "vw_prop_vw_offchair_03", "vw_prop_vw_panel_off_door_01", "vw_prop_vw_panel_off_frame_01", "vw_prop_vw_ped_business_01a", "vw_prop_vw_ped_epsilon_01a", "vw_prop_vw_ped_hillbilly_01a", "vw_prop_vw_ped_hooker_01a", "vw_prop_vw_plant_int_03a", "vw_prop_vw_planter_01", "vw_prop_vw_planter_02", "vw_prop_vw_player_01a", "vw_prop_vw_pogo_gold_01a", "vw_prop_vw_radiomast_01a", "vw_prop_vw_roof_door_01a", "vw_prop_vw_roof_door_02a", "vw_prop_vw_safedoor_office2a_l", "vw_prop_vw_safedoor_office2a_r", "vw_prop_vw_slot_wheel_04a", "vw_prop_vw_slot_wheel_04b", "vw_prop_vw_slot_wheel_08a", "vw_prop_vw_slot_wheel_08b", "vw_prop_vw_spd_char_02a", "vw_prop_vw_spd_char_03a", "vw_prop_vw_spd_char_04a", "vw_prop_vw_spd_char_05a", "vw_prop_vw_spd_char_06a", "vw_prop_vw_spd_char_07a", "vw_prop_vw_spd_char_08a", "vw_prop_vw_spd_char_09a", "vw_prop_vw_spd_char_10a", "vw_prop_vw_spd_char_a_a", "vw_prop_vw_spd_char_j_a", "vw_prop_vw_spd_char_k_a", "vw_prop_vw_spd_char_q_a", "vw_prop_vw_table_casino_short_01", "vw_prop_vw_table_casino_short_02", "vw_prop_vw_table_casino_tall_01", "vw_prop_vw_trailer_monitor_01", "vw_prop_vw_tray_01a", "vw_prop_vw_trolly_01a", "vw_prop_vw_tv_rt_01a", "vw_prop_vw_v_blueprt_01a", "vw_prop_vw_v_brochure_01a", "vw_prop_vw_valet_01a", "vw_prop_vw_wallart_01a", "vw_prop_vw_wallart_02a", "vw_prop_vw_wallart_03a", "vw_prop_vw_wallart_04a", "vw_prop_vw_wallart_05a", "vw_prop_vw_wallart_06a", "vw_prop_vw_wallart_07a", "vw_prop_vw_wallart_08a", "vw_prop_vw_wallart_09a", "vw_prop_vw_wallart_10a", "vw_prop_vw_wallart_11a", "vw_prop_vw_wallart_12a", "vw_prop_vw_wallart_14a", "vw_prop_vw_wallart_15a", "vw_prop_vw_wallart_16a", "vw_prop_vw_wallart_17a", "vw_prop_vw_wallart_18a", "vw_prop_vw_wallart_19a", "vw_prop_vw_wallart_20a", "vw_prop_vw_wallart_21a", "vw_prop_vw_wallart_22a", "vw_prop_vw_wallart_23a", "vw_prop_vw_wallart_24a", "vw_prop_vw_wallart_25a", "vw_prop_vw_wallart_26a", "vw_prop_vw_wallart_28a", "vw_prop_vw_wallart_29a", "vw_prop_vw_wallart_30a", "vw_prop_vw_wallart_31a", "vw_prop_vw_wallart_32a", "vw_prop_vw_wallart_33a", "vw_prop_vw_wallart_34a", "vw_prop_vw_wallart_35a", "vw_prop_vw_wallart_36a", "vw_prop_vw_wallart_37a", "vw_prop_vw_wallart_38a", "vw_prop_vw_wallart_39a", "vw_prop_vw_wallart_40a", "vw_prop_vw_wallart_41a", "vw_prop_vw_wallart_42a", "vw_prop_vw_wallart_43a", "vw_prop_vw_wallart_44a", "vw_prop_vw_wallart_46a", "vw_prop_vw_wallart_47a", "vw_prop_vw_wallart_48a", "vw_prop_vw_wallart_49a", "vw_prop_vw_wallart_50a", "vw_prop_vw_wallart_51a", "vw_prop_vw_wallart_52a", "vw_prop_vw_wallart_53a", "vw_prop_vw_wallart_54a_01a", "vw_prop_vw_wallart_55a", "vw_prop_vw_wallart_56a", "vw_prop_vw_wallart_57a", "vw_prop_vw_wallart_58a", "vw_prop_vw_wallart_59a", "vw_prop_vw_wallart_60a", "vw_prop_vw_wallart_61a", "vw_prop_vw_wallart_62a", "vw_prop_vw_wallart_63a", "vw_prop_vw_wallart_64a", "vw_prop_vw_wallart_65a", "vw_prop_vw_wallart_66a", "vw_prop_vw_wallart_67a", "vw_prop_vw_wallart_68a", "vw_prop_vw_wallart_69a", "vw_prop_vw_wallart_70a", "vw_prop_vw_wallart_71a", "vw_prop_vw_wallart_72a", "vw_prop_vw_wallart_73a", "vw_prop_vw_wallart_74a", "vw_prop_vw_wallart_75a", "vw_prop_vw_wallart_76a", "vw_prop_vw_wallart_77a", "vw_prop_vw_wallart_78a", "vw_prop_vw_wallart_79a", "vw_prop_vw_wallart_80a", "vw_prop_vw_wallart_81a", "vw_prop_vw_wallart_82a", "vw_prop_vw_wallart_83a", "vw_prop_vw_wallart_84a", "vw_prop_vw_wallart_85a", "vw_prop_vw_wallart_86a", "vw_prop_vw_wallart_87a", "vw_prop_vw_wallart_88a", "vw_prop_vw_wallart_89a", "vw_prop_vw_wallart_90a", "vw_prop_vw_wallart_91a", "vw_prop_vw_wallart_92a", "vw_prop_vw_wallart_93a", "vw_prop_vw_wallart_94a", "vw_prop_vw_wallart_95a", "vw_prop_vw_wallart_96a", "vw_prop_vw_wallart_97a", "vw_prop_vw_wallart_98a", "vw_prop_vw_wallart_99a", "vw_prop_vw_wallart_100a", "vw_prop_vw_wallart_101a", "vw_prop_vw_wallart_102a", "vw_prop_vw_wallart_103a", "vw_prop_vw_wallart_104a", "vw_prop_vw_wallart_105a", "vw_prop_vw_wallart_106a", "vw_prop_vw_wallart_107a", "vw_prop_vw_wallart_108a", "vw_prop_vw_wallart_109a", "vw_prop_vw_wallart_110a", "vw_prop_vw_wallart_111a", "vw_prop_vw_wallart_112a", "vw_prop_vw_wallart_113a", "vw_prop_vw_wallart_114a", "vw_prop_vw_wallart_115a", "vw_prop_vw_wallart_116a", "vw_prop_vw_wallart_117a", "vw_prop_vw_wallart_118a", "vw_prop_vw_wallart_123a", "vw_prop_vw_wallart_124a", "vw_prop_vw_wallart_125a", "vw_prop_vw_wallart_126a", "vw_prop_vw_wallart_127a", "vw_prop_vw_wallart_128a", "vw_prop_vw_wallart_129a", "vw_prop_vw_wallart_130a", "vw_prop_vw_wallart_131a", "vw_prop_vw_wallart_132a", "vw_prop_vw_wallart_133a", "vw_prop_vw_wallart_134a", "vw_prop_vw_wallart_135a", "vw_prop_vw_wallart_136a", "vw_prop_vw_wallart_137a", "vw_prop_vw_wallart_138a", "vw_prop_vw_wallart_139a", "vw_prop_vw_wallart_140a", "vw_prop_vw_wallart_141a", "vw_prop_vw_wallart_142a", "vw_prop_vw_wallart_143a", "vw_prop_vw_wallart_144a", "vw_prop_vw_wallart_145a", "vw_prop_vw_wallart_146a", "vw_prop_vw_wallart_147a", "vw_prop_vw_wallart_150a", "vw_prop_vw_wallart_151a", "vw_prop_vw_wallart_151b", "vw_prop_vw_wallart_151c", "vw_prop_vw_wallart_151d", "vw_prop_vw_wallart_151e", "vw_prop_vw_wallart_151f", "vw_prop_vw_wallart_152a", "vw_prop_vw_wallart_153a", "vw_prop_vw_wallart_154a", "vw_prop_vw_wallart_155a", "vw_prop_vw_wallart_156a", "vw_prop_vw_wallart_157a", "vw_prop_vw_wallart_158a", "vw_prop_vw_wallart_159a", "vw_prop_vw_wallart_160a", "vw_prop_vw_wallart_161a", "vw_prop_vw_wallart_162a", "vw_prop_vw_wallart_163a", "vw_prop_vw_wallart_164a", "vw_prop_vw_wallart_165a", "vw_prop_vw_wallart_166a", "vw_prop_vw_wallart_167a", "vw_prop_vw_wallart_168a", "vw_prop_vw_wallart_169a", "vw_prop_vw_wallart_170a", "vw_prop_vw_wallart_171a", "vw_prop_vw_wallart_172a", "vw_prop_vw_wallart_173a", "vw_prop_vw_wallart_174a", "vw_prop_vw_watch_case_01b", "vw_prop_vw_whousedoor_01a", "vw_des_vine_casino_doors_01", "vw_des_vine_casino_doors_02", "vw_des_vine_casino_doors_03", "vw_des_vine_casino_doors_04", "vw_des_vine_casino_doors_05", "vw_des_vine_casino_doors_end", "vw_p_para_bag_vine_s", "vw_p_vw_cs_bandana_s", "vw_prop_animscreen_temp_01", "vw_prop_art_football_01a", "vw_prop_art_mic_01a", "vw_prop_art_pug_01a", "vw_prop_art_pug_01b", "vw_prop_art_pug_02a", "vw_prop_art_pug_02b", "vw_prop_art_pug_03a", "vw_prop_art_pug_03b", "vw_prop_art_resin_balls_01a", "vw_prop_art_resin_guns_01a", "vw_prop_art_wall_segment_01a", "vw_prop_art_wall_segment_02a", "vw_prop_art_wall_segment_02b", "vw_prop_art_wall_segment_03a", "vw_prop_art_wings_01a", "vw_prop_art_wings_01b", "vw_prop_book_stack_01a", "vw_prop_book_stack_01b", "vw_prop_book_stack_01c", "vw_prop_book_stack_02a", "vw_prop_book_stack_02b", "vw_prop_book_stack_02c", "vw_prop_book_stack_03a", "vw_prop_book_stack_03b", "vw_prop_book_stack_03c", "vw_prop_cas_card_club_02", "vw_prop_cas_card_club_03", "vw_prop_cas_card_club_04", "vw_prop_cas_card_club_05", "vw_prop_cas_card_club_06", "vw_prop_cas_card_club_07", "vw_prop_cas_card_club_08", "vw_prop_cas_card_club_09", "vw_prop_cas_card_club_10", "vw_prop_cas_card_club_ace", "vw_prop_cas_card_club_jack", "vw_prop_cas_card_club_king", "vw_prop_cas_card_club_queen", "vw_prop_cas_card_dia_02", "vw_prop_cas_card_dia_03", "vw_prop_cas_card_dia_04", "vw_prop_cas_card_dia_05", "vw_prop_cas_card_dia_06", "vw_prop_cas_card_dia_07", "vw_prop_cas_card_dia_08", "vw_prop_cas_card_dia_09", "vw_prop_cas_card_dia_10", "vw_prop_cas_card_dia_ace", "vw_prop_cas_card_dia_jack", "vw_prop_cas_card_dia_king", "vw_prop_cas_card_dia_queen", "vw_prop_cas_card_hrt_02", "vw_prop_cas_card_hrt_03", "vw_prop_cas_card_hrt_04", "vw_prop_cas_card_hrt_05", "vw_prop_cas_card_hrt_06", "vw_prop_cas_card_hrt_07", "vw_prop_cas_card_hrt_08", "vw_prop_cas_card_hrt_09", "vw_prop_cas_card_hrt_10", "vw_prop_cas_card_hrt_ace", "vw_prop_cas_card_hrt_jack", "vw_prop_cas_card_hrt_king", "vw_prop_cas_card_hrt_queen", "vw_prop_cas_card_spd_02", "vw_prop_cas_card_spd_03", "vw_prop_cas_card_spd_04", "vw_prop_cas_card_spd_05", "vw_prop_cas_card_spd_06", "vw_prop_cas_card_spd_07", "vw_prop_cas_card_spd_08", "vw_prop_cas_card_spd_09", "vw_prop_cas_card_spd_10", "vw_prop_cas_card_spd_ace", "vw_prop_cas_card_spd_jack", "vw_prop_cas_card_spd_king", "vw_prop_cas_card_spd_queen", "vw_prop_casino_3cardpoker_01", "vw_prop_casino_3cardpoker_01b", "vw_prop_casino_art_absman_01a", "vw_prop_casino_art_basketball_01a", "vw_prop_casino_art_basketball_02a", "vw_prop_casino_art_bird_01a", "vw_prop_casino_art_bottle_01a", "vw_prop_casino_art_bowling_01a", "vw_prop_casino_art_bowling_01b", "vw_prop_casino_art_bowling_02a", "vw_prop_casino_art_car_01a", "vw_prop_casino_art_car_02a", "vw_prop_casino_art_car_03a", "vw_prop_casino_art_car_04a", "vw_prop_casino_art_car_05a", "vw_prop_casino_art_car_06a", "vw_prop_casino_art_car_07a", "vw_prop_casino_art_car_08a", "vw_prop_casino_art_car_09a", "vw_prop_casino_art_car_10a", "vw_prop_casino_art_car_11a", "vw_prop_casino_art_car_12a", "vw_prop_casino_art_cherries_01a", "vw_prop_casino_art_concrete_01a", "vw_prop_casino_art_concrete_02a", "vw_prop_casino_art_console_01a", "vw_prop_casino_art_console_02a", "vw_prop_casino_art_deer_01a", "vw_prop_casino_art_dog_01a", "vw_prop_casino_art_egg_01a", "vw_prop_casino_art_ego_01a", "vw_prop_casino_art_figurines_01a", "vw_prop_casino_art_figurines_02a", "vw_prop_casino_art_grenade_01a", "vw_prop_casino_art_grenade_01b", "vw_prop_casino_art_grenade_01c", "vw_prop_casino_art_grenade_01d", "vw_prop_casino_art_guitar_01a", "vw_prop_casino_art_gun_01a", "vw_prop_casino_art_gun_02a", "vw_prop_casino_art_head_01a", "vw_prop_casino_art_head_01b", "vw_prop_casino_art_head_01c", "vw_prop_casino_art_head_01d", "vw_prop_casino_art_horse_01a", "vw_prop_casino_art_horse_01b", "vw_prop_casino_art_horse_01c", "vw_prop_casino_art_lampf_01a", "vw_prop_casino_art_lampm_01a", "vw_prop_casino_art_lollipop_01a", "vw_prop_casino_art_miniature_05a", "vw_prop_casino_art_miniature_05b", "vw_prop_casino_art_miniature_05c", "vw_prop_casino_art_miniature_09a", "vw_prop_casino_art_miniature_09b", "vw_prop_casino_art_miniature_09c", "vw_prop_casino_art_mod_01a", "vw_prop_casino_art_mod_02a", "vw_prop_casino_art_mod_03a", "vw_prop_casino_art_mod_03a_a", "vw_prop_casino_art_mod_03a_b", "vw_prop_casino_art_mod_03a_c", "vw_prop_casino_art_mod_03b", "vw_prop_casino_art_mod_03b_a", "vw_prop_casino_art_mod_03b_b", "vw_prop_casino_art_mod_03b_c", "vw_prop_casino_art_mod_04a", "vw_prop_casino_art_mod_04b", "vw_prop_casino_art_mod_04c", "vw_prop_casino_art_mod_05a", "vw_prop_casino_art_mod_06a", "vw_prop_casino_art_panther_01a", "vw_prop_casino_art_panther_01b", "vw_prop_casino_art_panther_01c", "vw_prop_casino_art_pill_01a", "vw_prop_casino_art_pill_01b", "vw_prop_casino_art_pill_01c", "vw_prop_casino_art_plant_01a", "vw_prop_casino_art_plant_02a", "vw_prop_casino_art_plant_03a", "vw_prop_casino_art_plant_04a", "vw_prop_casino_art_plant_05a", "vw_prop_casino_art_plant_06a", "vw_prop_casino_art_plant_07a", "vw_prop_casino_art_plant_08a", "vw_prop_casino_art_plant_09a", "vw_prop_casino_art_plant_10a", "vw_prop_casino_art_plant_11a", "vw_prop_casino_art_plant_12a", "vw_prop_casino_art_rocket_01a", "vw_prop_casino_art_sculpture_01a", "vw_prop_casino_art_sculpture_02a", "vw_prop_casino_art_sculpture_02b", "vw_prop_casino_art_sh_01a", "vw_prop_casino_art_skull_01a", "vw_prop_casino_art_skull_01b", "vw_prop_casino_art_skull_02a", "vw_prop_casino_art_skull_02b", "vw_prop_casino_art_skull_03a", "vw_prop_casino_art_skull_03b", "vw_prop_casino_art_statue_01a", "vw_prop_casino_art_statue_02a", "vw_prop_casino_art_statue_04a", "vw_prop_casino_art_v_01a", "vw_prop_casino_art_v_01b", "vw_prop_casino_art_vase_01a", "vw_prop_casino_art_vase_02a", "vw_prop_casino_art_vase_03a", "vw_prop_casino_art_vase_04a", "vw_prop_casino_art_vase_05a", "vw_prop_casino_art_vase_06a", "vw_prop_casino_art_vase_07a", "vw_prop_casino_art_vase_08a", "vw_prop_casino_art_vase_09a", "vw_prop_casino_art_vase_10a", "vw_prop_casino_art_vase_11a", "vw_prop_casino_art_vase_12a", "vw_prop_casino_blckjack_01", "vw_prop_casino_blckjack_01b", "vw_prop_casino_calc", "vw_prop_casino_cards_01", "vw_prop_casino_cards_02", "vw_prop_casino_cards_single", "vw_prop_casino_chair_01a", "vw_prop_casino_champset", "vw_prop_casino_chip_tray_01", "vw_prop_casino_chip_tray_02", "vw_prop_casino_keypad_01", "vw_prop_casino_keypad_02", "vw_prop_casino_magazine_01a", "vw_prop_casino_mediaplayer_play", "vw_prop_casino_mediaplayer_stop", "vw_prop_casino_phone_01a", "vw_prop_casino_phone_01b", "vw_prop_casino_phone_01b_handle", "vw_prop_casino_roulette_01", "vw_prop_casino_roulette_01b", "vw_prop_casino_schedule_01a", "vw_prop_casino_shopping_bag_01a", "vw_prop_casino_slot_01a", "vw_prop_casino_slot_01a_reels", "vw_prop_casino_slot_01b_reels", "vw_prop_casino_slot_02a", "vw_prop_casino_slot_02a_reels", "vw_prop_casino_slot_02b_reels", "vw_prop_casino_slot_03a", "vw_prop_casino_slot_03a_reels", "vw_prop_casino_slot_03b_reels", "vw_prop_casino_slot_04a", "vw_prop_casino_slot_04a_reels", "vw_prop_casino_slot_04b_reels", "vw_prop_casino_slot_05a", "vw_prop_casino_slot_05a_reels", "vw_prop_casino_slot_05b_reels", "vw_prop_casino_slot_06a", "vw_prop_casino_slot_06a_reels", "vw_prop_casino_slot_06b_reels", "vw_prop_casino_slot_07a", "vw_prop_casino_slot_07a_reels", "vw_prop_casino_slot_07b_reels", "vw_prop_casino_slot_08a", "vw_prop_casino_slot_08a_reels", "vw_prop_casino_slot_08b_reels", "vw_prop_casino_slot_betmax", "vw_prop_casino_slot_betone", "vw_prop_casino_slot_spin", "vw_prop_casino_stool_02a", "vw_prop_casino_till", "vw_prop_casino_track_chair_01", "vw_prop_casino_water_bottle_01a", "vw_prop_casino_wine_glass_01a", "vw_prop_casino_wine_glass_01b", "vw_prop_chip_1kdollar_st", "vw_prop_chip_1kdollar_x1", "vw_prop_chip_5kdollar_st", "vw_prop_chip_5kdollar_x1", "vw_prop_chip_10dollar_st", "vw_prop_chip_10dollar_x1", "vw_prop_chip_10kdollar_st", "vw_prop_chip_10kdollar_x1", "vw_prop_chip_50dollar_st", "vw_prop_chip_50dollar_x1", "vw_prop_chip_100dollar_st", "vw_prop_chip_100dollar_x1", "vw_prop_chip_500dollar_st", "vw_prop_chip_500dollar_x1", "vw_prop_door_country_club_01a", "vw_prop_flowers_potted_01a", "vw_prop_flowers_potted_02a", "vw_prop_flowers_potted_03a", "vw_prop_flowers_vase_01a", "vw_prop_flowers_vase_02a", "vw_prop_flowers_vase_03a", "vw_prop_garage_control_panel_01a", "vw_prop_miniature_yacht_01a", "vw_prop_miniature_yacht_01b", "vw_prop_miniature_yacht_01c", "vw_prop_notebook_01a", "vw_prop_plaq_1kdollar_x1", "vw_prop_plaq_5kdollar_st", "vw_prop_plaq_5kdollar_x1", "vw_prop_plaq_10kdollar_st", "vw_prop_plaq_10kdollar_x1", "vw_prop_plaque_01a", "vw_prop_plaque_02a", "vw_prop_plaque_02b", "vw_prop_roulette_ball", "vw_prop_roulette_marker", "vw_prop_roulette_rake", "vw_prop_toy_sculpture_01a", "vw_prop_toy_sculpture_02a", "vw_prop_vw_3card_01a", "vw_prop_vw_aircon_m_01", "vw_prop_vw_arcade_01_screen", "vw_prop_vw_arcade_01a", "vw_prop_vw_arcade_02_screen", "vw_prop_vw_arcade_02a", "vw_prop_vw_arcade_02b", "vw_prop_vw_arcade_02b_screen", "vw_prop_vw_arcade_02c", "vw_prop_vw_arcade_02c_screen", "vw_prop_vw_arcade_02d", "vw_prop_vw_arcade_02d_screen", "vw_prop_vw_arcade_03_screen", "vw_prop_vw_arcade_03a", "vw_prop_vw_arcade_03b", "vw_prop_vw_arcade_03c", "vw_prop_vw_arcade_03d", "vw_prop_vw_arcade_04_screen", "vw_prop_vw_arcade_04b_screen", "vw_prop_vw_arcade_04c_screen", "vw_prop_vw_arcade_04d_screen", "vw_prop_vw_backpack_01a", "vw_prop_vw_barrier_rope_01a", "vw_prop_vw_barrier_rope_01b", "vw_prop_vw_barrier_rope_01c", "vw_prop_vw_barrier_rope_02a", "vw_prop_vw_barrier_rope_03a", "vw_prop_vw_barrier_rope_03b", "vw_prop_vw_bblock_huge_01", "vw_prop_vw_bblock_huge_02", "vw_prop_vw_bblock_huge_03", "vw_prop_vw_bblock_huge_04", "vw_prop_vw_bblock_huge_05", "vw_prop_vw_board_01a", "vw_prop_vw_box_empty_01a", "vw_prop_vw_card_case_01a", "vw_prop_vw_casino_bin_01a", "vw_prop_vw_casino_cards_01", "vw_prop_vw_casino_door_01a", "vw_prop_vw_casino_door_01b", "vw_prop_vw_casino_door_01c", "sum_prop_track_pit_garage_04a", "sum_prop_track_pit_garage_05a", "sum_prop_yacht_showerdoor", "sum_ac_prop_container_01a", "sum_mp_apa_yacht", "sum_mp_apa_yacht_jacuzzi_cam", "sum_mp_apa_yacht_jacuzzi_ripple1", "sum_mp_apa_yacht_jacuzzi_ripple2", "sum_mp_apa_yacht_jacuzzi_ripple003", "sum_mp_apa_yacht_win", "sum_mp_h_acc_artwalll_01", "sum_mp_h_acc_artwalll_02", "sum_mp_h_acc_artwallm_02", "sum_mp_h_acc_artwallm_03", "sum_mp_h_acc_box_trinket_02", "sum_mp_h_acc_candles_02", "sum_mp_h_acc_candles_05", "sum_mp_h_acc_candles_06", "sum_mp_h_acc_dec_sculpt_01", "sum_mp_h_acc_dec_sculpt_02", "sum_mp_h_acc_dec_sculpt_03", "sum_mp_h_acc_drink_tray_02", "sum_mp_h_acc_fruitbowl_01", "sum_mp_h_acc_jar_03", "sum_mp_h_acc_vase_04", "sum_mp_h_acc_vase_05", "sum_mp_h_acc_vase_flowers_01", "sum_mp_h_acc_vase_flowers_03", "sum_mp_h_acc_vase_flowers_04", "sum_mp_h_yacht_armchair_01", "sum_mp_h_yacht_armchair_03", "sum_mp_h_yacht_armchair_04", "sum_mp_h_yacht_barstool_01", "sum_mp_h_yacht_bed_01", "sum_mp_h_yacht_bed_02", "sum_mp_h_yacht_coffee_table_01", "sum_mp_h_yacht_coffee_table_02", "sum_mp_h_yacht_floor_lamp_01", "sum_mp_h_yacht_side_table_01", "sum_mp_h_yacht_side_table_02", "sum_mp_h_yacht_sofa_01", "sum_mp_h_yacht_sofa_02", "sum_mp_h_yacht_stool_01", "sum_mp_h_yacht_strip_chair_01", "sum_mp_h_yacht_table_lamp_01", "sum_mp_h_yacht_table_lamp_02", "sum_mp_h_yacht_table_lamp_03", "sum_p_h_acc_artwalll_04", "sum_p_h_acc_artwallm_04", "sum_p_mp_yacht_bathroomdoor", "sum_p_mp_yacht_door", "sum_p_mp_yacht_door_01", "sum_p_mp_yacht_door_02", "sum_prop_ac_aircon_02a", "sum_prop_ac_alienhead_01a", "sum_prop_ac_barge_01", "sum_prop_ac_barge_col_01", "sum_prop_ac_clapperboard_01a", "sum_prop_ac_constructsign_01a", "sum_prop_ac_drinkglobe_01a", "sum_prop_ac_dustsheet_01a", "sum_prop_ac_filmreel_01a", "sum_prop_ac_grandstand_01a", "sum_prop_ac_headdress_01a", "sum_prop_ac_ind_light_02a", "sum_prop_ac_ind_light_03c", "sum_prop_ac_ind_light_04", "sum_prop_ac_long_barrier_05d", "sum_prop_ac_long_barrier_15d", "sum_prop_ac_long_barrier_30d", "sum_prop_ac_long_barrier_45d", "sum_prop_ac_long_barrier_90d", "sum_prop_ac_monstermask_01a", "sum_prop_ac_mummyhead_01a", "sum_prop_ac_papers_01a", "sum_prop_ac_pit_garage_01a", "sum_prop_ac_pit_sign_l_01a", "sum_prop_ac_pit_sign_r_01a", "sum_prop_ac_qub3d_cube_01", "sum_prop_ac_qub3d_cube_02", "sum_prop_ac_qub3d_flippedcube", "sum_prop_ac_qub3d_grid", "sum_prop_ac_qub3d_poster_01a", "sum_prop_ac_rock_01a", "sum_prop_ac_rock_01b", "sum_prop_ac_rock_01c", "sum_prop_ac_rock_01d", "sum_prop_ac_rock_01e", "sum_prop_ac_sarcophagus_01a", "sum_prop_ac_short_barrier_05d", "sum_prop_ac_short_barrier_15d", "sum_prop_ac_short_barrier_30d", "sum_prop_ac_short_barrier_45d", "sum_prop_ac_short_barrier_90d", "sum_prop_ac_tigerrug_01a", "sum_prop_ac_track_paddock_01", "sum_prop_ac_track_pit_stop_01", "sum_prop_ac_track_pit_stop_16l", "sum_prop_ac_track_pit_stop_16r", "sum_prop_ac_track_pit_stop_30l", "sum_prop_ac_track_pit_stop_30r", "sum_prop_ac_tyre_wall_lit_0l1", "sum_prop_ac_tyre_wall_lit_0r1", "sum_prop_ac_tyre_wall_lit_01", "sum_prop_ac_tyre_wall_pit_l", "sum_prop_ac_tyre_wall_pit_r", "sum_prop_ac_tyre_wall_u_l", "sum_prop_ac_tyre_wall_u_r", "sum_prop_ac_wall_light_09a", "sum_prop_ac_wall_sign_0l1", "sum_prop_ac_wall_sign_0r1", "sum_prop_ac_wall_sign_01", "sum_prop_ac_wall_sign_02", "sum_prop_ac_wall_sign_03", "sum_prop_ac_wall_sign_04", "sum_prop_ac_wall_sign_05", "sum_prop_ac_wifaaward_01a", "sum_prop_arcade_qub3d_01a", "sum_prop_arcade_qub3d_01a_scrn_uv", "sum_prop_arcade_str_bar_01a", "sum_prop_arcade_str_lightoff", "sum_prop_arcade_str_lighton", "sum_prop_arcade_strength_01a", "sum_prop_arcade_strength_ham_01a", "sum_prop_archway_01", "sum_prop_archway_02", "sum_prop_archway_03", "sum_prop_barrier_ac_bend_05d", "sum_prop_barrier_ac_bend_15d", "sum_prop_barrier_ac_bend_30d", "sum_prop_barrier_ac_bend_45d", "sum_prop_barrier_ac_bend_90d", "sum_prop_dufocore_01a", "sum_prop_hangerdoor_01a", "sum_prop_race_barrier_01_sec", "sum_prop_race_barrier_02_sec", "sum_prop_race_barrier_04_sec", "sum_prop_race_barrier_08_sec", "sum_prop_race_barrier_16_sec", "sum_prop_sum_arcade_plush_01a", "sum_prop_sum_arcade_plush_02a", "sum_prop_sum_arcade_plush_03a", "sum_prop_sum_arcade_plush_04a", "sum_prop_sum_arcade_plush_05a", "sum_prop_sum_arcade_plush_06a", "sum_prop_sum_arcade_plush_07a", "sum_prop_sum_arcade_plush_08a", "sum_prop_sum_arcade_plush_09a", "sum_prop_sum_power_cell", "sum_prop_sum_trophy_qub3d_01a", "sum_prop_sum_trophy_ripped_01a", "sum_prop_track_ac_bend_45", "sum_prop_track_ac_bend_135", "sum_prop_track_ac_bend_180d", "sum_prop_track_ac_bend_bar_45", "sum_prop_track_ac_bend_bar_135", "sum_prop_track_ac_bend_bar_180d", "sum_prop_track_ac_bend_bar_l_b", "sum_prop_track_ac_bend_bar_l_out", "sum_prop_track_ac_bend_bar_m_in", "sum_prop_track_ac_bend_bar_m_out", "sum_prop_track_ac_bend_lc", "sum_prop_track_ac_straight_bar_s", "sum_prop_track_pit_garage_02a", "sum_prop_track_pit_garage_03a", }

Absolute.Table.MapSpawner = {
    MazeBankDemolitionring = { {2475986526, -80.9087, -830.357, 325.097, -14.4264, -8.53774, 152.209, -1, 0}, {2475986526, -79.2316, -831.297, 325.108, -14.4054, 4.26887, 164.271, -1, 0}, {2475986526, -76.7563, -831.549, 325.123, -14.4263, -0, 171.818, -1, 0}, {2475986526, -74.2595, -831.691, 325.09, -14.2059, -1.06722, -176.517, -1, 0}, {2475986526, -71.9478, -831.257, 325.113, -14.4264, 2.13443, -166.006, -1, 0}, {2475986526, -69.5981, -830.542, 325.066, -14.5918, -4.26887, -155.474, -1, 0}, {2475986526, -67.4174, -829.035, 325.097, -14.4263, -4.26887, -140.651, -1, 0}, {2475986526, -65.7121, -827.409, 325.068, -14.3048, -1.70755, -130.667, -1, 0}, {2475986526, -64.2717, -825.422, 325.112, -14.4263, -0, -121.256, -1, 0}, {2475986526, -63.2876, -823.434, 325.114, -14.5345, -0, -111.446, -1, 0}, {2475986526, -62.4924, -821.128, 325.082, -14.5467, 2.13443, -102.385, -1, 0}, {2475986526, -62.233, -818.528, 325.065, -14.6184, -8.00413, -88.1861, -1, 0}, {2475986526, -62.8694, -815.926, 325.118, -14.4265, -6.4033, -76.5979, -1, 0}, {2475986526, -63.6142, -813.68, 325.112, -14.3655, 8.53774, -66.7885, -1, 0}, {2475986526, -64.9883, -811.439, 325.107, -14.4263, 1.28066, -52.8494, -1, 0}, {2475986526, -66.5913, -808.328, 325.238, -12.4517, -0, -40.3246, -1, 0}, {2475986526, -68.2603, -807.899, 325.336, -13.8689, -0, -33.062, -1, 0}, {2475986526, -71.1526, -807.598, 325.153, -12.0416, 4.26887, -28.0523, -1, 0}, {2475986526, -73.2853, -806.628, 325.151, -11.7962, -0, -19.1717, -1, 0}, {2475986526, -75.2243, -806.286, 325.164, -12.0419, -0, 1.55726, -1, 0}, {2475986526, -77.5757, -806.312, 325.088, -14.1843, -0, 12.6263, -1, 0}, {2475986526, -79.8704, -807.22, 325.143, -14.049, -4.26887, 21.4769, -1, 0}, {2475986526, -82.0222, -807.83, 325.036, -14.1422, -4.26887, 32.7605, -1, 0}, {2475986526, -83.8934, -809.424, 325.073, -14.5264, -8.53774, 46.5132, -1, 0}, {2475986526, -85.2523, -810.983, 325.043, -14.859, -0, 53.5324, -1, 0}, {2475986526, -86.5177, -813.202, 325.089, -14.5267, 4.26887, 64.6634, -1, 0}, {2475986526, -87.6645, -815.707, 325.059, -14.8589, 4.26887, 73.157, -1, 0}, {2475986526, -87.7973, -817.987, 325.119, -14.8468, -1.33402, 89.3982, -1, 0}, {2475986526, -87.5801, -821.034, 325.059, -14.8593, -0, 95.4435, -1, 0}, {2475986526, -87.2815, -822.239, 325.126, -15.6308, -4.26887, 100.311, -1, 0}, {2475986526, -86.7602, -824.03, 325.044, -15.9224, -0, 116.957, -1, 0}, {2475986526, -85.3743, -826.099, 325.136, -15.7025, 2.56132, 124.307, -1, 0}, {2475986526, -83.4737, -828.611, 325.076, -15.0688, -0, 132.538, -1, 0}, {2475986526, -87.9554, -832.877, 325.894, -14.1563, 4.26887, 132.995, -1, 0}, {2475986526, -89.3865, -831.322, 325.887, -14.1562, -0, 126.154, -1, 0}, {2475986526, -86.4247, -834.407, 325.915, -14.2701, 4.26887, 143.277, -1, 0}, {2475986526, -85.1736, -833.789, 325.653, -14.4072, -4.26887, 145.777, -1, 0}, {2475986526, -83.8118, -835.765, 326.063, -12.243, 4.26887, 151.527, -1, 0}, {2475986526, -80.7015, -837.145, 326.059, -12.3172, 2.13443, 162.332, -1, 0}, {2475986526, -77.6428, -837.649, 326.163, -10.8391, 3.20165, 171.297, -1, 0}, {2475986526, -75.479, -837.909, 326.025, -12.3172, -1.06722, 174.574, -1, 0}, {2475986526, -73.861, -837.826, 326.061, -12.3173, 5.33609, -176.632, -1, 0}, {2475986526, -70.4799, -837.265, 326.09, -12.3173, -0, -166.182, -1, 0}, {2475986526, -67.0415, -836.185, 326.018, -12.3171, -0, -156.039, -1, 0}, {2475986526, -64.8504, -834.996, 325.951, -11.5263, -0, -145.834, -1, 0}, {2475986526, -63.5702, -833.725, 326.1, -11.2947, -0, -140.961, -1, 0}, {2475986526, -60.9992, -831.419, 326.075, -11.5262, -4.26887, -130.963, -1, 0}, {2475986526, -58.9923, -828.729, 326.116, -11.5262, 4.26887, -121.973, -1, 0}, {2475986526, -57.5045, -825.626, 326.114, -11.5263, -0, -110.959, -1, 0}, {2475986526, -56.5533, -822.397, 326.08, -11.1311, -6.4033, -102, -1, 0}, {2475986526, -56.0911, -820.05, 326.049, -11.0325, 2.13443, -100.794, -1, 0}, {2475986526, -56.0681, -818.32, 326.087, -11.1312, -2.66804, -87.9469, -1, 0}, {2475986526, -56.2989, -816.237, 326.048, -11.0324, 2.13443, -83.2139, -1, 0}, {2475986526, -56.8952, -814.518, 326.142, -11.0324, -2.13443, -76.5476, -1, 0}, {2475986526, -58.1209, -811.23, 326.116, -10.9697, -0, -66.7674, -1, 0}, {2475986526, -59.0622, -809.17, 326.095, -11.0574, 4.26887, -62.782, -1, 0}, {2475986526, -60.096, -807.639, 326.119, -11.5544, -0, -52.7596, -1, 0}, {2475986526, -62.081, -805.317, 326.116, -11.1035, -0, -40.7682, -1, 0}, {2475986526, -64.1466, -804.55, 326.283, -11.1035, -0, -30.477, -1, 0}, {2475986526, -67.9795, -798.8, 326.717, -10.1561, -0, -29.3495, -1, 0}, {2475986526, -67.5734, -802.52, 326.262, -10.471, -8.53774, -31.2185, -1, 0}, {2475986526, -70.9341, -800.541, 326.198, -10.5317, -0, -20.0064, -1, 0}, {2475986526, -75.3309, -801.285, 325.849, -10.2407, -0, 1.58401, -1, 0}, {2475986526, -74.0222, -799.865, 326.177, -10.7327, -0, -5.98314, -1, 0}, {2475986526, -76.5167, -797.998, 326.32, -12.4969, -2.66804, 1.58883, -1, 0}, {2475986526, -79.2787, -800.531, 326.011, -12.9433, 4.26887, 13.0054, -1, 0}, {2475986526, -81.6721, -801.017, 325.9, -12.4601, 2.13443, 17.3792, -1, 0}, {2475986526, -83.6027, -801.744, 325.971, -12.9433, -0, 26.3052, -1, 0}, {2475986526, -85.6586, -802.789, 325.95, -12.8791, 1.28066, 32.5856, -1, 0}, {2475986526, -87.5086, -804.25, 325.978, -12.9432, 4.26887, 42.3279, -1, 0}, {2475986526, -88.9923, -805.73, 325.89, -11.9333, -4.26887, 46.0613, -1, 0}, {2475986526, -90.167, -807.318, 325.946, -13.0244, -0, 53.178, -1, 0}, {2475986526, -93.5987, -807.353, 326.343, -11.5713, 4.26887, 60.8753, -1, 0}, {2475986526, -93.5166, -813.963, 325.942, -13.4341, -4.26887, 73.0256, -1, 0}, {2475986526, -92.121, -810.584, 325.996, -13.4339, -4.26887, 64.9353, -1, 0}, {2475986526, -93.9931, -815.866, 325.924, -13.0519, -0, 79.5966, -1, 0}, {2475986526, -93.8716, -817.904, 325.988, -13.4339, -0, 88.8361, -1, 0}, {2475986526, -93.7912, -821.777, 325.946, -13.6946, -2.66804, 91.1427, -1, 0}, {2475986526, -93.2951, -823.554, 325.966, -13.157, -0, 101.424, -1, 0}, {2475986526, -92.5757, -827.033, 325.87, -13.5323, -0, 104.668, -1, 0}, {2475986526, -91.53, -828.342, 325.842, -14.1563, 4.26887, 120.328, -1, 0}, {2475986526, -90.5203, -829.611, 325.936, -14.1563, -0, 124.573, -1, 0}, {2475986526, -95.5355, -833.068, 327.049, -9.63525, 1.70755, 124.512, -1, 0}, {2475986526, -94.2445, -835.1, 326.976, -9.27617, -1.28066, 128.396, -1, 0}, {2475986526, -92.513, -837.087, 327.008, -9.63523, -4.26887, 132.871, -1, 0}, {2475986526, -90.07, -839.341, 327.025, -9.63574, 4.26887, 143.545, -1, 0}, {2475986526, -86.7336, -841.135, 327.284, -9.63566, -0, 150.983, -1, 0}, {2475986526, -84.8343, -842.167, 327.254, -9.36742, -4.26887, 152.377, -1, 0}, {2475986526, -90.0883, -842.661, 327.589, -7.98782, -8.53774, 146.409, -1, 0}, {2475986526, -82.595, -843.001, 327.277, -9.6352, -0, 161.654, -1, 0}, {2475986526, -80.8027, -843.618, 327.263, -9.36755, -2.13443, 165.215, -1, 0}, {2475986526, -78.5619, -843.703, 327.458, -9.63545, -2.13443, 171.015, -1, 0}, {2475986526, -76.2479, -844.026, 327.261, -9.36765, 1.06722, 175.986, -1, 0}, {2475986526, -73.5382, -843.999, 327.285, -9.6355, -0, -177.212, -1, 0}, {2475986526, -71.2047, -843.988, 327.3, -9.36764, -1.06722, -172.013, -1, 0}, {2475986526, -69.036, -843.266, 327.309, -9.63525, 4.26887, -166.686, -1, 0}, {2475986526, -67.2981, -840.996, 326.756, -9.37509, -2.13443, -159.014, -1, 0}, {2475986526, -66.7067, -842.714, 327.222, -9.37501, 2.13443, -159.27, -1, 0}, {2475986526, -64.5693, -841.792, 327.24, -9.63515, 4.26887, -156.16, -1, 0}, {2475986526, -61.8874, -840.436, 327.231, -9.37483, 4.26887, -146.534, -1, 0}, {2475986526, -59.7118, -838.501, 327.384, -9.63533, -0, -141.372, -1, 0}, {2475986526, -57.9491, -837.16, 327.309, -9.37471, 4.26887, -135.839, -1, 0}, {2475986526, -56.3494, -835.471, 327.34, -9.63578, 4.26887, -131.675, -1, 0}, {2475986526, -54.9387, -833.93, 327.334, -9.37482, -0, -127.887, -1, 0}, {2475986526, -53.727, -832.032, 327.367, -9.63521, -4.26887, -122.142, -1, 0}, {2475986526, -52.5928, -830.077, 327.332, -9.37496, -0, -116.843, -1, 0}, {2475986526, -51.7552, -827.819, 327.385, -9.63569, 6.4033, -111.077, -1, 0}, {2475986526, -51.0061, -825.839, 327.369, -9.37494, 4.26887, -107.054, -1, 0}, {2475986526, -50.5468, -823.622, 327.378, -9.63572, 4.26887, -101.598, -1, 0}, {2475986526, -50.0992, -820.896, 327.345, -9.47333, -1.06722, -95.7976, -1, 0}, {2475986526, -49.9295, -818.102, 327.381, -9.63531, -8.00413, -88.2146, -1, 0}, {2475986526, -50.1895, -815.816, 327.358, -9.4734, -0, -82.8649, -1, 0}, {2475986526, -50.9164, -813.132, 327.442, -9.63524, 2.13443, -76.865, -1, 0}, {2475986526, -51.1585, -811.568, 327.373, -9.58574, -0, -69.3402, -1, 0}, {2475986526, -52.0622, -809.533, 327.354, -9.63541, 2.13443, -65.7624, -1, 0}, {2475986526, -53.4048, -806.624, 327.376, -9.63526, 2.13443, -65.3971, -1, 0}, {2475986526, -55.2978, -803.815, 327.389, -9.63524, 4.26887, -52.2107, -1, 0}, {2475986526, -56.5179, -802.266, 327.366, -9.51013, 4.26887, -50.6537, -1, 0}, {2475986526, -57.9995, -800.68, 327.42, -9.6353, 1.28066, -41.7027, -1, 0}, {2475986526, -61.0278, -799.404, 327.549, -9.63516, 8.53774, -31.016, -1, 0}, {2475986526, -64.37, -797.284, 327.603, -9.6351, -0, -31.6732, -1, 0}, {2475986526, -66.3998, -795.965, 327.526, -9.42422, 8.53773, -29.018, -1, 0}, {2475986526, -68.8079, -794.744, 327.535, -9.63558, -2.13443, -20.0341, -1, 0}, {2475986526, -72.1225, -793.825, 327.497, -9.57894, -2.13443, -12.2336, -1, 0}, {2475986526, -75.6415, -795.169, 327.2, -9.63555, -1.60083, 2.8097, -1, 0}, {2475986526, -77.9613, -794.235, 327.223, -8.9769, -5.33608, 4.53814, -1, 0}, {2475986526, -75.3695, -789.507, 328.306, -8.84722, -8.33763, -0.0879073, -1, 0}, {2475986526, -80.6908, -794.505, 327.217, -9.63537, 4.26887, 13.0745, -1, 0}, {2475986526, -83.5673, -795.148, 327.101, -9.92985, 2.13443, 17.5819, -1, 0}, {2475986526, -86.3087, -796.203, 327.177, -9.63542, -4.26887, 25.9296, -1, 0}, {2475986526, -88.9655, -797.634, 327.118, -9.92994, -4.26887, 33.0571, -1, 0}, {2475986526, -91.6251, -799.702, 327.176, -9.63539, -0, 42.2513, -1, 0}, {2475986526, -93.414, -801.299, 327.124, -9.92995, -0, 48.7085, -1, 0}, {2475986526, -95.1453, -803.637, 327.147, -9.63537, -8.53774, 53.6544, -1, 0}, {2475986526, -96.5885, -805.701, 327.144, -9.8947, -0, 60.5096, -1, 0}, {2475986526, -97.6945, -807.971, 327.174, -9.63569, 4.26887, 64.7568, -1, 0}, {2475986526, -98.7075, -809.885, 327.026, -8.13758, -0, 67.8881, -1, 0}, {2475986526, -99.394, -812.176, 327.105, -9.63525, -4.26887, 73.0223, -1, 0}, {2475986526, -100.025, -814.868, 327.097, -9.97277, 2.13443, 83.1537, -1, 0}, {2475986526, -100.012, -817.789, 327.15, -9.63535, -1.33402, 88.8234, -1, 0}, {2475986526, -100.069, -819.76, 327.099, -9.95297, -1.33402, 90.8729, -1, 0}, {2475986526, -99.969, -821.91, 327.11, -9.63541, -2.66804, 91.5501, -1, 0}, {2475986526, -99.3358, -824.801, 327.138, -9.63539, 2.13443, 101.678, -1, 0}, {2475986526, -98.5443, -828.598, 327.033, -9.63553, -0, 104.64, -1, 0}, {2475986526, -97.0896, -831.054, 326.937, -10.0741, 4.26887, 118.72, -1, 0}, {2475986526, -102.435, -833.952, 328.506, -5.26399, -0, 118.502, -1, 0}, {2475986526, -103.536, -831.932, 328.513, -5.42142, 4.26887, 111.099, -1, 0}, {2475986526, -100.644, -836.571, 328.636, -5.26398, -0, 124.006, -1, 0}, {2475986526, -99.0448, -838.912, 328.589, -5.26395, -2.13443, 128.175, -1, 0}, {2475986526, -96.9401, -841.184, 328.589, -5.26384, -2.13443, 132.615, -1, 0}, {2475986526, -95.4409, -842.718, 328.551, -5.01006, -2.13443, 136.57, -1, 0}, {2475986526, -93.6584, -844.231, 328.606, -5.26388, -0, 143.429, -1, 0}, {2475986526, -92.1044, -845.82, 328.655, -5.01307, -2.13443, 147.428, -1, 0}, {2475986526, -89.6061, -846.328, 328.851, -5.26389, -0, 150.62, -1, 0}, {2475986526, -87.5884, -847.552, 328.829, -5.6777, -0, 153.36, -1, 0}, {2475986526, -84.5215, -848.802, 328.867, -5.26405, 5.33608, 161.164, -1, 0}, {2475986526, -81.9779, -849.605, 328.821, -5.67769, 1.06722, 166.961, -1, 0}, {2475986526, -79.5282, -849.717, 329.046, -5.26392, 1.06722, 170.517, -1, 0}, {2475986526, -76.7555, -850.113, 328.885, -4.93224, 2.66804, 175.995, -1, 0}, {2475986526, -73.2336, -850.06, 328.883, -5.26397, -0, -177.431, -1, 0}, {2475986526, -70.4067, -849.836, 328.854, -4.82287, -5.33608, -172.2, -1, 0}, {2475986526, -67.6252, -849.166, 328.911, -5.26394, -0, -166.741, -1, 0}, {2475986526, -64.6525, -848.331, 328.792, -4.82267, -2.13443, -160.74, -1, 0}, {2475986526, -62.1086, -847.355, 328.837, -5.26389, 2.13443, -156.346, -1, 0}, {2475986526, -60.2755, -846.895, 328.808, -5.97307, -2.13443, -151.031, -1, 0}, {2475986526, -58.5152, -845.543, 328.833, -5.26392, 1.06722, -147.129, -1, 0}, {2475986526, -55.9339, -843.258, 328.987, -5.26394, 2.13443, -141.8, -1, 0}, {2475986526, -53.6636, -841.564, 328.905, -5.18348, -0, -136.192, -1, 0}, {2475986526, -51.8013, -839.526, 328.926, -5.26393, -2.13443, -131.788, -1, 0}, {2475986526, -49.9112, -837.51, 328.916, -5.18352, -8.53774, -125.894, -1, 0}, {2475986526, -48.5833, -835.261, 328.968, -5.26388, 2.13443, -122.598, -1, 0}, {2475986526, -47.1369, -832.806, 328.936, -5.18352, -0, -117.146, -1, 0}, {2475986526, -46.1092, -830.019, 328.985, -5.26389, -0, -111.097, -1, 0}, {2475986526, -45.2549, -827.659, 328.957, -5.18353, -1.06722, -105.915, -1, 0}, {2475986526, -44.5598, -824.856, 328.973, -5.26387, -0, -101.582, -1, 0}, {2475986526, -44.0346, -821.522, 328.953, -5.26387, 5.33608, -95.978, -1, 0}, {2475986526, -43.8673, -817.92, 328.98, -5.26387, -4.00206, -88.1556, -1, 0}, {2475986526, -44.1983, -815.072, 328.956, -5.26387, -0, -82.8806, -1, 0}, {2475986526, -45.0463, -811.788, 329.021, -5.26392, -0, -77.2513, -1, 0}, {2475986526, -45.6154, -809.566, 328.95, -5.25705, -2.13443, -72.2094, -1, 0}, {2475986526, -46.5685, -807.149, 328.929, -5.26395, -2.13443, -66.9958, -1, 0}, {2475986526, -47.9752, -804.122, 328.959, -5.26398, -0, -65.1505, -1, 0}, {2475986526, -49.0785, -802.078, 328.914, -5.31539, 4.26887, -57.7224, -1, 0}, {2475986526, -50.5092, -800.141, 328.99, -5.26406, -0, -52.4683, -1, 0}, {2475986526, -52.041, -798.134, 329.001, -5.31536, -2.13443, -49.2493, -1, 0}, {2475986526, -53.8808, -796.134, 329.041, -5.26389, -0, -42.3308, -1, 0}, {2475986526, -55.4375, -794.682, 329.045, -5.32055, 2.13443, -37.3601, -1, 0}, {2475986526, -57.7537, -794.2, 329.16, -5.26393, 2.13443, -32.2267, -1, 0}, {2475986526, -61.0299, -792.042, 329.172, -5.26389, -2.13443, -32.1174, -1, 0}, {2475986526, -63.5163, -790.736, 329.085, -5.04535, -4.26887, -29.2933, -1, 0}, {2475986526, -64.7324, -789.882, 329.081, -4.987, -2.13443, -27.7917, -1, 0}, {2475986526, -66.7775, -788.94, 329.155, -5.04558, 1.06722, -19.5666, -1, 0}, {2475986526, -68.6555, -788.272, 329.103, -5.30654, 3.20165, -16.9146, -1, 0}, {2475986526, -70.8259, -787.837, 329.128, -5.04546, 1.06722, -12.2941, -1, 0}, {2475986526, -74.5572, -787.022, 329.08, -4.61724, 1.06722, -10.7316, -1, 0}, {2475986526, -75.8754, -788.646, 328.671, -6.78921, -0, 2.98721, -1, 0}, {2475986526, -78.4, -788.132, 328.83, -5.91899, 2.66804, 3.75875, -1, 0}, {2475986526, -80.5351, -788.179, 328.782, -5.80051, -0, 7.26539, -1, 0}, {2475986526, -82.1189, -788.558, 328.793, -5.9192, 1.06722, 12.7168, -1, 0}, {2475986526, -85.4054, -789.317, 328.666, -5.79433, -0, 17.1877, -1, 0}, {2475986526, -87.4651, -789.98, 328.647, -5.63204, -0, 20.2315, -1, 0}, {2475986526, -88.9795, -790.697, 328.76, -5.79416, -0, 25.9501, -1, 0}, {2475986526, -90.9922, -791.487, 328.684, -6.26149, -0, 27.0819, -1, 0}, {2475986526, -92.3298, -792.474, 328.677, -5.79412, -0, 33.3113, -1, 0}, {2475986526, -94.2322, -793.73, 328.669, -5.58479, -2.13443, 37.4974, -1, 0}, {2475986526, -95.7282, -795.2, 328.764, -5.79431, -0, 41.8672, -1, 0}, {2475986526, -97.9782, -797.316, 328.695, -5.58488, -0, 48.9171, -1, 0}, {2475986526, -100.042, -800.063, 328.731, -5.79425, 2.13443, 53.7039, -1, 0}, {2475986526, -101.884, -802.718, 328.706, -5.5848, 2.13443, 60.3613, -1, 0}, {2475986526, -103.09, -805.421, 328.718, -5.79425, -0, 64.506, -1, 0}, {2475986526, -104.284, -807.711, 328.691, -5.58488, -2.13443, 65.966, -1, 0}, {2475986526, -105.262, -810.369, 328.729, -5.26384, 1.06722, 73.2414, -1, 0}, {2475986526, -105.769, -812.146, 328.645, -5.25205, -1.06722, 75.8091, -1, 0}, {2475986526, -106.155, -814.128, 328.687, -5.26388, -1.06722, 82.8157, -1, 0}, {2475986526, -106.062, -817.685, 328.758, -5.26388, 2.66804, 88.7458, -1, 0}, {2475986526, -106.154, -819.723, 328.716, -5.25204, -0, 90.1628, -1, 0}, {2475986526, -106.082, -822.072, 328.729, -5.26387, -1.33402, 91.2972, -1, 0}, {2475986526, -105.911, -823.815, 328.7, -5.52135, 5.33608, 99.4393, -1, 0}, {2475986526, -105.28, -826.029, 328.734, -5.26391, 1.06722, 101.615, -1, 0}, {2475986526, -105.06, -827.904, 328.644, -5.29978, 1.06722, 102.515, -1, 0}, {2475986526, -104.327, -830.112, 328.614, -5.26391, -2.13443, 104.719, -1, 0}, {3291218330, -108.551, -853.416, 327.387, 2.94456, 89.1111, -166.155, -1, 0}, {3291218330, -80.2509, -866.418, 327.301, 3.7405, 89.3, 146.641, -1, 0}, {3291218330, -55.8513, -863.921, 327.333, 6.87468, 89.6184, 149.776, -1, 0}, {3291218330, -37.3907, -848.122, 327.717, 2.33633, 88.8797, -16.2595, -1, 0}, {3291218330, -26.1908, -818.332, 328.76, 0.490556, 84.6598, -18.107, -1, 0}, {3291218330, -37.891, -789.138, 328.134, 1.11673, 87.6571, 42.7186, -1, 0}, {3291218330, -63.492, -772.044, 327.866, 3.09962, 89.1556, 44.702, -1, 0}, {3291218330, -93.4916, -774.848, 327.398, 2.73771, 89.0443, 122.539, -1, 0}, {3291218330, -115.991, -795.259, 327.27, 3.28432, 89.2033, 123.086, -1, 0}, {3291218330, -122.551, -825.074, 327.213, 173.37, 89.6048, 4.27077, -1, 0}, {118627012, -74.8438, -819.617, 323.685, 0, 0, -3.37511, -1, 0}, {2475986526, -67.6253, -820.244, 323.793, -14.4263, -8.53774, -100.02, -1, 0}, },
    MazebankRamp1 = { {1600026313, -78.4864, -807.943, 323.202, 109.364, -89.9209, 0, -1, 1}, {1600026313, -79.2766, -805.701, 323.204, 109.364, -89.9209, 0, -1, 1}, {1600026313, -79.8373, -803.709, 323.205, 109.364, -89.9209, 0, -1, 1}, {1600026313, -80.4295, -801.947, 323.207, 109.364, -89.9209, 0, -1, 1}, {4143853297, -97.4731, -778.557, 308.877, 0, -0, -159.831, -1, 1}, {1087520462, -84.2429, -793.182, 321.08, -63.5625, -0, -160.249, -1, 1}, {1087520462, -83.5429, -795.106, 322.073, -63.5625, -0, -160.249, -1, 1}, {1087520462, -84.9429, -791.108, 319.956, -62.6673, 8.53774e-007, -160.249, -1, 1}, {1087520462, -85.8122, -788.585, 318.638, -63.5625, -0, -160.249, -1, 1}, {1087520462, -89.1589, -779.487, 313.336, -59.5389, 0.0405551, -160.567, -1, 1}, {1087520462, -90.7065, -774.863, 310.09, -57.4959, 0.322988, -160.758, -1, 1}, {1087520462, -91.4887, -772.564, 308.403, -55.1692, 0.383369, -161.049, -1, 1}, {1087520462, -91.7565, -771.74, 307.844, -56.4466, 0.0442451, -160.565, -1, 1}, {1087520462, -93.6941, -766.245, 302.736, -45.9996, 0.0556114, -160.556, -1, 1}, {1087520462, -94.2969, -764.648, 301.067, -44.7623, -1.70755e-006, -159.354, -1, 1}, {1087520462, -94.2969, -764.648, 301.067, -44.7623, -1.70755e-006, -159.354, -1, 1}, {1087520462, -94.886, -762.996, 298.741, -36.7051, -0, -159.354, -1, 1}, {1087520462, -95.4855, -761.334, 296.406, -36.7051, -0, -159.354, -1, 1}, {1087520462, -95.4855, -761.334, 296.406, -36.7051, -0, -159.354, -1, 1}, {1087520462, -96.1606, -759.499, 294.259, -42.0766, -0, -159.354, -1, 1}, {1087520462, -96.0707, -759.689, 293.709, -36.7051, -0, -159.354, -1, 1}, {1087520462, -96.0707, -759.689, 293.709, -36.7051, -0, -159.354, -1, 1}, {1087520462, -96.0707, -759.689, 293.46, -36.7051, -0, -159.354, -1, 1}, {1087520462, -96.8807, -757.391, 292.506, -51.0291, -8.53774e-007, -159.354, -1, 1}, {1087520462, -96.8807, -757.391, 292.506, -51.0291, -8.53774e-007, -159.354, -1, 1}, {1087520462, -97.3203, -756.159, 291.688, -57.2958, -0, -159.354, -1, 1}, {1087520462, -97.9597, -754.358, 290.78, -62.6673, 8.53774e-007, -160.249, -1, 1}, {1087520462, -97.9597, -754.358, 290.78, -62.6673, 8.53774e-007, -160.249, -1, 1}, {1087520462, -98.7192, -752.356, 290.042, -69.9278, 3.20165e-005, -160.249, -1, 1}, {1087520462, -99.0244, -751.684, 290.499, -90, -8.46346e-007, -160.249, -1, 1}, {1087520462, -99.3223, -750.534, 290.479, -90, -8.46346e-007, -160.249, -1, 1}, {1087520462, -100.348, -747.881, 290.452, -89.5256, -1.33402e-008, -159.354, -1, 1}, {1087520462, -100.26, -748.154, 290.462, -76.096, 4.26887e-007, 19.6954, -1, 1}, {1087520462, -100.687, -747.053, 290.731, -62.6673, -8.53774e-007, 20.5907, -1, 1}, {1087520462, -101.346, -745.387, 291.611, -58.191, 1.70755e-006, 19.6954, -1, 1}, {1087520462, -102.234, -743.119, 293.091, -52.2249, 0.00051141, 21.3426, -1, 1}, {2475986526, -102.154, -739.285, 294.83, 9.80014, 0.295618, 18.7802, -1, 1}, {2475986526, -105.054, -740.282, 294.827, 9.80014, 0.295618, 18.7802, -1, 1}, {1087520462, -103.071, -741.047, 294.832, -48.0666, 0.000519094, 21.3419, -1, 1}, {1087520462, -103.75, -739.405, 296.413, -45.1472, 0.000547269, 21.3416, -1, 1}, {4143853297, -90.3515, -798.112, 319.893, 0, -0, -159.831, -1, 1}, {4143853297, -93.2293, -790.348, 317.189, 0, -0, -159.831, -1, 1}, {4143853297, -95.3479, -784.483, 313.696, 0, -0, -159.831, -1, 1}, {4143853297, -100.01, -771.31, 304.367, 0, -0, -159.831, -1, 1}, {4143853297, -101.829, -766.277, 299.666, 0, -0, -159.831, -1, 1}, {4143853297, -103.318, -762.175, 293.966, 0, -0, -159.831, -1, 1}, {4143853297, -104.948, -757.681, 288.866, 0, -0, -159.831, -1, 1}, {4143853297, -108.146, -748.798, 288.866, 0, -0, -159.831, -1, 1}, {4143853297, -108.146, -748.798, 295.608, 0, -0, -159.831, -1, 1}, {4143853297, -108.225, -748.694, 302.608, 0, -0, -159.831, -1, 1}, {3167053133, -103.451, -740.541, 307.317, -0.900199, -1.19985, 20.9076, -1, 1}, {2375650849, -102.454, -742.6, 309.309, 0, 0, 20.9393, -1, 1}, {4143853297, -101.483, -746.044, 305.602, 0, -0, -159.831, -1, 1}, {4143853297, -94.7458, -743.402, 295.608, 0, -0, -159.831, -1, 1}, {4143853297, -94.7566, -743.406, 288.866, 0, -0, -159.831, -1, 1}, {4143853297, -94.7426, -743.595, 302.651, 0, -0, -159.831, -1, 1}, {1157292806, -99.7732, -750.516, 309.575, 0, 0, 24.1761, -1, 1}, {4143853297, -89.9785, -756.476, 293.966, 0, -0, -159.831, -1, 1}, {4143853297, -91.5378, -752.285, 288.866, 0, -0, -159.831, -1, 1}, {4143853297, -87.9094, -762.07, 299.666, 0, -0, -159.831, -1, 1}, {4143853297, -86.2094, -766.939, 304.367, 0, -0, -159.831, -1, 1}, {4143853297, -84.0215, -772.971, 309.575, 0, -0, -159.831, -1, 1}, {4143853297, -81.6733, -779.348, 313.696, 0, -0, -159.831, -1, 1}, {4143853297, -79.5187, -785.083, 317.189, 0, -0, -159.831, -1, 1}, {4143853297, -76.5616, -793.191, 319.493, 0, -0, -159.831, -1, 1}, {1998517203, -81.0993, -790.139, 326.57, 0, 0, -82.6177, -1, 1}, {1998517203, -88.8988, -792.911, 326.95, 0, 0, -82.6177, -1, 1}, {803874239, -88.3376, -794.173, 327.042, 0, 0, 31.5501, -1, 1}, {803874239, -90.0376, -795.174, 327.262, 0, 0, 31.5501, -1, 1}, {803874239, -91.6375, -796.175, 327.482, 0, 0, 31.5501, -1, 1}, {803874239, -79.0283, -791.31, 326.763, 0, -0, 100.953, -1, 1}, {803874239, -76.8377, -790.87, 326.823, 0, -0, 100.953, -1, 1}, {803874239, -81.0088, -791.22, 326.713, 0, -0, 100.953, -1, 1}, },
    FerrisSpin = { {1952396163, -1497.76, -1113.84, -3.08, -90, 6.14715e-007, 165.792, -1, 2}, {2475986526, -1461.92, -1216.88, 2.5836, -2.3048, -0, -154.878, -1, 2}, {3291218330, -1465.62, -1217.64, 18, 166.516, -5.12264e-006, 24.1717, -1, 2}, {3291218330, -1458.89, -1214.4, 18, -38.4956, 8.53774e-007, -153.982, -1, 2}, {2475986526, -1460.32, -1219.97, 4.3801, 12.6953, -0, -154.878, -1, 2}, {2475986526, -1457, -1226.67, 11.8772, 31.7229, -0, -154.382, -1, 2}, {2475986526, -1458.4, -1223.77, 7.9937, 23.6001, -0.0916355, -154.918, -1, 2}, {2475986526, -1456.4, -1228.27, 14.9608, 48.674, -0, -153.982, -1, 2}, {2475986526, -1456, -1229.07, 19.7441, 68.6628, -0, -153.982, -1, 2}, {2475986526, -1456.2, -1228.47, 24.8276, 82.6252, 3.80938, -152.828, -1, 2}, {2475986526, -1456.9, -1226.47, 28.9111, 108.498, -8.51368, -157.244, -1, 2}, {2475986526, -1458.59, -1223.37, 31.5945, 130.616, -4.72983, -155.087, -1, 2}, {2475986526, -1460.59, -1218.38, 33.5779, 143.744, -3.95611, -152.581, -1, 2}, {2475986526, -1462.79, -1214.28, 34.161, 163.63, -2.68302, -155.763, -1, 2}, {2475986526, -1465.3, -1209.78, 32.5228, -172.187, 4.69576e-006, -152.192, -1, 2}, {2475986526, -1465.3, -1209.78, 32.5228, -172.187, 4.69576e-006, -152.192, -1, 2}, {2475986526, -1466.9, -1205.68, 29.0062, -155.178, 9.47689e-005, -153.087, -1, 2}, {2475986526, -1468.3, -1202.98, 24.1897, -131.11, 6.74481e-005, -153.088, -1, 2}, {2475986526, -1468.59, -1202.68, 19.3732, -107.429, 3.07358e-005, -153.087, -1, 2}, {2475986526, -1467.99, -1203.88, 13.5732, -89.6528, -0.153235, -155.853, -1, 2}, {2475986526, -1467.11, -1205.68, 10.7072, -63.5491, 8.53774e-007, -156.504, -1, 2}, {4109455646, -1465.05, -1210.03, 7.9503, 9.53319, 1.38057, 24.2606, -1, 2}, {2975320548, -1460.95, -1218.79, 7.66, -29.9323, -0.173323, 24.7221, -1, 2}, {2975320548, -1463.05, -1214.19, 6.7879, -6.50192, 1.391, 24.2651, -1, 2}, },
    MountChilliadContainerRamp = { {1952396163, -1497.76, -1113.84, -3.08, -90, -0, 165.792, 90, 3}, {2475986526, -1461.92, -1216.88, 2.5836, -2.3048, 0, -154.878, 205.14, 3}, {3291218330, -1458.89, -1214.4, 18, -38.4956, 0, -153.982, 211.95, 3}, {2475986526, -1460.32, -1219.97, 4.3801, 12.6953, 0, -154.878, 205.672, 3}, {2975320548, -1463.05, -1214.19, 6.7879, -6.5, -1.391, 24.2651, 24.4244, 3}, {3291218330, -1465.62, -1217.64, 18, 166.516, 180, 24.1717, 155.224, 3}, {4109455646, -1465.05, -1210.03, 7.9503, 9.5304, -1.3806, 24.2606, 24.5148, 3}, {2975320548, -1460.95, -1218.79, 7.66, -29.9322, 0.1733, 24.7221, 27.9617, 3}, {2475986526, -1458.4, -1223.77, 7.9937, 23.6001, 0.0916, -154.918, 207.065, 3}, {2475986526, -1467.11, -1205.68, 10.7072, -63.5491, 0, -156.505, 224.303, 3}, {2475986526, -1457, -1226.67, 11.8772, 31.7229, 0, -154.382, 209.411, 3}, {2475986526, -1456.4, -1228.27, 14.9608, 48.674, 0, -153.982, 216.471, 3}, {2475986526, -1456, -1229.07, 19.7441, 68.6628, 0, -153.982, 233.298, 3}, {2475986526, -1456.2, -1228.47, 24.8276, 81.7043, -3.8094, -152.828, 252.429, 3}, {2475986526, -1456.9, -1226.47, 28.9111, 110.301, 171.486, -157.244, 312.201, 3}, {2475986526, -1458.59, -1223.37, 31.5945, 130.843, 175.27, -155.087, 325.759, 3}, {2475986526, -1460.59, -1218.38, 33.5779, 143.844, 176.044, -152.581, 327.979, 3}, {2475986526, -1462.79, -1214.28, 34.161, 163.648, 177.317, -155.763, 335.024, 3}, {2475986526, -1465.3, -1209.78, 32.5228, -172.187, -180, -152.192, 331.971, 3}, {2475986526, -1466.9, -1205.68, 29.0062, -155.178, -180, -153.087, 330.783, 3}, {2475986526, -1468.3, -1202.98, 24.1897, -131.11, -180, -153.088, 322.332, 3}, {2475986526, -1468.59, -1202.68, 19.3732, -107.429, -180, -153.087, 300.544, 3}, {2475986526, -1467.99, -1203.88, 13.5732, -89.6205, 0.1532, -155.853, 269.072, 3}, {3966705493, 509.842, 5589.24, 791.066, 0.141, 0, 65.3998, 65.3999, 3}, {3966705493, 520.5, 5584.38, 790.503, 5.441, 0, 65.3998, 65.4976, 3}, {3966705493, 531.057, 5579.54, 788.691, 12.441, 0, 65.3998, 65.9111, 3}, {3966705493, 568.672, 5562.32, 767.428, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 576.972, 5558.53, 759.566, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 560.174, 5566.2, 774.698, 35.0403, 0, 65.3998, 69.4512, 3}, {3966705493, 541.325, 5574.84, 785.49, 19.4409, 0, 65.3998, 66.6484, 3}, {3966705493, 551.066, 5570.37, 780.799, 27.5407, 0, 65.3998, 67.9049, 3}, {3966705493, 585.249, 5554.75, 751.745, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 618.334, 5539.62, 720.386, 40.7936, 0, 65.3998, 70.8829, 3}, {3966705493, 626.602, 5535.85, 712.547, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 610.065, 5543.4, 728.217, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 601.777, 5547.19, 736.076, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 593.507, 5550.97, 743.917, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 634.862, 5532.07, 704.725, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 643.121, 5528.29, 696.894, 40.7936, 0, 65.3998, 70.8829, 3}, {3966705493, 651.391, 5524.51, 689.053, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 659.651, 5520.73, 681.221, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 667.911, 5516.94, 673.389, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 676.171, 5513.17, 665.558, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 684.431, 5509.38, 657.727, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 692.691, 5505.61, 649.905, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 700.95, 5501.83, 642.074, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 709.22, 5498.05, 634.243, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 717.46, 5494.28, 626.431, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 725.72, 5490.5, 618.6, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 733.98, 5486.72, 610.778, 40.7396, 0, 65.3998, 70.8685, 3}, {3966705493, 742.6, 5482.78, 603.167, 36.9395, 0, 65.3998, 69.9005, 3}, {3966705493, 751.83, 5478.55, 596.335, 31.0392, 0, 65.3998, 68.5807, 3}, {3966705493, 761.71, 5474.02, 590.613, 24.5989, 0, 65.3998, 67.3986, 3}, {3966705493, 772.07, 5469.28, 586.08, 18.9288, 0, 65.3998, 66.5835, 3}, {3966705493, 782.84, 5464.34, 582.86, 11.5788, 0, 65.3998, 65.8427, 3}, {3966705493, 793.89, 5459.28, 581.117, 5.0787, 0, 65.3998, 65.485, 3}, {3966705493, 805.1, 5454.15, 580.876, -2.5212, 0, 65.3998, 65.4208, 3}, {3966705493, 816.17, 5449.08, 581.975, -7.6213, 0, 65.3998, 65.5917, 3}, {3966705493, 827.191, 5444.04, 584.582, -16.6212, 0, 65.3998, 66.3125, 3}, {3966705493, 837.681, 5439.24, 588.899, -24.421, 0, 65.3998, 67.3698, 3}, {2580877897, 522.61, 5584.49, 779.214, 79.7153, -9.2252, 55.7018, 77.7612, 3}, {3862788492, 522.445, 5583.69, 779.551, -0.9197, -69.229, -167.468, 184.555, 3}, },
    AirportJump = { {2475986526, -1242.08, -2931.15, 12.9924, -0.1046, -3.33505e-009, 61.0607, -1, 4}, {2475986526, -1247.11, -2928.46, 15.013, -0.1046, -3.33505e-009, 61.0607, -1, 4}, {2475986526, -1251.58, -2926.05, 16.7865, -0.1046, -3.33505e-009, 61.0607, -1, 4}, {2475986526, -1254.69, -2924.35, 18.25, -0.1046, -3.33505e-009, 61.0607, -1, 4}, {3966705493, -1276.69, -2912.99, 23.0019, 0, 0.05, 60.9705, -1, 4}, {2475986526, -1258.35, -2922.28, 20.2135, -0.1046, -3.33505e-009, 61.0607, -1, 4}, {3966705493, -1270.89, -2916.22, 23.0123, 0, 0, 60.8909, -1, 4}, {3966705493, -1270.25, -2914.99, 23.0137, 0, 0, 60.8909, -1, 4}, {3966705493, -1274.87, -2909.4, 23.0049, 0, 0.05, 60.9705, -1, 4}, {3966705493, -1269.01, -2912.64, 22.9993, 0, 0.05, 60.9705, -1, 4}, {3966705493, -1267.87, -2915.44, 28.3632, 0, -0, 147.299, -1, 4}, {3966705493, -1272.13, -2918.33, 28.4791, 0, 0.05, 60.9705, -1, 4}, {3966705493, -1272.11, -2918.35, 25.6708, -0.48, 0.0499982, 60.9701, -1, 4}, {3966705493, -1277.93, -2915.14, 25.604, 0, 0.05, 60.9705, -1, 4}, {3966705493, -1279.69, -2909.85, 25.6358, 0, -0, -151.239, -1, 4}, {3966705493, -1279.69, -2909.85, 28.4844, 0, -0, -151.239, -1, 4}, {2475986526, -1261.82, -2920.38, 21.767, -0.1046, -3.33505e-009, 61.0607, -1, 4}, {3966705493, -1273.65, -2907.11, 22.9763, 0, 0.05, 60.9705, -1, 4}, {3966705493, -1267.77, -2910.37, 22.9978, 0, 0.05, 60.9705, -1, 4}, {3966705493, -1266.49, -2908.08, 22.9987, 0, -0, -119.462, -1, 4}, {3966705493, -1265.15, -2905.8, 23.0042, 0, -0, -119.462, -1, 4}, {3966705493, -1266.44, -2905.21, 25.6255, 0, -0, -118.761, -1, 4}, {3966705493, -1265.66, -2911.99, 25.6968, 0, 0, -30.9603, -1, 4}, {3966705493, -1264.88, -2910.66, 25.6982, 0, 0, -30.9603, -1, 4}, {3966705493, -1264.84, -2905.14, 25.624, 0, -0, -118.761, -1, 4}, {3966705493, -1272.37, -2900.96, 25.6199, 0, -0, -118.761, -1, 4}, {3966705493, -1276.35, -2903.91, 25.6214, 0, -0, -151.239, -1, 4}, {3966705493, -1276.35, -2903.91, 28.4329, 0, -0, -151.239, -1, 4}, {3966705493, -1272.37, -2900.96, 28.4385, 0, -0, -118.761, -1, 4}, {3966705493, -1266.44, -2905.21, 28.437, 0, -0, -118.761, -1, 4}, {3966705493, -1265.17, -2905.14, 28.3426, 0, -0, -118.861, -1, 4}, {3966705493, -1271.09, -2902.58, 23.0057, 0, -0, -119.462, -1, 4}, {3966705493, -1272.37, -2904.83, 22.9972, 0, -0, -119.462, -1, 4}, },
    AirportGateJump = { {2475986526, -1098.36, -2631.17, 19, 0, -0, 152.671, -1, 5}, {2475986526, -1100.26, -2634.64, 21.1976, 16.2002, 0.192059, 150.427, -1, 5}, {2475986526, -1102.26, -2638.02, 25.01, 26.7003, 0.178675, 149.261, -1, 5}, {2475986526, -1103.96, -2640.91, 29.04, 28.3717, -0, 146.82, -1, 5}, {1952396163, -1119.61, -2670.96, -5.125, 0, -0, 150.514, -1, 5}, {1952396163, -1119.61, -2670.96, -5.125, 0, -0, 150.401, -1, 5}, {3137065507, -1044.69, -2530.08, 20.4011, 94.8962, 4.26887e-007, 147.716, -1, 5}, },
    UfoTower = { {3026699584, 70.2592, -674.044, 654.365, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 646.186, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 638.008, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 629.829, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 621.65, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 613.471, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 605.292, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 597.114, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 588.935, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 580.756, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 572.577, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 564.399, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 556.22, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 662.544, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 548.041, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 539.862, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 531.683, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 523.505, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 515.326, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 507.147, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 498.968, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 490.79, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 482.611, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 474.432, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 466.253, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 458.074, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 449.896, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 441.717, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 433.538, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 425.359, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 417.18, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 409.001, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 400.823, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 392.644, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 384.465, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 376.286, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 368.107, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 359.929, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 351.75, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 343.571, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 335.392, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 327.213, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 319.035, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 310.856, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 302.677, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 294.498, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 286.319, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 278.141, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 269.962, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 261.783, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 253.604, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 245.425, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 237.247, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 229.068, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 220.889, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 212.71, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 204.531, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 196.353, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 188.174, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 179.995, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 171.816, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 163.637, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 155.459, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 147.28, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 139.101, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 130.922, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 122.743, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 114.565, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 106.386, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 98.207, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 90.0282, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 81.8494, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 73.6706, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 65.4918, 0.660085, -0.919939, -109.32, -1, 6}, {3026699584, 70.2592, -674.044, 57.313, 0.660085, -0.919939, -109.32, -1, 6}, },
    MazeBank4Ramp = { {3522933110, -81.3886, -814.648, 325.169, 0, -0, 180, -1, 7}, {3681122061, -81.7456, -809.064, 324.799, 0.500021, 2.66804, 32.8808, -1, 7}, {3681122061, -86.1333, -802.279, 321.92, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -89.7406, -796.701, 316.539, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -93.601, -790.725, 310.777, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -97.4741, -784.73, 304.997, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -101.373, -778.696, 299.179, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -105.233, -772.72, 293.417, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -109.106, -766.725, 287.637, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -112.954, -760.769, 281.894, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -116.827, -754.773, 276.113, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -120.687, -748.798, 270.352, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -124.518, -742.868, 264.636, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -128.358, -736.925, 258.909, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -132.22, -730.949, 253.151, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -136.081, -724.974, 247.394, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -139.943, -718.998, 241.636, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -143.826, -712.99, 235.846, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -147.667, -707.047, 230.12, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -151.508, -701.104, 224.394, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -155.369, -695.128, 218.636, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -159.252, -689.12, 212.846, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -163.072, -683.209, 207.152, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -166.976, -677.168, 201.331, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -170.838, -671.193, 195.573, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -174.7, -665.217, 189.815, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -178.583, -659.209, 184.026, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -182.444, -653.233, 178.268, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -186.327, -647.225, 172.479, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -190.189, -641.249, 166.721, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -194.03, -635.306, 160.994, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -197.871, -629.363, 155.268, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -201.711, -623.42, 149.542, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -205.552, -617.477, 143.815, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -209.393, -611.534, 138.089, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -213.255, -605.559, 132.331, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -217.095, -599.616, 126.605, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -220.957, -593.64, 120.847, -38.9999, -1.45141, 32.8808, -1, 7}, {3681122061, -222.245, -591.648, 118.928, -33.8999, 1.02453, 32.8807, -1, 7}, {3681122061, -223.349, -589.94, 117.561, -29.31, 1.79292, 32.8808, -1, 7}, {3681122061, -224.58, -588.036, 116.288, -26.25, 5.12264, 32.8807, -1, 7}, {3681122061, -225.869, -586.04, 115.116, -24.7199, -1.10991, 32.8808, -1, 7}, {3681122061, -227.127, -584.095, 114.05, -21.6599, 1.8783, 32.8808, -1, 7}, {3681122061, -228.615, -581.794, 112.961, -19.6199, 1.02453, 32.8807, -1, 7}, {3681122061, -230.201, -579.341, 111.92, -17.0699, -0, 32.8807, -1, 7}, {3681122061, -232.121, -576.369, 110.833, -12.9899, 4.26887, 32.8808, -1, 7}, {3681122061, -234.105, -573.302, 109.991, -9.9299, -2.98821, 32.8807, -1, 7}, {3681122061, -236.628, -569.396, 109.329, -7.3799, -4.26887, 32.8807, -1, 7}, {3681122061, -239.81, -564.475, 108.721, -4.3199, 1.28066, 32.8807, -1, 7}, {3681122061, -241.76, -561.459, 108.549, -0.7499, -1.12058, 32.8807, -1, 7}, {3681122061, -244.04, -557.932, 108.494, 2.82011, -2.77476, 32.8807, -1, 7}, {3681122061, -246.372, -554.326, 108.705, 5.8801, -2.77476, 32.8807, -1, 7}, {3681122061, -248.668, -550.777, 109.14, 10.4701, 8.96462, 32.8806, -1, 7}, {3681122061, -251.664, -546.138, 110.313, 13.5301, 1.15259, 32.8806, -1, 7}, {3681122061, -254.537, -541.694, 111.791, 16.5901, 4.26887, 32.8807, -1, 7}, {3681122061, -256.28, -538.999, 112.748, 19.6501, -1.19528, 32.8807, -1, 7}, {3681122061, -65.9078, -814.752, 326.106, 19.89, 4.26887, -53.8105, -1, 7}, {3681122061, -58.6541, -809.444, 327.336, -4.08004, -2.13443, -53.8103, -1, 7}, {3681122061, -52.4476, -804.909, 323.715, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -47.2332, -801.09, 317.168, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -42.0187, -797.272, 310.621, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -36.8326, -793.474, 304.109, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -31.5898, -789.635, 297.526, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -26.4037, -785.838, 291.014, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -21.1893, -782.019, 284.467, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -15.9748, -778.201, 277.919, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -10.7604, -774.383, 271.372, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -5.57426, -770.585, 264.86, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, -0.359839, -766.767, 258.313, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 4.82623, -762.969, 251.799, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 10.0123, -759.171, 245.285, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 15.2268, -755.353, 238.735, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 20.4412, -751.535, 232.184, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 25.6273, -747.737, 225.67, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 30.8135, -743.939, 219.155, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 36.0279, -740.121, 212.605, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 41.214, -736.323, 206.091, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 46.4285, -732.505, 199.54, -45.3899, 2.56132, -53.8101, -1, 7}, {3681122061, 48.4122, -731.052, 197.049, -41.8198, 1.62217, -53.8101, -1, 7}, {3681122061, 49.5549, -730.218, 195.782, -38.2499, 3.24434, -53.8101, -1, 7}, {3681122061, 51.171, -729.035, 194.203, -36.2098, 2.39057, -53.81, -1, 7}, {3681122061, 52.8966, -727.773, 192.637, -33.1499, -6.83019, -53.8101, -1, 7}, {3681122061, 54.586, -726.537, 191.27, -30.0898, 8.70849, -53.8099, -1, 7}, {3681122061, 56.5413, -725.105, 189.866, -25.4998, 7.59859, -53.8099, -1, 7}, {3681122061, 58.8359, -723.425, 188.509, -22.4398, 4.26887, -53.81, -1, 7}, {3681122061, 60.738, -722.033, 187.536, -18.3599, 1.10991, -53.81, -1, 7}, {3681122061, 63.1509, -720.268, 186.544, -15.8098, 5.03727, -53.8099, -1, 7}, {3681122061, 65.131, -718.821, 185.849, -12.7498, 5.07995, -53.8099, -1, 7}, {3681122061, 67.1384, -717.352, 185.286, -9.17981, 4.78113, -53.81, -1, 7}, {3681122061, 69.2894, -715.776, 184.855, -4.5898, 4.18349, -53.8099, -1, 7}, {3681122061, 71.7831, -713.952, 184.607, 0.000193536, 4.16213, -53.8099, -1, 7}, {3681122061, 74.0832, -712.268, 184.607, 3.06019, 3.7566, -53.81, -1, 7}, {3681122061, 76.0175, -710.853, 184.736, 8.1602, 4.35424, -53.81, -1, 7}, {3681122061, 77.7752, -709.567, 185.048, 13.2602, 5.50684, -53.81, -1, 7}, {3681122061, 79.6997, -708.158, 185.61, 17.3402, 3.7566, -53.8099, -1, 7}, {3681122061, 81.3947, -706.918, 186.266, 21.9302, 4.26887, -53.81, -1, 7}, {3681122061, 83.3036, -705.52, 187.219, 26.0102, 9.39151, -53.8099, -1, 7}, {3681122061, 85.6244, -703.821, 188.622, 29.0702, 1.96368, -53.8099, -1, 7}, {3681122061, 87.3526, -702.556, 189.812, 33.1501, 2.90283, -53.8098, -1, 7}, {3681122061, 89.2107, -701.196, 191.316, 37.2301, 4.86651, -53.8098, -1, 7}, {3681122061, 90.8492, -699.998, 192.859, 41.82, -2.56132, -53.8099, -1, 7}, {3681122061, 92.6236, -698.701, 194.826, 46.41, 8.2816, -53.8099, -1, 7}, {3681122061, 94.2096, -697.539, 196.89, 52.0199, 6.57406, -53.8098, -1, 7}, {3681122061, 95.6251, -696.503, 199.137, 56.61, 9.22075, -53.8097, -1, 7}, {3681122061, 96.9799, -695.512, 201.683, 61.7098, 8.53774, -53.8097, -1, 7}, {3681122061, 98.1658, -694.646, 204.413, 65.7899, 5.03726, -53.8096, -1, 7}, {3681122061, -69.0186, -829.452, 324.775, 0, -0, -152.398, -1, 7}, {3681122061, -65.276, -836.288, 321.491, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -62.2554, -842.061, 315, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -59.2515, -847.802, 308.544, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -56.2313, -853.574, 302.053, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -53.1945, -859.378, 295.526, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -50.2071, -865.088, 289.106, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -47.2032, -870.829, 282.65, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -44.1829, -876.602, 276.159, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -41.1626, -882.374, 269.667, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -38.1751, -888.084, 263.247, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -35.1713, -893.825, 256.791, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -32.1674, -899.566, 250.335, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -29.1635, -905.307, 243.879, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -26.1432, -911.079, 237.388, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -23.1393, -916.821, 230.932, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -20.119, -922.593, 224.44, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -17.1152, -928.334, 217.985, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -14.1112, -934.075, 211.529, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -11.1235, -939.785, 205.108, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -8.13589, -945.495, 198.687, -44.8796, 3.24434, -152.398, -1, 7}, {3681122061, -5.28891, -951.101, 192.102, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, -2.35757, -956.552, 185.364, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 0.589775, -962.033, 178.59, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 3.5211, -967.483, 171.852, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 9.3998, -978.414, 158.339, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 6.46847, -972.964, 165.077, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 12.3311, -983.865, 151.601, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 15.2944, -989.375, 144.789, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 21.1569, -1000.28, 131.313, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 18.2417, -994.856, 138.014, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 24.0722, -1005.7, 124.612, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 27.0355, -1011.21, 117.801, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 29.9828, -1016.69, 111.026, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 35.8294, -1027.56, 97.5867, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 37.2241, -1030.15, 94.4555, -44.3698, -1.70754, -151.734, -1, 7}, {3681122061, 38.7475, -1032.99, 91.3086, -39.7798, -4.26887, -151.734, -1, 7}, {3681122061, 39.7483, -1034.85, 89.5491, -36.7197, 3.4151, -151.734, -1, 7}, {3681122061, 40.9818, -1037.14, 87.6062, -33.6597, -2.21981, -151.734, -1, 7}, {3681122061, 42.1248, -1039.27, 85.999, -30.0898, -1.96368, -151.734, -1, 7}, {3681122061, 32.9141, -1022.14, 104.288, -47.4298, -1.79292, -151.734, -1, 7}, {3681122061, 43.3132, -1041.47, 84.5449, -26.5197, -1.79293, -151.734, -1, 7}, {3681122061, 44.7115, -1044.08, 83.0715, -23.4597, -2.39056, -151.734, -1, 7}, {3681122061, 45.9496, -1046.38, 81.937, -20.3997, -2.47594, -151.734, -1, 7}, {3681122061, 47.0815, -1048.48, 81.0483, -17.3397, -2.09174, -151.734, -1, 7}, {3681122061, 48.302, -1050.75, 80.2436, -14.7897, -8.96462, -151.734, -1, 7}, {3681122061, 50.0647, -1054.03, 79.2608, -13.2597, -2.77476, -151.734, -1, 7}, {3681122061, 52.0238, -1057.67, 78.2861, -11.7297, -1.45141, -151.734, -1, 7}, {3681122061, 53.7395, -1060.86, 77.5341, -9.17973, -1.1099, -151.734, -1, 7}, {3681122061, 55.7265, -1064.56, 76.8558, -6.11973, -6.61674, -151.734, -1, 7}, {3681122061, 57.3746, -1067.62, 76.4825, -3.56972, -9.60496, -151.734, -1, 7}, {3681122061, 59.3125, -1071.23, 76.2272, 0.000276446, -9.05818, -151.734, -1, 7}, {3681122061, 61.112, -1074.58, 76.2272, 4.08028, -8.00412, -151.734, -1, 7}, {3681122061, 62.529, -1077.21, 76.4405, 7.65027, -7.04364, -151.734, -1, 7}, {3681122061, 64.0779, -1080.1, 76.8796, 10.7103, -1.28066, -151.734, -1, 7}, {3681122061, 65.9388, -1083.55, 77.623, 14.2802, -1.70755, -151.734, -1, 7}, {3681122061, 67.4076, -1086.29, 78.4126, 17.3403, -1.57948, -151.734, -1, 7}, {3681122061, 68.7639, -1088.81, 79.3066, 21.4202, 1.36604, -151.734, -1, 7}, {3681122061, -86.0915, -825.576, 324.775, 0, -0, 122.286, -1, 7}, {3681122061, -99.1939, -833.684, 315.911, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -105.248, -837.511, 310.056, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -93.1729, -829.876, 321.734, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -111.268, -841.319, 304.233, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -123.245, -848.891, 292.651, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -147.333, -864.12, 269.359, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -141.278, -860.292, 275.213, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -135.256, -856.485, 281.036, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -129.266, -852.699, 286.828, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -117.224, -845.084, 298.474, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -165.367, -875.521, 251.921, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -213.415, -905.895, 205.464, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -207.426, -902.108, 211.255, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -201.403, -898.301, 217.078, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -195.414, -894.515, 222.87, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -183.434, -886.942, 234.452, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -177.445, -883.156, 240.244, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -171.422, -879.348, 246.067, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -159.378, -871.734, 257.713, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -153.355, -867.927, 263.536, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -189.424, -890.728, 228.661, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -231.449, -917.296, 188.027, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -225.46, -913.509, 193.818, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -219.47, -909.723, 199.609, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -237.439, -921.082, 182.235, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -284.806, -951.016, 167.673, 28.5601, -7.5132, 122.286, -1, 7}, {3681122061, -289.048, -953.697, 170.578, 34.1701, -3.41509, 122.286, -1, 7}, {3681122061, -290.727, -954.757, 171.926, 37.23, 3.41509, 122.286, -1, 7}, {3681122061, -286.998, -952.399, 169.084, 31.62, -1.36604, 122.286, -1, 7}, {3681122061, -282.375, -949.481, 166.27, 26.0101, 3.50047, 122.286, -1, 7}, {3681122061, -280.014, -947.991, 165.174, 21.4201, -6.83019, 122.286, -1, 7}, {3681122061, -277.4, -946.336, 164.178, 17.8501, -3.15896, 122.286, -1, 7}, {3681122061, -270.266, -941.827, 162.896, 4.59013, -1.79292, 122.286, -1, 7}, {3681122061, -266.683, -939.562, 163.103, -6.11989, -1.38738, 122.286, -1, 7}, {3681122061, -259.328, -934.913, 165.339, -17.8499, -4.69576, 122.286, -1, 7}, {3681122061, -253.478, -931.22, 168.474, -26.01, -4.18349, 122.286, -1, 7}, {3681122061, -248.103, -927.823, 172.247, -33.66, -5.97642, 122.286, -1, 7}, {3681122061, -243.429, -924.868, 176.444, -39.27, -2.30519, 122.286, -1, 7}, {3681122061, -256.593, -933.187, 166.676, -22.4399, -5.97641, 122.286, -1, 7}, {3681122061, -262.183, -936.72, 164.252, -14.2799, -3.20165, 122.286, -1, 7}, {3681122061, -268.321, -940.597, 162.896, 0.000125527, -1.95033, 122.286, -1, 7}, {3681122061, -272.668, -943.344, 163.123, 8.67012, -2.86014, 122.286, -1, 7}, {3681122061, -275.091, -944.877, 163.561, 12.7501, -5.1226, 122.286, -1, 7}, {3681122061, -249.757, -928.867, 170.944, -31.11, -6.0617, 122.286, -1, 7}, {3681122061, -251.566, -930.012, 169.653, -27.54, -3.58585, 122.286, -1, 7}, },
    FortZancudo = { {3213433054, -2661.22, 3209.43, 32.7118, 0, -0, -120.437, -1, 8}, {3213433054, -2657.86, 3207.56, 32.7118, 0, 0, 59.6808, -1, 8}, {3213433054, -2659.52, 3212.33, 32.7118, 0, -0, -120.437, -1, 8}, {3213433054, -2656.2, 3210.41, 32.7118, 0, 0, 59.6808, -1, 8}, {3213433054, -2654.54, 3213.26, 32.7118, 0, 0, 59.6808, -1, 8}, {3213433054, -2657.84, 3215.18, 32.7118, 0, -0, -120.437, -1, 8}, {3213433054, -2615.14, 3183, 32.8118, 0, -0, -120.45, -1, 8}, {3213433054, -2611.82, 3181.02, 32.8118, 0, 0, 58.529, -1, 8}, {3213433054, -2613.47, 3185.85, 32.8118, 0, -0, -120.45, -1, 8}, {3213433054, -2610.11, 3183.91, 32.8118, 0, 0, 59.589, -1, 8}, {3213433054, -2611.79, 3188.7, 32.8118, 0, -0, -120.45, -1, 8}, {3213433054, -2608.46, 3186.71, 32.8118, 0, 0, 58.529, -1, 8}, {3213433054, -2550.83, 3162.65, 32.7702, 0, -0, -117.989, -1, 8}, {4109455646, -2547.01, 3160.66, 34.9496, 11.66, -2.56132e-006, -118.95, -1, 8}, {3213433054, -2476.76, 3120.72, 32.7718, 0, -0, -119.612, -1, 8}, {4109455646, -2473.51, 3118.83, 34.5672, 8.47412, -0.0223369, -120.965, -1, 8}, {2975320548, -2442.43, 3105.7, 35.6224, -7.42001, -5.12265e-006, 150.074, -1, 8}, {2975320548, -2443.67, 3101.83, 35.8732, -11.66, 3.84198e-006, 59.738, -1, 8}, {2975320548, -2438.8, 3099, 36.0155, -11.66, -6.40331e-006, 59.7379, -1, 8}, {2975320548, -2434.05, 3096.22, 36.6871, -22.26, -1.45141e-005, 59.7379, -1, 8}, {2975320548, -2446.85, 3098.2, 35.6088, -7.42, 3.20165e-006, -31.8463, -1, 8}, {2402097066, -2448.77, 3097.65, 35.4732, 0, -0, -120.616, -1, 8}, {2402097066, -2442.95, 3108.08, 35.4832, 0, -0, -117.436, -1, 8}, {2402097066, -2442.95, 3108.08, 35.4832, 0, -0, -117.436, -1, 8}, {3681122061, -2389.55, 3069.11, 36.5952, 179.801, -3.76861e-006, -117.806, -1, 8}, {1982829832, -2363.33, 3056.01, 31.8257, 0, -0, -119.219, -1, 8}, {3681122061, -2389.55, 3069.11, 36.5952, 179.801, -3.76861e-006, -117.806, -1, 8}, {2609922146, -2358.79, 3060.59, 31.8217, 0, -0, -119.371, -1, 8}, {2975320548, -2325.93, 3034.99, 33.3214, 19.8, 3.41509e-006, -120.09, -1, 8}, {2975320548, -2321.78, 3032.58, 36.3899, 25.7399, -8.62311e-005, -120.09, -1, 8}, {2975320548, -2317.79, 3030.29, 39.6222, 25.0799, -6.23256e-005, -120.09, -1, 8}, {2975320548, -2313.74, 3027.94, 42.9228, 25.7399, -8.62311e-005, -120.09, -1, 8}, {2975320548, -2309.83, 3025.69, 46.2289, 27.06, -8.2816e-005, -120.09, -1, 8}, {2975320548, -2306.07, 3023.49, 49.5919, 29.0399, -0.000116113, -120.09, -1, 8}, {2975320548, -2283.14, 3009.97, 44.7284, 14.12, -2.04906e-005, 60.0397, -1, 8}, {2975320548, -2287.5, 3012.47, 46.9591, 13.6, 0.680011, 60.0397, -1, 8}, {2975320548, -2302.26, 3021.28, 53.174, 29.6999, -0.000100745, -120.09, -1, 8}, {2975320548, -2292.06, 3015.11, 49.2546, 13.6, 1.53679e-005, 60.0397, -1, 8}, {2975320548, -2298.56, 3019.12, 56.7472, 30.36, -8.79386e-005, -120.09, -1, 8}, {2052512905, -2294.52, 3015.08, 58.6366, 82.6616, 0.00430302, -31.2919, -1, 8}, {2052512905, -2293.13, 3017.4, 58.6822, 80.9428, 0.00560716, 149.187, -1, 8}, {2787492567, -2293.66, 3016.58, 31.8318, -90, 0.0833042, 109.919, -1, 8}, {3213433054, -2202.78, 2963.39, 32.8003, 0, -0, -120.04, -1, 8}, {3213433054, -2199.53, 2961.53, 34.17, -40.5599, -2.56132e-006, 59.8803, -1, 8}, {3681122061, -2137.1, 2904.97, 32.8327, 16.8, -1.10991e-005, -141.061, -1, 8}, {3681122061, -2132.27, 2897.94, 34.4465, 16.8, -14, -141.061, -1, 8}, {3681122061, -2127.12, 2890.88, 36.4432, 17.92, -29.68, -136.581, -1, 8}, {3681122061, -2119.98, 2885.33, 38.8379, 17.92, -29.68, -136.581, -1, 8}, {3681122061, -2113.02, 2880, 41.2705, 17.92, -29.68, -136.581, -1, 8}, {3681122061, -2085.18, 2857.71, 49.9177, 19.04, -43.12, -136.581, -1, 8}, {3681122061, -2078.1, 2852.44, 51.662, 19.0399, -50.4001, -136.581, -1, 8}, {3681122061, -2092.05, 2863.54, 48.2285, 17.92, -34.16, -136.581, -1, 8}, {3681122061, -2098.91, 2869.18, 46.2053, 17.92, -29.68, -136.581, -1, 8}, {3681122061, -2105.97, 2874.59, 43.7379, 17.92, -29.68, -136.581, -1, 8}, {3681122061, -2070.42, 2847.69, 53.5814, 19.0399, -50.4001, -136.581, -1, 8}, {3681122061, -2062.85, 2843.01, 55.4739, 19.0399, -50.4001, -136.581, -1, 8}, {3681122061, -2055.32, 2838.69, 56.5097, 17.7868, -43.8868, -131.905, -1, 8}, {3681122061, -2047.61, 2834.88, 58.9097, 26.1867, -43.8868, -131.905, -1, 8}, {3681122061, -2039.74, 2832.2, 62.2769, 38.5067, -45.5668, -131.905, -1, 8}, {3681122061, -1996.98, 2830.2, 48.384, 0.202822, -14.4337, -105.503, -1, 8}, {3681122061, -1996.42, 2832.89, 59.0601, -179.433, 12.3451, 76.9258, -1, 8}, {3213433054, -1951.86, 2849.63, 34.5146, -47.5199, -7.59859e-005, 59.6261, -1, 8}, {3213433054, -1950.16, 2852.52, 34.5146, -47.5199, -7.59859e-005, 59.6261, -1, 8}, {3213433054, -1953.57, 2854.49, 32.8004, 0, -0, -120.091, -1, 8}, {3213433054, -1955.25, 2851.59, 32.8004, 0, -0, -120.091, -1, 8}, {4111834409, -1960.72, 2857.38, 31.7305, 0, -0, -118.505, -1, 8}, {4109455646, -2144, 2967.21, 36.0606, 9.35852, -0.00134085, 59.8371, -1, 8}, {4109455646, -2139.63, 2964.67, 33.9985, 5.84852, -0.0013321, 59.8371, -1, 8}, {4109455646, -2135.45, 2962.3, 32.4604, 0, 0, 60.4792, -1, 8}, {2975320548, -2193.23, 2995.21, 35.0684, 11.6996, -0.00262322, -119.238, -1, 8}, {2975320548, -2197.74, 2997.74, 32.8074, 15.2099, 2.04906e-005, -119.328, -1, 8}, {3213433054, -2246.82, 3026.19, 33.0318, 0.0331696, 0.0056356, 58.6423, -1, 8}, {3213433054, -2256.38, 3032.02, 35.4343, 6.5707, 0.0279573, 58.7685, -1, 8}, {3213433054, -2265.19, 3037.37, 38.408, 10.1262, 0.0254109, 58.7585, -1, 8}, {3213433054, -2273.45, 3042.38, 40.214, 8.95404, -0.00182451, 58.7729, -1, 8}, {3213433054, -2281.36, 3047.19, 42.7382, 8.89319, 0.151422, 58.8279, -1, 8}, {3213433054, -2289.41, 3052.05, 46.2871, 13.2, 0.000150264, 58.7642, -1, 8}, {3213433054, -2397.86, 3114.2, 32.8449, 0, 0, 60.2049, -1, 8}, {3213433054, -2402.38, 3116.77, 34.7648, 0, 0, 60.2049, -1, 8}, {2475986526, -2394.65, 3118.07, 32.5452, 0, 0, 56.6241, -1, 8}, {2475986526, -2397.73, 3120.09, 34.1452, 2.04, -1.38738e-006, 56.6241, -1, 8}, {2475986526, -2401.78, 3122.77, 36.6227, 8.16, 1.28066e-006, 56.6239, -1, 8}, {2475986526, -2405.48, 3125.2, 39.5571, 14.28, 1.02453e-005, 56.6239, -1, 8}, {2475986526, -2409.12, 3127.6, 43.2064, 20.4, -2.39057e-005, 56.6239, -1, 8}, {2475986526, -2412.29, 3129.71, 46.9494, 24.4781, -1.43125, 56.2632, -1, 8}, {2475986526, -2415.18, 3131.49, 51.529, 38.3931, -3.70399, 55.299, -1, 8}, {2475986526, -2416.96, 3132.28, 56.2986, 54.0331, -3.70398, 53.2589, -1, 8}, {2475986526, -2417.37, 3132.16, 61.6124, 73.753, -3.70394, 53.2588, -1, 8}, {2475986526, -2416.48, 3131.04, 66.996, 90.9129, -3.70395, 53.2587, -1, 8}, {2475986526, -2414.88, 3129.5, 70.998, 104.113, -3.70383, 50.6186, -1, 8}, {2475986526, -2412.46, 3127.2, 74.61, 116.653, -3.70392, 50.6185, -1, 8}, {2475986526, -2409.58, 3124.71, 77.6119, 121.273, -3.70395, 50.6185, -1, 8}, {2475986526, -2406.75, 3122.18, 80.0586, 127.213, -3.70391, 50.6184, -1, 8}, {2475986526, -2403.38, 3119.23, 82.2502, 135.793, -3.70396, 50.6185, -1, 8}, {2475986526, -2369.71, 3092.81, 68.2807, -146.327, -3.7039, 50.6183, -1, 8}, {2475986526, -2367.45, 3091.4, 63.3347, -134.447, -3.70392, 50.6182, -1, 8}, {2475986526, -2366, 3090.66, 58.0814, -123.887, -3.7039, 50.6182, -1, 8}, {2475986526, -2365.38, 3090.57, 53.1623, -112.007, -3.70391, 50.6182, -1, 8}, {2475986526, -2365.62, 3091.18, 48.0172, -99.4666, -3.70393, 50.6181, -1, 8}, {2475986526, -2366.77, 3092.54, 43.04, -86.2661, -3.70399, 50.6181, -1, 8}, {2475986526, -2368.73, 3094.52, 38.5669, -74.386, -3.70392, 50.6181, -1, 8}, {2475986526, -2371.25, 3096.8, 35.0692, -59.206, -3.70384, 55.2379, -1, 8}, {2475986526, -2375.18, 3099.61, 32.3997, -42.0459, -3.70387, 57.2179, -1, 8}, {2475986526, -2395.69, 3112.77, 84.6355, 152.292, -3.70389, 50.6184, -1, 8}, {2475986526, -2391.54, 3109.37, 84.6603, 162.192, -3.70393, 50.6184, -1, 8}, {2475986526, -2387.13, 3105.84, 83.6595, 172.752, -3.70391, 50.6184, -1, 8}, {2475986526, -2382.97, 3102.56, 81.8101, -179.988, -3.70391, 50.6184, -1, 8}, {2475986526, -2372.52, 3094.76, 72.6855, -154.907, -3.70391, 50.6183, -1, 8}, {2475986526, -2379.11, 3099.59, 79.371, -172.728, -3.70391, 50.6183, -1, 8}, {2475986526, -2375.46, 3096.85, 76.1692, -162.168, -3.70388, 50.6182, -1, 8}, {2475986526, -2399.8, 3116.19, 83.7512, 143.712, -3.70387, 50.6184, -1, 8}, {3213433054, -2510.73, 3180.4, 32.8111, 0, 0, 59.4291, -1, 8}, {209943352, -2302.92, 3059.95, 50.2208, 76.8397, -0.679965, -120.716, -1, 8}, {209943352, -2298.84, 3057.5, 48.7042, 71.3997, -0.679954, -120.716, -1, 8}, {209943352, -2290.6, 3052.58, 47.3498, 84.3198, -0.679946, -120.716, -1, 8}, {209943352, -2290.6, 3052.58, 47.3498, 84.3198, -0.679946, -120.716, -1, 8}, {209943352, -2294.73, 3055.05, 47.6692, 76.8398, -0.680059, -120.716, -1, 8}, {209943352, -2533.2, 3193.91, 37.3948, 0, -0, -120.716, -1, 8}, {209943352, -2533.2, 3193.91, 37.3948, 0, -0, -120.716, -1, 8}, {209943352, -2425.58, 3091.36, 36.493, 0, -0, -120.716, -1, 8}, {209943352, -2425.58, 3091.36, 36.493, 0, -0, -120.716, -1, 8}, {209943352, -2293.7, 3012.65, 55.3685, -89.7587, -0.659716, -30.2946, -1, 8}, {209943352, -2293.7, 3012.65, 55.3685, -89.7587, -0.659716, -30.2946, -1, 8}, },
    FunnyTrack = { {3681122061, -1018.78, -2937.26, 12.9646, 0, 0, -30.3132, -1, 9}, {3681122061, -1023.38, -2945.17, 12.9646, 0, 0, -30.3132, -1, 9}, {3681122061, -1028.02, -2953.13, 12.9646, 0, 0, -30.3132, -1, 9}, {3681122061, -1032.66, -2961.06, 12.9646, 0, 0, -30.3132, -1, 9}, {3681122061, -1037.32, -2969.04, 12.9646, 0, 0, -30.3132, -1, 9}, {3681122061, -1041.95, -2976.96, 12.9646, 0, 0, -30.3132, -1, 9}, {3681122061, -1046.18, -2984.19, 12.9646, 0, 0, -30.3132, -1, 9}, {3681122061, -1050.78, -2992.12, 12.9646, 0, 0, -29.8732, -1, 9}, {3681122061, -1053.22, -2998.13, 12.9646, 0, 0, -14.2534, -1, 9}, {3681122061, -1054.14, -3005.28, 12.9646, 0, 0, -0.613478, -1, 9}, {3681122061, -1053.45, -3012.85, 12.9646, 0, 0, 11.4866, -1, 9}, {3681122061, -1051.19, -3020.08, 12.9646, 0, 0, 23.3667, -1, 9}, {3681122061, -1047.43, -3026.73, 12.9646, 0, 0, 35.2469, -1, 9}, {3681122061, -1042.42, -3032.37, 12.9646, 0, 0, 47.7871, -1, 9}, {3681122061, -1037.1, -3038.16, 12.9646, 0, 0, 37.2273, -1, 9}, {3681122061, -1033.11, -3044.75, 12.9646, 0, 0, 25.5675, -1, 9}, {3681122061, -1030.43, -3052.11, 12.9646, 0, 0, 14.5676, -1, 9}, {3681122061, -1029.18, -3059.85, 12.9646, 0, 0, 4.00757, -1, 9}, {3681122061, -1029.37, -3067.7, 12.9646, 0, 0, -6.55247, -1, 9}, {3681122061, -1031, -3075.33, 12.9646, 0, 0, -17.5525, -1, 9}, {3681122061, -1034.09, -3082.35, 12.9646, 0, 0, -29.6525, -1, 9}, {3681122061, -1038.6, -3088.77, 12.9646, 0, 0, -40.2127, -1, 9}, {3681122061, -1044.19, -3094.15, 12.9646, 0, 0, -51.653, -1, 9}, {3681122061, -1050.65, -3098.2, 12.9646, 0, 0, -63.7531, -1, 9}, {3681122061, -1057.89, -3100.91, 12.9646, 0, 0, -75.1935, -1, 9}, {3681122061, -1065.18, -3101.87, 12.9646, 0, 0, -89.7139, -1, 9}, {3681122061, -1073.03, -3101.2, 12.9646, 0, -0, -100.054, -1, 9}, {3681122061, -1080.63, -3099.11, 12.9646, 0, -0, -110.615, -1, 9}, {3681122061, -1087.92, -3095.65, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1095.95, -3091.03, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1104.01, -3086.4, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1112.04, -3081.79, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1120.04, -3077.19, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1128.1, -3072.56, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1136.15, -3067.93, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1144.2, -3063.31, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1152.22, -3058.7, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1160.24, -3054.09, 12.9646, 0, -0, -119.855, -1, 9}, {3681122061, -1168.22, -3049.48, 12.9646, 0, -0, -120.295, -1, 9}, {3681122061, -1176.21, -3044.8, 12.9646, 0, -0, -120.295, -1, 9}, {3681122061, -1183.28, -3040.14, 12.9646, 0, -0, -126.455, -1, 9}, {3681122061, -1189.23, -3034.89, 12.9646, 0, -0, -136.356, -1, 9}, {3681122061, -1193.86, -3028.84, 12.9646, 0, -0, -148.677, -1, 9}, {3681122061, -1197.2, -3021.86, 12.9646, 0, -0, -159.898, -1, 9}, {3681122061, -1198.78, -3014.77, 12.9646, 0, -0, -174.639, -1, 9}, {3681122061, -1198.72, -3007.04, 12.9646, 0, -0, 173.701, -1, 9}, {3681122061, -1197, -2999.97, 12.9646, 0, -0, 158.962, -1, 9}, {3681122061, -1193.5, -2993.3, 12.9646, 0, -0, 145.982, -1, 9}, {3681122061, -1188.51, -2987.1, 12.9646, 0, -0, 136.083, -1, 9}, {3681122061, -1182.5, -2981.85, 12.9646, 0, -0, 126.183, -1, 9}, {3681122061, -1175.98, -2978.23, 12.9646, 0, -0, 112.104, -1, 9}, {3681122061, -1168.67, -2976.15, 12.9646, 0, -0, 99.7843, -1, 9}, {3681122061, -1160.82, -2975.53, 12.9646, 0, 0, 89.4449, -1, 9}, {3681122061, -1152.93, -2976.29, 12.9646, 0, 0, 79.5455, -1, 9}, {3681122061, -1145.21, -2978.39, 12.9646, 0, 0, 70.0859, -1, 9}, {3681122061, -1138.14, -2981.75, 12.9646, 0, 0, 59.0863, -1, 9}, {3681122061, -1130.27, -2986.43, 12.9646, 0, 0, 59.0863, -1, 9}, {3681122061, -1122.46, -2991.09, 12.9646, 0, 0, 59.0863, -1, 9}, {3681122061, -1115.12, -2994.75, 12.9646, 0, 0, 67.1435, -1, 9}, {3681122061, -1107.63, -2997.13, 12.9646, 0, 0, 76.9913, -1, 9}, {3681122061, -1099.8, -2998.14, 12.9646, 0, 0, 86.8389, -1, 9}, {3681122061, -1091.94, -2997.76, 12.9646, 0, -0, 97.5819, -1, 9}, {3681122061, -1084.47, -2995.95, 12.9646, 0, -0, 108.325, -1, 9}, {3681122061, -1077.64, -2992.78, 12.9646, 0, -0, 119.963, -1, 9}, {3681122061, -1077.64, -2992.78, 12.9646, 0, -0, 119.963, -1, 9}, {3681122061, -1071.68, -2988.3, 12.9646, 0, -0, 132.496, -1, 9}, {3681122061, -1066.33, -2982.53, 12.9646, 0, -0, 141.449, -1, 9}, {3681122061, -1053.01, -2960.01, 12.9646, 0, 0, -28.5532, -1, 9}, {3681122061, -1048.58, -2951.88, 12.9646, 0, 0, -28.5532, -1, 9}, {3681122061, -1044.16, -2943.76, 12.9646, 0, 0, -28.5532, -1, 9}, {3681122061, -1039.74, -2935.64, 12.9646, 0, 0, -28.5532, -1, 9}, {3681122061, -1035.5, -2927.86, 12.9646, 0, 0, -28.5532, -1, 9}, {3608473212, -1063.23, -2993.67, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1067.37, -2998.06, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1063.7, -2994.67, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1064.21, -2995.73, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1064.71, -2996.8, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1065.21, -2997.84, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1067.1, -2999.45, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1065.43, -3000.24, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1068.29, -3000.06, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1065.92, -3001.18, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1066.44, -3002.28, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1065.35, -3002.77, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1065.6, -3003.96, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1066.11, -3005.04, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1064.21, -2999.56, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1069.53, -3000.82, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1070.75, -3001.52, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1068.76, -3002.46, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1069.29, -3003.54, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1068.44, -3005.23, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1071.58, -3003.74, 15.3449, 0, 0, -25.1145, -1, 9}, {2475986526, -1072.98, -3006.81, 16.0846, 0, 0, -26.0348, -1, 9}, {3608473212, -1072.44, -3002.05, 15.3449, 0, 0, -25.1145, -1, 9}, {3608473212, -1073.73, -3002.72, 15.3449, 0, 0, -25.1145, -1, 9}, {2475986526, -1076.54, -3005.07, 16.0846, 0, 0, -26.0348, -1, 9}, {2475986526, -1078.92, -3009.92, 13.7046, 0, 0, -26.0348, -1, 9}, {2475986526, -1075.31, -3011.69, 13.7046, 0, 0, -26.0348, -1, 9}, {2475986526, -1069.34, -3008.59, 16.0846, 0, 0, -26.0348, -1, 9}, {2475986526, -1071.71, -3013.45, 13.7046, 0, 0, -26.0348, -1, 9}, {2475986526, -1068.14, -3015.2, 13.7046, 0, 0, -26.0348, -1, 9}, {3608473212, -1065.36, -3006.66, 15.3449, 0, 0, -25.1145, -1, 9}, {2475986526, -1065.75, -3010.35, 16.0846, 0, 0, -26.0348, -1, 9}, },
    AirportTrack = { {3966705493, -1041.89, -3219.51, 10.1797, -2.43331, 5.32208, 62.9336, -1, 10}, {3966705493, -1037.79, -3221.47, 10.3641, -2.43331, 5.32208, 62.9336, -1, 10}, {3966705493, -1034.16, -3223.3, 10.5366, -2.43331, 5.32208, 62.9336, -1, 10}, {3966705493, -1036.76, -3219.45, 10.1526, -2.43331, 5.32208, 62.9336, -1, 10}, {3966705493, -1033.12, -3221.28, 10.3251, -2.43331, 5.32208, 62.9336, -1, 10}, {3966705493, -1029.37, -3225.6, 11.1956, -11.6033, 5.32207, 62.9335, -1, 10}, {3966705493, -1028.33, -3223.58, 10.9842, -11.6033, 5.32207, 62.9335, -1, 10}, {3966705493, -1024.27, -3225.54, 12.1104, -18.1533, 5.32205, 62.9336, -1, 10}, {3966705493, -1025.44, -3227.83, 12.3497, -18.1533, 5.32205, 62.9336, -1, 10}, {3966705493, -1020.36, -3230.06, 15.7972, -40.4234, 5.32214, 62.9336, -1, 10}, {3966705493, -1019.22, -3227.83, 15.5634, -40.4234, 5.32214, 62.9336, -1, 10}, {3966705493, -1014.85, -3229.56, 20.4393, -50.9034, 5.3221, 62.9337, -1, 10}, {3966705493, -1016.07, -3231.95, 20.6898, -50.9034, 5.3221, 62.9337, -1, 10}, {3966705493, -1012.88, -3232.96, 26.0664, -64.0034, 5.32209, 62.9336, -1, 10}, {3966705493, -1011.63, -3230.51, 25.8104, -64.0034, 5.32209, 62.9336, -1, 10}, {3966705493, -1009.27, -3231.06, 32.0819, -73.1735, 5.32204, 62.9336, -1, 10}, {3966705493, -1010.52, -3233.51, 32.3379, -73.1735, 5.32214, 62.9337, -1, 10}, {3966705493, -1009.36, -3233.48, 38.2311, -83.6535, 5.32208, 62.9336, -1, 10}, {3966705493, -1008.09, -3230.98, 37.9695, -83.6535, 5.32208, 62.9336, -1, 10}, {3966705493, -1007.71, -3230.43, 44.185, -92.8235, 6.63212, 62.9336, -1, 10}, {3966705493, -1009.05, -3228.93, 49.9682, -119.024, 6.63217, 62.9336, -1, 10}, {3966705493, -1008.93, -3232.81, 44.4969, -92.8235, 6.63212, 62.9336, -1, 10}, {3966705493, -1010.27, -3231.31, 50.2801, -119.024, 6.63217, 62.9336, -1, 10}, {3966705493, -1011.96, -3226.91, 54.0691, -142.604, 6.6321, 62.9337, -1, 10}, {3966705493, -1013.1, -3229.14, 54.3602, -142.604, 6.6321, 62.9337, -1, 10}, {3966705493, -1017.49, -3226.51, 57.2125, -159.634, 6.63211, 62.9336, -1, 10}, {3966705493, -1022.14, -3223.91, 58.9186, -168.804, 6.63213, 62.9336, -1, 10}, {3966705493, -1035.97, -3216.05, 58.7162, 155.826, 1.39214, 60.3137, -1, 10}, {3966705493, -1031.37, -3218.71, 60.1775, 176.786, 6.63213, 60.3137, -1, 10}, {3966705493, -1026.33, -3221.63, 59.8766, -168.804, 6.63212, 60.3136, -1, 10}, {3966705493, -1020.98, -3221.63, 58.6206, -168.804, 6.63213, 62.9336, -1, 10}, {3966705493, -1024.97, -3219.25, 59.5578, -168.804, 6.63212, 60.3136, -1, 10}, {3966705493, -1016.33, -3224.24, 56.9145, -159.634, 6.63211, 62.9336, -1, 10}, {3966705493, -1029.99, -3216.28, 59.8517, 176.786, 6.63213, 60.3137, -1, 10}, {3966705493, -1029.99, -3216.28, 59.8517, 176.786, 6.63213, 60.3137, -1, 10}, {3966705493, -1034.73, -3213.86, 58.655, 155.826, 1.39214, 60.3137, -1, 10}, {3966705493, -1039.18, -3211.42, 55.2255, 138.796, 1.39206, 60.3137, -1, 10}, {3966705493, -1039.18, -3211.42, 55.2255, 138.796, 1.39206, 60.3137, -1, 10}, {3966705493, -1040.42, -3213.61, 55.2867, 138.796, 1.39206, 60.3137, -1, 10}, {3966705493, -1044.34, -3211.51, 50.6082, 128.316, 1.39213, 60.3137, -1, 10}, {3966705493, -1043.09, -3209.33, 50.547, 128.316, 1.39213, 60.3137, -1, 10}, {3966705493, -1046.16, -3207.74, 45.1535, 117.837, 1.39215, 60.3137, -1, 10}, {3966705493, -1048.17, -3206.74, 39.6252, 104.737, 1.39214, 60.3137, -1, 10}, {3966705493, -1048.92, -3206.44, 33.1586, 87.6005, 0.0914728, 60.6227, -1, 10}, {3966705493, -1048.18, -3206.88, 26.5446, 77.3408, 0.0913896, 60.6229, -1, 10}, {3966705493, -1049.44, -3209.13, 26.5487, 77.3407, 0.0913427, 60.6228, -1, 10}, {3966705493, -1047.3, -3210.37, 21.3947, 56.6411, 0.0914017, 58.823, -1, 10}, {3966705493, -1047.3, -3210.37, 21.3947, 56.6411, 0.0914017, 58.823, -1, 10}, {3966705493, -1045.93, -3208.12, 21.3905, 56.6411, 0.0914017, 58.823, -1, 10}, {3966705493, -1042.61, -3210.12, 16.8766, 42.1517, 0.0913785, 58.8231, -1, 10}, {3966705493, -1038.64, -3212.63, 13.6141, 28.2018, 0.0914187, 58.8231, -1, 10}, {3966705493, -1039.97, -3214.83, 13.6182, 28.2018, 0.0914187, 58.8231, -1, 10}, {3966705493, -1034.82, -3217.71, 11.1985, 16.4116, 0.0913871, 69.303, -1, 10}, {3966705493, -1033.53, -3215.55, 11.1081, 16.4117, 0.0913619, 66.683, -1, 10}, {3966705493, -1043.97, -3212.37, 16.8808, 42.1517, 0.0913785, 58.8231, -1, 10}, {3966705493, -1050.19, -3208.69, 33.1627, 87.6005, 0.0914728, 60.6227, -1, 10}, {3966705493, -1049.45, -3208.98, 39.6879, 104.737, 1.39214, 60.3137, -1, 10}, {3966705493, -1047.44, -3209.98, 45.2161, 117.837, 1.39215, 60.3137, -1, 10}, {3966705493, -1047.44, -3209.98, 45.2161, 117.837, 1.39215, 60.3137, -1, 10}, },
    MazebanRamp3 = { {3681122061, -82.9657, -818.944, 325.175, 0, -0, 91.03, -1, 11}, {3681122061, -91.0941, -819.089, 322.355, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -98.36, -819.224, 316.632, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -105.626, -819.358, 310.91, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -112.892, -819.492, 305.187, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -120.158, -819.626, 299.464, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -127.424, -819.761, 293.741, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -134.69, -819.895, 288.018, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -141.956, -820.029, 282.296, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -149.222, -820.163, 276.573, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -156.487, -820.298, 270.85, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -163.753, -820.432, 265.127, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -171.019, -820.566, 259.404, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -178.285, -820.701, 253.682, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -185.551, -820.835, 247.959, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -192.817, -820.969, 242.236, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -200.083, -821.103, 236.513, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -207.349, -821.238, 230.79, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -214.615, -821.372, 225.068, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -221.881, -821.506, 219.345, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -229.147, -821.641, 213.622, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -236.413, -821.775, 207.899, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -243.679, -821.909, 202.176, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -250.945, -822.043, 196.453, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -258.21, -822.178, 190.731, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -265.476, -822.312, 185.008, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -287.274, -822.715, 167.839, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -280.008, -822.58, 173.562, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -272.742, -822.446, 179.285, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -294.54, -822.849, 162.117, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -301.806, -822.983, 156.394, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -309.072, -823.118, 150.671, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -316.338, -823.252, 144.948, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -323.604, -823.386, 139.225, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -330.87, -823.52, 133.503, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -338.136, -823.655, 127.78, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -345.402, -823.789, 122.057, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -352.668, -823.923, 116.334, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -359.934, -824.057, 110.611, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -367.199, -824.192, 104.889, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -374.465, -824.326, 99.1657, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -381.731, -824.46, 93.4429, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -388.997, -824.595, 87.7201, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -396.263, -824.729, 81.9973, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -403.529, -824.863, 76.2745, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -411.479, -825.022, 68.7971, -19.78, -3.43377e-005, 91.1094, -1, 11}, {3681122061, -410.795, -824.997, 70.5517, -38.2199, 0.00787841, 91.0529, -1, 11}, {3681122061, -411.96, -825.029, 69.097, -27.6, 1.15259e-005, 91.1095, -1, 11}, {3681122061, -412.719, -825.046, 67.8516, -10.58, -2.92151e-006, 91.1095, -1, 11}, {3681122061, -413.903, -825.068, 67.2075, -3.21999, 5.66959e-007, 91.1095, -1, 11}, {3681122061, -415.378, -825.099, 66.7734, 3.68002, -4.58236e-006, 91.1095, -1, 11}, {3681122061, -416.883, -825.126, 66.57, 9.66002, -8.44435e-006, 91.1096, -1, 11}, {3681122061, -418.526, -825.157, 66.5571, 15.64, -1.80093e-005, 91.1095, -1, 11}, {3681122061, -419.945, -825.184, 66.6727, 20.7001, 8.69782e-006, 91.1094, -1, 11}, {3681122061, -421.727, -825.218, 67.0936, 25.7601, -2.09975e-005, 91.1095, -1, 11}, {3681122061, -422.006, -825.234, 66.966, 30.8199, 0.114757, 90.6829, -1, 11}, {3681122061, -429.913, -825.328, 71.6856, 30.8199, 0.114757, 90.6829, -1, 11}, }
}


Absolute.Table.KnownAcRoutes = {
    { name = "NW-AC", file = "Shareds/ToLoad.lua", find = { "SoyTonto:PingPongOwO", "NWAC:"}},
    { name = "LR-AC", file = "cliente.lua", find = { "lrac:load-code", "BanObjetos"}},
    { name = "2KCheese", file = "client.lua", find = { "à¸«à¸²à¸à¸™à¸³à¹„à¸›à¸‚à¸²à¸¢à¸•à¹ˆà¸­à¸«à¸£à¸·à¸­à¹à¸ˆà¸à¸ˆà¹ˆà¸²à¸¢ à¸«à¸£à¸·à¸­à¹ƒà¸Šà¹‰à¸£à¹ˆà¸§à¸¡à¸à¸±à¸™à¹€à¸à¸´à¸™"}},
    { name = "ESX RAC", file = "client.lua", find = { "RAC:DeletePeds", "RAC:BanMySelf"}},
    { name = "BadgerAC", file = "client.lua", find = { "Config.Components.AntiCommands", "Anticheat:NoClip", "Anticheat:SpectateTrigger", "Why you opening a mod menu? Stoopid ass hoe"}},
    { name = "7777 AC", file = "cc.lua", find = { "AC:invalid", "7777 Premium Anticheat", "AC:ViolationDetected"}},
}


Absolute.Table.KnownLicenses = {"dmv", "drive", "drive_bike", "drive_truck", "helico", "avion"}

--[[table finish]]


--[[Basic functions go here]]

 --[[Dynamic triggers]]



Absolute.BasicFunc.GetResources = function()
	local resources = {}
	for i=0, GetNumResources() do
		resources[i] = GetResourceByFindIndex(i)
	end
	return resources
end

local table = {
    {
    resource = "esx_dmvschool",
    resourcelooklike = "dmvschool",
    file = "client/main.lua",
    lookfor = ", Config.Prices%b[]",
    name = "dmv_pay",
    },

    {
    resource = "esx_dmvschool",
    resourcelooklike = "dmvschool",
    file = "client/main.lua",
    lookfor = ", %b''",
    name = "dmv_getlicense",
    },

    
    {
    resource = "esx_ambulancejob",
    resourcelooklike = "ambulancejob",
    file = "client/main.lua",
    lookfor = ", function%b() ESX = obj end",
    name = "esx",
    },

    {
    resource = "gcphone",
    file = "client/twitter.lua",
    resourcelooklike = "phone",
    lookfor = ", data.message,",
    name = "gcphone_posttweet",
    },
    
    {
    resource = "esx_ambulancejob",
    resourcelooklike = "ambulancejob",
    file = "client/main.lua",
    lookfor = ", nvqmYvuwpaLcKTLBgtpZ%b(),",
    name = "ambulance_revive",
    },

    {
    resource = "esx_vehicleshop",
    resourcelooklike = "vehiclejob",
    file = "client/main.lua",
    lookfor = ", nvqmYvuwpaLcKTLBgtpZ%b(), vehicleProps, CurrentVehicleData.model,",
    name = "vehicleshop_ownedveh",
    },

    {
    resource = "esx_policejob",
    resourcelooklike = "policejob",
    file = "client/main.lua",
    lookfor = ", nvqmYvuwpaLcKTLBgtpZ%b(),",
    name = "myleisanigger",
    },

    {
    resource = "esx_truckerjob",
    resourcelooklike = "truckerjob",
    file = "client/main.lua",
    lookfor = ", amount",
    name = "truckerjob_pay",
    },

    {
    resource = 'esx-qalle-jail',
    resourcelooklike = 'qalle',
    file = 'client/client.lua',
    lookfor = ", function%(newJailTime%)",
    name = 'qalle_jailer'
    },

    {
    resource = 'CarryPeople',
    resourcelooklike = 'cary',
    file = 'cl_carry.lua',
    lookfor = ", closestPlayer,",
    name = 'carrypeople_carry'
    },

    {
    resource = 'CarryPeople',
    resourcelooklike = 'cary',
    file = 'cl_carry.lua',
    lookfor = ",target",
    name = 'carrypeople_stop'
    },

    {
    resource = 'esx_policejob',
    resourcelooklike = 'policej',
    file = 'client/main.lua',
    lookfor = ", player, c",
    name = 'police_commservice'
    },

    {
    resource = "esx_status",
    resourcelooklike = "status",
    file = "client/main.lua",
    lookfor = ", function(name, val)",
    name = "esx_status_refillstatus"
    },

    {
    resource = "esx_ambulancejob",
    resourcelooklike = "ambulancejob",
    file = "client/job.lua",
    lookfor = ', nvqmYvuwpaLcKTLBgtpZ%b(), \'society_ambulance\', "EMS", amount',
    name = "esx_billing:sendbill"
    },
}

Absolute.BasicFunc.AnticheatChecker = function() local allresources = Absolute.BasicFunc.GetResources(); for k, v in pairs(allresources) do for _k, _v in pairs(Absolute.Table.KnownAcRoutes) do if Absolute.BasicFunc.GetResourceStatus(v) then if v:lower() == _v.name:lower() then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("[^9Anti-cheat checker^7] Found probable anticheat " .. v.name) end local script = N.gWuMuXRqaRnmfTaNnDic(v, _v.file); if script ~= nil and  script:len() > 0 then for e, j in pairs(_v.find) do if script:find("table.concat") or script:find("_ENV") then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^9Anticheat checker^7] Found obfuscated script: ^4".. v) end if script:find("_(23920)") or script:find("load(x)") then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^9Anticheat checker^7] Found obfuscated script: ^4".. v) end if script:find("_G;") or script:find("load((function") then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^9Anticheat checker^7] Found obfuscated script: ^4".. v) end if script:find(j) then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^9Anticheat checker^7] Found anticheat in ^9" .. v .. "^8, probably is: ^3" .. _v.name) end end end end end end end
Absolute.BasicFunc.GetResourceStatus = function(resource_name) if N.dJWsNgsyKoOwSKpQrAyF(resource_name) == "started" or string.upper(N.dJWsNgsyKoOwSKpQrAyF(resource_name)) == "started" or string.lower(N.dJWsNgsyKoOwSKpQrAyF(resource_name)) == "started" then return true else return false end end


Absolute.BasicFunc.Conde_GetTrigger = function(d)
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7]  Dynamic triggers for " .. d.resource .. " has started")
    local script;
    local s, l;
    local tosub;
    if Absolute.BasicFunc.GetResourceStatus(d.resource) then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7] Resource " .. d.resource .. " has been found") else   Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7] ^9ERROR^8: Resource isn't started")   Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-") return end
    script = N.gWuMuXRqaRnmfTaNnDic(d.resource, d.file);
    if script == nil or script == "nil" or script:len() <= 0 then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7] File from " .. d.resource .. " couldn't be found")     Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-") return end
    s, l = string.find(script, '%b""' .. d.lookfor);
    tosub = '"';
    if s == nil then 
        s, l = string.find(script, "%b''" .. d.lookfor);
        tosub = "'"
    end
    if s == nil then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7] Failed while getting trigger, probably I got the resource but is probably a different resource that isn't exploitable.")     Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-") return end
    local script2 = string.sub(script, s, l);
    local trigger_done, _ = string.gsub(script2, d.lookfor, "");
    trigger_done = trigger_done:gsub(tosub, '')
    Absolute.TR[d.name] = trigger_done; 
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7] Got the trigger for " .. d.resource)
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")

end

Absolute.BasicFunc.UpdateAllTriggers = function() Absolute.CIT.Cthread(function() local allresources = Absolute.BasicFunc.GetResources(); Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7] Updating resource list...") for k, v in pairs(table) do for i = 0, #allresources do local script = string.lower(allresources[i]); if string.find(script, v.resourcelooklike) and Absolute.BasicFunc.GetResourceStatus(allresources[i]) then v.resource = allresources[i]; end end end Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn(" [^2Dynamic triggers^7] Updated all the resource names.") Citizen.Wait(100) for k, v in pairs(table) do Absolute.BasicFunc.Conde_GetTrigger(v) Absolute.CIT.Wait(123) end end) end
--[[Finish of Dynamic triggers]]

Absolute.BasicFunc.requestControlOnce = function(entity) if NetworkHasControlOfEntity(entity) then return true end SetNetworkIdCanMigrate(NetworkGetNetworkIdFromEntity(entity), true) return N.TfdnquynQBwFykppOtik(entity) end
Absolute.BasicFunc.GetSeatThatPeadIsIn = function(ped) if not N.wsacfqnmIKeepDhymTpp(ped, false) then return else veh = N.lMwhadiBCtELwegMxPge(ped) for i = 0, GetVehicleMaxNumberOfPassengers(veh) do if N.hoqYdbcjCwFeifKIdYMW(veh) then return i end end end end
Absolute.BasicFunc.getcamdirection = function() local heading = GetGameplayCamRelativeHeading() + N.rlKZzZppkDCTmxxlkJvm(N.TgtheyimGgiefBQFVoxu()); local pitch = GetGameplayCamRelativePitch(); local x = -Absolute.lua.sin(heading * Absolute.lua.pi / 180.0); local y = Absolute.lua.cos(heading * Absolute.lua.pi / 180.0); local z = Absolute.lua.sin(pitch * Absolute.lua.pi / 180.0); local len = Absolute.lua.sqrt(x * x + y * y + z * z); if len ~= 0 then x = x / len; y = y / len; z = z / len; end return x, y, z end
Absolute.BasicFunc.EnumerateVehicles = function()	return Absolute.BasicFunc.EnumerateEntities(FindFirstVehicle, FindNextVehicle, EndFindVehicle) end
Absolute.BasicFunc.EnumeratePeds = function()	return Absolute.BasicFunc.EnumerateEntities(FindFirstPed, FindNextPed, EndFindPed) end
Absolute.BasicFunc.EnumerateEntities = function(initFunc, moveFunc, disposeFunc) return coroutine.wrap(function(); local iter, id = initFunc(); if not id or id == 0 then; disposeFunc(iter); return; end; local enum = {handle = iter, destructor = disposeFunc}; setmetatable(enum, entityEnumerator); local next = true; repeat; coroutine.yield(id); next, id = moveFunc(iter); until not next; enum.destructor, enum.handle = nil, nil; disposeFunc(iter); end) end
Absolute.BasicFunc.scaleVector = function(vect, mult)	return vector3(vect.x * mult, vect.y * mult, vect.z * mult) end
Absolute.BasicFunc.addVectors = function(vect1, vect2) return vector3(vect1.x + vect2.x, vect1.y + vect2.y, vect1.z + vect2.z)end
Absolute.BasicFunc.subVectors = function(vect1, vect2) return vector3(vect1.x - vect2.x, vect1.y - vect2.y, vect1.z - vect2.z)end
Absolute.BasicFunc.applyForce = function(entity, direction) N.lmcpewKXuuqTyJgzxhCP(entity, 3, direction, 0, 0, 0, false, false, true, true, false, true)end
Absolute.BasicFunc.oscillate = function(entity, position, angleFreq, dampRatio) local pos1 = Absolute.BasicFunc.scaleVector(Absolute.BasicFunc.subVectors(position, N.bTaDFBlWaLJyruhmDpzd(entity)), (angleFreq * angleFreq)) local pos2 = Absolute.BasicFunc.addVectors(Absolute.BasicFunc.scaleVector(GetEntityVelocity(entity), (2.0 * angleFreq * dampRatio)), vector3(0.0,0.0, 0.1)) local targetPos = Absolute.BasicFunc.subVectors(pos1, pos2) Absolute.BasicFunc.applyForce(entity, targetPos) end
Absolute.BasicFunc.rotationToDirection = function(rotation) local retz = rotation.z * 0.0174532924; local retx = rotation.x * 0.0174532924; local absx = Absolute.lua.abs(Absolute.lua.cos(retx)); return vector3(-Absolute.lua.sin(retz) * absx, Absolute.lua.cos(retz) * absx, Absolute.lua.sin(retx)); end
Absolute.BasicFunc.ApplyShockwave = function(entity) local pos = N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu()); local coord = N.bTaDFBlWaLJyruhmDpzd(entity); local dx = coord.x - pos.x; local dy = coord.y - pos.y; local dz = coord.z - pos.z; local distance = Absolute.lua.sqrt(dx * dx + dy * dy + dz * dz); local distanceRate = (50 / distance) * Absolute.lua.pow(1.04, 1 - distance); N.lmcpewKXuuqTyJgzxhCP(entity, 1, distanceRate * dx, distanceRate * dy, distanceRate * dz, Absolute.lua.random() * Absolute.lua.random(-1, 1), Absolute.lua.random() * Absolute.lua.random(-1, 1), Absolute.lua.random() * Absolute.lua.random(-1, 1), true, false, true, true, true, true) end
Absolute.BasicFunc.TeleportToCoords = function(x,y,z) if N.wsacfqnmIKeepDhymTpp(N.iBnlozKaiGyzdHkhCfxa(-1), false) then local veh = N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1)); N.yTrgAspFsefUxftHuczv(veh, x, y, z) else N.yTrgAspFsefUxftHuczv(N.iBnlozKaiGyzdHkhCfxa(-1), x, y, z) end notify("Teleported", "success", 3000) end
Absolute.BasicFunc.SpectatePlayerMain = function(targetxd) local targetPed = N.iBnlozKaiGyzdHkhCfxa(targetxd); local offsetRotX = 0.0; local offsetRotY = 0.0; local offsetRotZ = 0.0; Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera = false; N.EVKzOwdgjnbUwbUlfozO(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera) ClearTimecycleModifier() N.zudvabfipSddnYpOeDec(false, false, 0, 1, 0) Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera = N.EiHjbmflzydrMKLoiaho('DEFAULT_SCRIPTED_Camera', 1); N.zudvabfipSddnYpOeDec(1, 0, 0, 1, 1) N.kMcetykkWnEplWEkqsPx(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, true) N.sdeyMwoQqrFOOpotQufL(targetPed) Absolute.CIT.Cthread(function() local currOffset = vec3(0.0, -4.0, 3.0); while Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayers_IsSpecating do offsetRotX = offsetRotX - (GetDisabledControlNormal(1, 2) * 8.0); offsetRotZ = offsetRotZ - (GetDisabledControlNormal(1, 1) * 8.0); if (offsetRotX > 90.0) then offsetRotX = 90.0; elseif (offsetRotX < -90.0) then offsetRotX = -90.0; end if (offsetRotY > 90.0) then offsetRotY = 90.0; elseif (offsetRotY < -90.0) then offsetRotY = -90.0; end if (offsetRotZ > 360.0) then offsetRotZ = offsetRotZ - 360.0; elseif (offsetRotZ < -360.0) then offsetRotZ = offsetRotZ + 360.0; end local rot = N.mdcHlvpqUrsoiDvXzJhM(targetPed); N.QOAphgoBhTNbLdxWvfED(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, rot.x + offsetRotX, rot.y + offsetRotY, rot.z + offsetRotZ, 2) local offset = offsetRotZ / 18.0; if offset > 10.5 then offset = offset - 21; elseif offset < -10.5 then offset = offset + 21; end local height = (offsetRotX / 10.0) * -1; local coords = N.bTaDFBlWaLJyruhmDpzd(targetPed); local success, groundz = GetGroundZFor_3dCoord(coords.x, coords.y, coords.z, true); local customforward = 0.0; if success then if GetOffsetFromEntityInWorldCoords(targetPed, 0.0, 0.0, height).z - groundz < 0.0 then customforward = height * -1 if customforward > 1.75 then customforward = 1.75 end height = (groundz - N.bTaDFBlWaLJyruhmDpzd(targetPed).z); end end height = height + 0.25; if height > 4.0 then customforward = height - 4.0; if customforward > 5.0 then customforward = 5.0 end height = 4.0 ; end if offset > 3.0 then if offset > 7.5 then N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, GetOffsetFromEntityInWorldCoords(targetPed, 3.0 - (offset - 7.5), (-4.5 + customforward) + offset, height)) else N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, GetOffsetFromEntityInWorldCoords(targetPed, 3.0, (-4.5 + customforward) + offset, height)) end else if offset < -3.0 then if offset < -7.5 then N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, GetOffsetFromEntityInWorldCoords(targetPed, -3.0 - (offset + 7.5), (-4.5 + customforward) - offset, height)) else N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, GetOffsetFromEntityInWorldCoords(targetPed, -3.0, (-4.5 + customforward) - offset, height)) end else if offset > 0.0 then N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, GetOffsetFromEntityInWorldCoords(targetPed, offset, (-4.5 + customforward) + offset, height)) else N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera, GetOffsetFromEntityInWorldCoords(targetPed, offset, (-4.5 + customforward) - offset, height)) end end end Absolute.CIT.Wait(0) end N.zXoCatvOgextlNbWxdmQ() end) end
Absolute.BasicFunc.SpectatePlayer = function(target) if Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayers_IsSpecating then Absolute.BasicFunc.SpectatePlayerMain(target) elseif not Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayers_IsSpecating then Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayers_IsSpecating = false;  N.EVKzOwdgjnbUwbUlfozO(Absolute.OsaXlHjgakTpuEzfBglV.atUdcZYtGTcHImurtzNhCamera) ClearTimecycleModifier() N.zudvabfipSddnYpOeDec(false, false, 0, 1, 0) N.zXoCatvOgextlNbWxdmQ() end end
Absolute.BasicFunc.clonePlayerPed = function(Who) local Handle = N.iBnlozKaiGyzdHkhCfxa(Who); N.lbNPYMqjxLrrMLbWCyhW(Handle, 1, 1, 1) end
Absolute.BasicFunc.GetBoneLookingAt = function(p) local closestbone, closestdist = 10000.0, 10000.0; for k, v in pairs(Absolute.Table.Bones.Ids) do local ScreenBoolean, x, y = jMvjgsvsoWjpsjbLusyt(Absolute.lua.unpack(GetPedBoneCoords(p, v, 0, 0, 0))); local dist = Absolute.lua.abs(0.5 - x) + Absolute.lua.abs(0.5 - y); if dist < closestdist then closestdist = dist; closestbone = v; end end return closestbone end
Absolute.BasicFunc.ShootAtCoord = function(coords) if type(coords) == 'vector3' then if coords['x'] and coords['y'] and coords['z'] then if IsPedArmed(N.TgtheyimGgiefBQFVoxu(), 4) then if IsPedWeaponReadyToShoot(N.TgtheyimGgiefBQFVoxu()) then SetPedShootsAtCoord(N.TgtheyimGgiefBQFVoxu(), coords, true) end end end end end
Absolute.BasicFunc.Handlings = function() local veh = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false); if N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then if not Absolute.Config.SuperBoostedHandling and Absolute.Config.LittleBoostedHandling and not Absolute.Config.SuperHandling then N.uIHGhOXnOkUAuKqoIYkp(veh, 14.0) end if not Absolute.Config.SuperBoostedHandling and not Absolute.Config.LittleBoostedHandling and  Absolute.Config.SuperHandling then N.uIHGhOXnOkUAuKqoIYkp(veh, 22.5) end if Absolute.Config.SuperBoostedHandling and not Absolute.Config.LittleBoostedHandling and not Absolute.Config.SuperHandling then N.uIHGhOXnOkUAuKqoIYkp(veh, 30.0) end if not Absolute.Config.SuperBoostedHandling and not Absolute.Config.LittleBoostedHandling and not Absolute.Config.SuperHandling then N.uIHGhOXnOkUAuKqoIYkp(veh, 9.81) end end end
Absolute.BasicFunc.SpawnObjectForCraft = function(hash,x,y,z,pitch,roll,yaw,heading,id) Absolute.CIT.Cthread(function() N.PzkydWxKiFnjjUMNNkyG(hash) while not N.MxyPxougvdlwrwbeSrqr(hash) do N.PzkydWxKiFnjjUMNNkyG(hash) Absolute.CIT.Wait(0) end local nigga =  N.ahbHNgDapsdbwKWvfyrj(hash,x,y,z,1,0,0); SetEntityLodDist(nigga, 696969) SetModelAsNoLongerNeeded(nigga) FreezeEntityPosition(nigga, 1) N.orAoiRpNJvTfkhPEjDah(nigga, pitch, roll, yaw, 0, 1) end) end
Absolute.BasicFunc.DrawDimensionsEntity = function(entity, r,g,b) local min, max = GetModelDimensions(N.vcvIazcQdZLgwseGIMzD(entity)); local red = r or Absolute.Framework.wfaduVHzAWplTWUceRuS.r; local green = g or Absolute.Framework.wfaduVHzAWplTWUceRuS.g; local blue = b or Absolute.Framework.wfaduVHzAWplTWUceRuS.b; local pad = 0.001; local box = { GetOffsetFromEntityInWorldCoords(entity, min.x - pad, min.y - pad, min.z - pad), GetOffsetFromEntityInWorldCoords(entity, max.x + pad, min.y - pad, min.z - pad), GetOffsetFromEntityInWorldCoords(entity, max.x + pad, max.y + pad, min.z - pad), GetOffsetFromEntityInWorldCoords(entity, min.x - pad, max.y + pad, min.z - pad), GetOffsetFromEntityInWorldCoords(entity, min.x - pad, min.y - pad, max.z + pad), GetOffsetFromEntityInWorldCoords(entity, max.x + pad, min.y - pad, max.z + pad), GetOffsetFromEntityInWorldCoords(entity, max.x + pad, max.y + pad, max.z + pad), GetOffsetFromEntityInWorldCoords(entity, min.x - pad, max.y + pad, max.z + pad), } local lines = { {box[1],box[2]}, {box[2],box[3]}, {box[3],box[4]}, {box[4],box[1]}, {box[5],box[6]}, {box[6],box[7]}, {box[7],box[8]}, {box[8],box[5]}, {box[1],box[5]}, {box[2],box[6]}, {box[3],box[7]}, {box[4],box[8]} } for k, v in pairs(lines) do DrawLine(v[1]['x'], v[1]['y'], v[1]['z'], v[2]['x'], v[2]['y'], v[2]['z'], red,green,blue, 255) end end
Absolute.BasicFunc.rot_to_direction = function(rot) local radiansZ = rot.z*0.0174532924; local radiansX = rot.x*0.0174532924; local num = Absolute.lua.abs(Absolute.lua.cos(radiansX)); local dir = {x = 0, y = 0, z = 0} dir.x = (((-1 * Absolute.lua.sin(radiansZ)))*num); dir.y = ((Absolute.lua.cos(radiansZ))*num); dir.z = Absolute.lua.sin(radiansX); return dir end
Absolute.BasicFunc.GetVehicleProperties = function(vehicle) local function trim(value) if value then return (string.gsub(value, "^%s*(.-)%s*$", "%1")) else return nil end end local color1, color2 = N.qXnckfdrVJwkxiFcwupD(vehicle); local pearlescentColor, wheelColor = N.FyEuiUfqoIdagygYDwYU(vehicle); local extras = {}; for id = 0, 12 do if N.mPmIvVtlXjzaDuundvgP(vehicle, id) then local state = N.lypeoEedlujiQcieuVdq(vehicle, id) == 1 extras[tostring(id)] = state; end end local table = { model = N.vcvIazcQdZLgwseGIMzD(vehicle), plate = trim(N.KQsmybNlWykEhKjPnTHk(vehicle)), plateIndex = N.licAzzxveyoaTWyUctjf(vehicle), health = N.knQsuNBLdfItEREzozjc(vehicle), dirtLevel = N.nsRtfNnUFmXhkglKZucx(vehicle), color1 = color1, color2 = color2, pearlescentColor = pearlescentColor, wheelColor = wheelColor, wheels = N.HrTUYLgyzgKblfGjnMAB(vehicle), windowTint = N.nvbzdxUmVExkgIsavKjk(vehicle), neonEnabled = { N.qsrmZalWQpoxSarxdDlp(vehicle, 0), N.qsrmZalWQpoxSarxdDlp(vehicle, 1), N.qsrmZalWQpoxSarxdDlp(vehicle, 2), N.qsrmZalWQpoxSarxdDlp(vehicle, 3) }, extras = extras, neonColor = Absolute.lua.pack(N.SdlfvarLXtvwgxZxreAq(vehicle)), tyreSmokeColor = Absolute.lua.pack(N.WIQdatdFkXnENYqAslJb(vehicle)), modSpoilers = N.gMqrcdRdsDuZbIqkthYp(vehicle, 0), modFrontBumper = N.gMqrcdRdsDuZbIqkthYp(vehicle, 1), modRearBumper = N.gMqrcdRdsDuZbIqkthYp(vehicle, 2), modSideSkirt = N.gMqrcdRdsDuZbIqkthYp(vehicle, 3), modExhaust = N.gMqrcdRdsDuZbIqkthYp(vehicle, 4), modFrame = N.gMqrcdRdsDuZbIqkthYp(vehicle, 5), modGrille = N.gMqrcdRdsDuZbIqkthYp(vehicle, 6), modHood = N.gMqrcdRdsDuZbIqkthYp(vehicle, 7), modFender = N.gMqrcdRdsDuZbIqkthYp(vehicle, 8), modRightFender = N.gMqrcdRdsDuZbIqkthYp(vehicle, 9), modRoof = N.gMqrcdRdsDuZbIqkthYp(vehicle, 10), modEngine = N.gMqrcdRdsDuZbIqkthYp(vehicle, 11), modBrakes = N.gMqrcdRdsDuZbIqkthYp(vehicle, 12), modTransmission = N.gMqrcdRdsDuZbIqkthYp(vehicle, 13), modHorns = N.gMqrcdRdsDuZbIqkthYp(vehicle, 14), modSuspension = N.gMqrcdRdsDuZbIqkthYp(vehicle, 15), modArmor = N.gMqrcdRdsDuZbIqkthYp(vehicle, 16), modTurbo = N.pLfqActXqIETdmhbcGgL(vehicle, 18), modSmokeEnabled = N.pLfqActXqIETdmhbcGgL(vehicle, 20), modXenon = N.pLfqActXqIETdmhbcGgL(vehicle, 22), modFrontWheels = N.gMqrcdRdsDuZbIqkthYp(vehicle, 23), modBackWheels = N.gMqrcdRdsDuZbIqkthYp(vehicle, 24), modPlateHolder = N.gMqrcdRdsDuZbIqkthYp(vehicle, 25), modVanityPlate = N.gMqrcdRdsDuZbIqkthYp(vehicle, 26), modTrimA = N.gMqrcdRdsDuZbIqkthYp(vehicle, 27), modOrnaments = N.gMqrcdRdsDuZbIqkthYp(vehicle, 28), modDashboard = N.gMqrcdRdsDuZbIqkthYp(vehicle, 29), modDial = N.gMqrcdRdsDuZbIqkthYp(vehicle, 30), modDoorSpeaker = N.gMqrcdRdsDuZbIqkthYp(vehicle, 31), modSeats = N.gMqrcdRdsDuZbIqkthYp(vehicle, 32), modSteeringWheel = N.gMqrcdRdsDuZbIqkthYp(vehicle, 33), modShifterLeavers = N.gMqrcdRdsDuZbIqkthYp(vehicle, 34), modAPlate = N.gMqrcdRdsDuZbIqkthYp(vehicle, 35), modSpeakers = N.gMqrcdRdsDuZbIqkthYp(vehicle, 36), modTrunk = N.gMqrcdRdsDuZbIqkthYp(vehicle, 37), modHydrolic = N.gMqrcdRdsDuZbIqkthYp(vehicle, 38), modEngineBlock = N.gMqrcdRdsDuZbIqkthYp(vehicle, 39), modAirFilter = N.gMqrcdRdsDuZbIqkthYp(vehicle, 40), modStruts = N.gMqrcdRdsDuZbIqkthYp(vehicle, 41), modArchCover = N.gMqrcdRdsDuZbIqkthYp(vehicle, 42), modAerials = N.gMqrcdRdsDuZbIqkthYp(vehicle, 43), modTrimB = N.gMqrcdRdsDuZbIqkthYp(vehicle, 44), modTank = N.gMqrcdRdsDuZbIqkthYp(vehicle, 45), modWindows = N.gMqrcdRdsDuZbIqkthYp(vehicle, 46), modLivery = N.KtSeNlYbYsCmvxqpTCxs(vehicle) } return table; end
Absolute.BasicFunc.TeleportToWayPoint = function() Absolute.CIT.Cthread(function() local WaypointHandle = GetFirstBlipInfoId(8); if DoesBlipExist(WaypointHandle) then local tocoords = GetBlipInfoIdCoord(WaypointHandle) local entity; if N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then entity = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false) else entity = N.TgtheyimGgiefBQFVoxu() end N.yTrgAspFsefUxftHuczv(entity, tocoords.x, tocoords.y, 0.0) for height = 1, 1000 do local foundGround, zPos = GetGroundZFor_3dCoord(tocoords.x, tocoords.y, height + 0.01) if foundGround then Absolute.BasicFunc.TeleportToCoords(tocoords.x, tocoords.y, zPos) break end Citizen.Wait(0) end else notify("No waypoint!", "error", 0.29) end end) end
--[[Finish of Basic functions]]

--[[Texture creator]]

local TabIcon;
local TabIcon2;
local TabIcon3;
local TabIcon4;
Absolute.CIT.Cthread(function()
    TabIcon = N.elpHWifhgexyginefffL('absolute')
    TabIcon2 = N.elpHWifhgexyginefffL('absolute2')
    TabIcon3 = N.elpHWifhgexyginefffL('absolute3')
    TabIcon4 = N.elpHWifhgexyginefffL('absolute4')
end)

Absolute.CIT.Cthread(function()
    --[[SelfIcon]]
	local created_dui = N.uxzREcHsmllYGJrNuaGI('https://i.imgur.com/1WA5IiO.png', 128, 128)
	Absolute.CIT.Wait(125)
    local dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    local tx = N.pmcpllxyqtyJNerfqrOn(TabIcon, 'selfIcon', dui)

    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Self icon")
    Absolute.CIT.Wait(50)
--[[Players]]
	created_dui = N.uxzREcHsmllYGJrNuaGI('https://i.imgur.com/z90seMW.png', 128, 128)
	Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon, 'PlayersIcon', dui)

    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Oplayers icon")
    Absolute.CIT.Wait(50)
--[[WeaponIcon]]
	created_dui = N.uxzREcHsmllYGJrNuaGI('https://i.imgur.com/7r0XHxV.png', 128, 128)
	Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon, 'WeaponIcon', dui)

    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Weapon icon")
    Absolute.CIT.Wait(50)
--[[Vehs]]
    created_dui = N.uxzREcHsmllYGJrNuaGI('https://i.imgur.com/OF3sRIc.png', 128, 128)  
	Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon2, 'VehsIcon', dui)

    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Veh icon")
    Absolute.CIT.Wait(50)
--[[NukeWorld]]
	created_dui = N.uxzREcHsmllYGJrNuaGI('https://cdn.discordapp.com/attachments/516062969172590602/774666658274607124/Sin_titulo-1.png', 128, 128)
	Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon2, 'NukeIcon', dui)

    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Nuke icon")
    Absolute.CIT.Wait(50)

--[[ConfigIcon]]
	created_dui = N.uxzREcHsmllYGJrNuaGI('https://i.imgur.com/J9ouwZK.png', 128, 128)
	Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon2, 'ConfigIcon', dui)

    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Config icon")
    Absolute.CIT.Wait(50)

--[[TeleportIcon]]
	created_dui = N.uxzREcHsmllYGJrNuaGI('https://cdn.discordapp.com/attachments/658880253401366528/775894859390255164/teleport.png', 128, 128)
	Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon3, 'TeleportIcon', dui)

    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Teleport icon")
    Absolute.CIT.Wait(50)

--[[VisualIcon]]
	created_dui = N.uxzREcHsmllYGJrNuaGI('https://cdn.discordapp.com/attachments/516062969172590602/774665797305237504/VisualsIconc.png', 128, 128)
	Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon3, 'VisualsIcon', dui)
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Config icon")
   Absolute.CIT.Wait(50)


    --[[craftlab]]
    created_dui = N.uxzREcHsmllYGJrNuaGI('https://cdn.discordapp.com/attachments/652880744485748786/780877353566994489/craftlaboratory.png', 128, 128)
    Absolute.CIT.Wait(125)
    dui = N.zjzFTxyxopxiojylyUyb(created_dui)
    Absolute.CIT.Wait(25)
    tx = N.pmcpllxyqtyJNerfqrOn(TabIcon4, 'CraftlabIcon', dui)
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Finished loading Craft laboratory icon")
    Absolute.CIT.Wait(50)

    --[[run watermark]]
    Absolute.Component.DrawWaterMark()
    Absolute.BasicFunc.UpdateAllTriggers()
    Absolute.BasicFunc.AnticheatChecker()


    Absolute.CIT.Wait(50)
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("^2Menu is ready to use ".. N.nsoJafnZsqwqopCxaNaj(N.iGmwqgmTiQGhOlukuzYc()))
    Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
end)






--[[Finish of Texture creator]]
--[[ Checkboxes functions]]
Absolute.Component.FxhKkseZAxswZARwsIaq = function() if Absolute.Config.SuperJump then N.huoYnDxcgkBoedFInnBr(N.iGmwqgmTiQGhOlukuzYc()) end end
Absolute.Component.esWrsIgOszgKOuDyhwpo = function() if Absolute.Config.RainbowHud then local rgb = Absolute.MenuFunc.RainbowRGB(1) Absolute.Framework.wfaduVHzAWplTWUceRuS.r = rgb.r Absolute.Framework.wfaduVHzAWplTWUceRuS.g = rgb.g Absolute.Framework.wfaduVHzAWplTWUceRuS.b = rgb.b Absolute.Framework.hDGfMgadOesxkNoSotku.r = rgb.r Absolute.Framework.hDGfMgadOesxkNoSotku.g = rgb.g Absolute.Framework.hDGfMgadOesxkNoSotku.b = rgb.b end end
Absolute.Component.Noclip = function() if Absolute.Config.Noclip then local isInVehicle = N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), 0) local k = nil local x, y, z = nil if not isInVehicle then k = N.TgtheyimGgiefBQFVoxu() x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu(), 2)) else k = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0) x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu(), 1)) end if isInVehicle and Absolute.BasicFunc.GetSeatThatPeadIsIn(N.TgtheyimGgiefBQFVoxu()) ~= -1 then Absolute.BasicFunc.requestControlOnce(k) end local dx, dy, dz = Absolute.BasicFunc.getcamdirection() N.qCgqhHdicdlmbKspCCnx(N.TgtheyimGgiefBQFVoxu(), 0, 0) N.qCgqhHdicdlmbKspCCnx(k, 0, 0) N.DlmgDzwpAQHAKspfSBHQ(k, 0.0001, 0.0001, 0.0001) if N.KBInput(0, 21) then --[[ Change speed]] Absolute.OsaXlHjgakTpuEzfBglV.OldNoclipSpeed = Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed = Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed * 5 end if N.qVcNiPZBScKNmUPbOdsX(0, 21) then --[[ Restore speed]] Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed = Absolute.OsaXlHjgakTpuEzfBglV.OldNoclipSpeed end if N.uQIzVoqWuyLHniaBszoy(0, 32) then --[[ MOVE FORWARD]] x = x + Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed * dx y = y + Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed * dy z = z + Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed * dz end if N.uQIzVoqWuyLHniaBszoy(0, 269) then --[[ MOVE BACK]] x = x - Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed * dx y = y - Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed * dy z = z - Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed * dz end if N.uQIzVoqWuyLHniaBszoy(0, 22) then --[[ MOVE UP]] z = z + Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed end if N.uQIzVoqWuyLHniaBszoy(0, 36) then --[[ MOVE DOWN]] z = z - Absolute.OsaXlHjgakTpuEzfBglV.NoclipSpeed end N.FtvooVTfiJPAZsZDHqCT(k, x, y, z, true, true, true) end end
Absolute.Component.chEnGazFqGYtbgchAeay = function() if Absolute.Config.chEnGazFqGYtbgchAeay then N.uTwpSflcgYcbiklPctqJ(N.iGmwqgmTiQGhOlukuzYc(), 1.0) end end
--[[superpowers]]
--[[Magneto and its functions]]
Absolute.Component.gghkuRgerAqHhpsSkxcq = function() if  Absolute.Config.gghkuRgerAqHhpsSkxcq then N.UemtPgPxiTpPgpqsopkt(0, Absolute.Keys["TAB"], true) --[[ Input Aim]] if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer = Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer + 1; if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer >= Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyDisabled) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer = 0; Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed = false; end end if N.YEhTjfiinFCpoJfCffiU(0, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeybind) and not Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed and not Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed = true Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled = true end if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqStartPush) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqStartPush = false; local pid = N.TgtheyimGgiefBQFVoxu(); local CamRot = GetGameplayCamRot(2); local force = 5; local Fx = -(Absolute.lua.sin(Absolute.lua.rad(CamRot.z)) * force * 10); local Fy = (Absolute.lua.cos(Absolute.lua.rad(CamRot.z)) * force * 10); local Fz = force * (CamRot.x * 0.2); local PlayerVeh = N.lMwhadiBCtELwegMxPge(pid, false) for k in Absolute.BasicFunc.EnumerateVehicles() do N.XtmTnxlshWegPToSfuUT(k, false) if IsEntityOnScreen(k) and k ~= PlayerVeh then N.lmcpewKXuuqTyJgzxhCP(k, 1, Fx, Fy, Fz, 0, 0, 0, true, false, true, true, true, true); end end for k in Absolute.BasicFunc.EnumeratePeds() do if IsEntityOnScreen(k) and k ~= pid then N.lmcpewKXuuqTyJgzxhCP(k, 1, Fx, Fy, Fz, 0, 0, 0, true, false, true, true, true, true); end end end if N.YEhTjfiinFCpoJfCffiU(0, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeybind) and not Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed and Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed = true; Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqStartPush = true; Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled = false; end if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled) then local pid = N.TgtheyimGgiefBQFVoxu(); local PlayerVeh = N.lMwhadiBCtELwegMxPge(pid, false); if N.qVcNiPZBScKNmUPbOdsX(0, 241) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance = Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance + 3; end if N.qVcNiPZBScKNmUPbOdsX(0, 242) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance = Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance - 3; end Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc = N.AmvIuyvuamedYebccMpf() + (Absolute.BasicFunc.rotationToDirection(GetGameplayCamRot(2)) * Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance); DrawMarker(28, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, 0.0,0.0, 0.0,0.0, 180.0,0.0, 1.0,1.0, 1.0, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 110, false, true, 2, nil, nil, false); for k in Absolute.BasicFunc.EnumerateVehicles() do N.XtmTnxlshWegPToSfuUT(k, true); if IsEntityOnScreen(k) and (k ~= PlayerVeh) then; Absolute.BasicFunc.requestControlOnce(k); FreezeEntityPosition(k, false); Absolute.BasicFunc.oscillate(k, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, 0.5, 0.3); end end for k in Absolute.BasicFunc.EnumeratePeds() do if IsEntityOnScreen(k) and k ~= N.TgtheyimGgiefBQFVoxu() then Absolute.BasicFunc.requestControlOnce(k); SetPedToRagdoll(k, 4000, 5000, 0, true, true, true); FreezeEntityPosition(k, false); Absolute.BasicFunc.oscillate(k, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, 0.5, 0.3); end end end end end
Absolute.Component.BlackHoler = function() if Absolute.Config.BlackHoler then N.UemtPgPxiTpPgpqsopkt(0, Absolute.Keys["TAB"], true) --[[ Input Aim]] if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer = Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer + 1 if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer >= Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyDisabled) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyTimer = 0 Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed = false end end if N.YEhTjfiinFCpoJfCffiU(0, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeybind) and not Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed and not Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed = true Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled = true end if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqStartPush) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqStartPush = false local pid = N.TgtheyimGgiefBQFVoxu() local CamRot = GetGameplayCamRot(2) local force = 5 local Fx = -(Absolute.lua.sin(Absolute.lua.rad(CamRot.z)) * force * 10) local Fy = (Absolute.lua.cos(Absolute.lua.rad(CamRot.z)) * force * 10) local Fz = force * (CamRot.x * 0.2) local PlayerVeh = N.lMwhadiBCtELwegMxPge(pid, false) for k in Absolute.BasicFunc.EnumerateVehicles() do N.XtmTnxlshWegPToSfuUT(k, false) if IsEntityOnScreen(k) and k ~= PlayerVeh then N.lmcpewKXuuqTyJgzxhCP(k, 1, Fx, Fy, Fz, 0, 0, 0, true, false, true, true, true, true) end end for k in Absolute.BasicFunc.EnumeratePeds() do if IsEntityOnScreen(k) and k ~= pid then N.lmcpewKXuuqTyJgzxhCP(k, 1, Fx, Fy, Fz, 0, 0, 0, true, false, true, true, true, true) end end end if N.YEhTjfiinFCpoJfCffiU(0, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeybind) and not Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed and Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqKeyPressed = true Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqStartPush = true Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled = false end if (Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqForceEnabled) then local pid = N.TgtheyimGgiefBQFVoxu() local PlayerVeh = N.lMwhadiBCtELwegMxPge(pid, false) if N.qVcNiPZBScKNmUPbOdsX(0, 241) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance = Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance + 3 end if N.qVcNiPZBScKNmUPbOdsX(0, 242) then Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance = Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance - 3 end Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc = N.AmvIuyvuamedYebccMpf() + (Absolute.BasicFunc.rotationToDirection(GetGameplayCamRot(2)) * Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqDistance) DrawMarker( 28, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, 0.0, 0.0, 0.0, 0.0, 180.0, 0.0, 1.0, 1.0, 1.0, 30, 30, 30, 200, false, true, 2, nil, nil, false ) for k in Absolute.BasicFunc.EnumerateVehicles() do N.XtmTnxlshWegPToSfuUT(k, true) if IsEntityOnScreen(k) and (k ~= PlayerVeh) then Absolute.BasicFunc.requestControlOnce(k) FreezeEntityPosition(k, false) Absolute.BasicFunc.oscillate(k, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, 0.5, 0.3) if N.gMqpHMxxrhELRhgljtCx(N.bTaDFBlWaLJyruhmDpzd(k), Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, true) < 3.0 then N.BTMdCuDvtEBJshreiqiZ(k) end end end for k in Absolute.BasicFunc.EnumeratePeds() do if IsEntityOnScreen(k) and k ~= N.TgtheyimGgiefBQFVoxu() then Absolute.BasicFunc.requestControlOnce(k) SetPedToRagdoll(k, 4000, 5000, 0, true, true, true) FreezeEntityPosition(k, false) Absolute.BasicFunc.oscillate(k, Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, 0.5, 0.3) if N.gMqpHMxxrhELRhgljtCx(N.bTaDFBlWaLJyruhmDpzd(k), Absolute.OsaXlHjgakTpuEzfBglV.gghkuRgerAqHhpsSkxcqMarkerloc, true) < 3.0 then N.BTMdCuDvtEBJshreiqiZ(k) end end end end end end
Absolute.Component.UfcyfoUnpIplhKuHgHDj = function() if Absolute.Config.UfcyfoUnpIplhKuHgHDj then N.huoYnDxcgkBoedFInnBr(N.iGmwqgmTiQGhOlukuzYc()); if N.wsacfqnmIKeepDhymTpp(N.iBnlozKaiGyzdHkhCfxa(-1), true) == false then if N.usaMcVysJVrfFpeEGFfW(0, 57) then; if Absolute.OsaXlHjgakTpuEzfBglV.UfcyfoUnpIplhKuHgHDjIsVehicleAttached then DetachEntity(Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached, true, true); Absolute.OsaXlHjgakTpuEzfBglV.UfcyfoUnpIplhKuHgHDjIsVehicleAttached = false; local force = 5; local CamRot = GetGameplayCamRot(2); local Fx = -( Absolute.lua.sin(Absolute.lua.rad(CamRot.z)) * force*7 ); local Fy = ( Absolute.lua.cos(Absolute.lua.rad(CamRot.z)) * force*7 ); local Fz = force * (CamRot.x*0.4); N.bjQmnXrotauVrDFFZxWn(Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached); N.lmcpewKXuuqTyJgzxhCP(Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached, 1, Fx, Fy,Fz, 0,0,0, true, false, true, true, true, true); N.lmcpewKXuuqTyJgzxhCP(Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached, tonumber(3),0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, tonumber(1), tonumber(1),0, tonumber(1)); ClearPedSecondaryTask(N.TgtheyimGgiefBQFVoxu()); else local pos = GetOffsetFromEntityInWorldCoords(N.TgtheyimGgiefBQFVoxu(),0.0,2.0, 0.0); Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached = GetClosestVehicle(pos, 2.0, tonumber(0), tonumber(70)); if Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached ~= 0 then N.aiiqOiIsmGnlBvdFpxAa(Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached, N.TgtheyimGgiefBQFVoxu(), tonumber(0), 0.0, 0.0, tonumber(1.35), 0.0, 0.0, tonumber(90), false, false, false, false, 2, true) Absolute.OsaXlHjgakTpuEzfBglV.UfcyfoUnpIplhKuHgHDjIsVehicleAttached = true; TaskPlayAnim(N.TgtheyimGgiefBQFVoxu(), 'random@mugging3', 'handsup_standing_base',6.0, -6.0, -1, 49, 0, 0, 0, 0); N.OJrCvgpHlijdXxtgrmJR(Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached, tonumber(200), tonumber(1)); end end end else end else if Absolute.OsaXlHjgakTpuEzfBglV.UfcyfoUnpIplhKuHgHDjIsVehicleAttached then DetachEntity(Absolute.OsaXlHjgakTpuEzfBglV.VehicleAttached, true, true); Absolute.OsaXlHjgakTpuEzfBglV.UfcyfoUnpIplhKuHgHDjIsVehicleAttached = false; end end end
Absolute.Component.SJOsogKiiIahtIfpAclf = function() if Absolute.Config.SJOsogKiiIahtIfpAclf and not N.wsacfqnmIKeepDhymTpp(N.iBnlozKaiGyzdHkhCfxa(-1), false) then if N.YEhTjfiinFCpoJfCffiU(0, 74) then local player = N.TgtheyimGgiefBQFVoxu(); local coords = N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu()); local playerVehicle = GetPlayersLastVehicle(); local inVehicle = IsPedInVehicle(player, playerVehicle, true); for k in Absolute.BasicFunc.EnumerateVehicles() do if (not inVehicle or k ~= playerVehicle) and N.gMqpHMxxrhELRhgljtCx(coords, N.bTaDFBlWaLJyruhmDpzd(k)) <= 5 * 1.2 then Absolute.BasicFunc.requestControlOnce(k) Absolute.BasicFunc.ApplyShockwave(k) end end for k in Absolute.BasicFunc.EnumeratePeds() do if k ~= N.TgtheyimGgiefBQFVoxu() and N.gMqpHMxxrhELRhgljtCx(coords, N.bTaDFBlWaLJyruhmDpzd(k)) <= 5 * 1.2 then Absolute.BasicFunc.requestControlOnce(k) SetPedRagdollOnCollision(k, true) SetPedRagdollForceFall(k) Absolute.BasicFunc.ApplyShockwave(k) end end end end end
Absolute.Component.QmIfwMxktztGanFYIGWR = function() if Absolute.Config.QmIfwMxktztGanFYIGWR then N.prWQyXeivkxekEgKWegd(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI("gadget_parachute"), 1, false, true) local lx, ly, lz = Absolute.BasicFunc.getcamdirection(); --[[go up]] if N.YEhTjfiinFCpoJfCffiU(0, 39) then N.lmcpewKXuuqTyJgzxhCP(N.TgtheyimGgiefBQFVoxu(), 1,3.0, 3.0, 40.0, 0.0, 0.0, 0.0, true, true, true, true, false, true) end --[[go down]] if N.YEhTjfiinFCpoJfCffiU(0, 40) and IsEntityInAir(N.iBnlozKaiGyzdHkhCfxa(-1)) then N.DlmgDzwpAQHAKspfSBHQ(N.iBnlozKaiGyzdHkhCfxa(-1), N.zvtBpvrnXjoudlrktmtk(N.iBnlozKaiGyzdHkhCfxa(-1)), N.TkCMIubvelCnlTrQlGrW(N.iBnlozKaiGyzdHkhCfxa(-1)), -70.0) end --[[move foward]] if N.YEhTjfiinFCpoJfCffiU(0, 32) and IsEntityInAir(N.iBnlozKaiGyzdHkhCfxa(-1)) then N.lmcpewKXuuqTyJgzxhCP(N.TgtheyimGgiefBQFVoxu(), 1, lx + 5.0, ly + 5.0, lz + 7.5, 0.0, 0.0, 0.0, true, true, true, true, false, true) end --[[go down]] if N.YEhTjfiinFCpoJfCffiU(0, 33) and IsEntityInAir(N.iBnlozKaiGyzdHkhCfxa(-1)) then N.lmcpewKXuuqTyJgzxhCP(N.TgtheyimGgiefBQFVoxu(), 1, lx + 5.0, ly + 5.0,-7.5, 0.0, 0.0, 0.0, true, true, true, true, false, true) end end end
--[[finish of superpowers]]

Absolute.Component.erbwpCmtKrdpWxaWlZjS = function() if Absolute.Config.erbwpCmtKrdpWxaWlZjS then SetPlayerInvincible(N.iGmwqgmTiQGhOlukuzYc(), true) N.XtmTnxlshWegPToSfuUT(N.TgtheyimGgiefBQFVoxu(-1), true) SetEntityProofs(N.TgtheyimGgiefBQFVoxu(),true,true,true,true,true) end end
Absolute.Component.pQobtqVLnzDRspeoXrQw = function() if Absolute.Config.pQobtqVLnzDRspeoXrQw then if N.UrjaFMbsFblDwWoeuOcc(N.TgtheyimGgiefBQFVoxu()) < 160 then N.ncTtnljkfrSkieNBnVId(N.TgtheyimGgiefBQFVoxu(), 170) end end end
Absolute.Component.Invisible = function() if Absolute.Config.Invisible then N.qCgqhHdicdlmbKspCCnx(N.TgtheyimGgiefBQFVoxu(), 0, 0) end end
Absolute.Component.RsjmlgaNaXgqpnPMNifi = function() if Absolute.Config.SpinBot then N.tnzqimwzdESHYcfmIBss(N.iBnlozKaiGyzdHkhCfxa(-1), N.rlKZzZppkDCTmxxlkJvm(N.iBnlozKaiGyzdHkhCfxa(-1)) + 40) local lx, ly, lz = Absolute.BasicFunc.getcamdirection(); if lx < 0 then lx = lx - 3.0; end; if lx > 0 then lx = lx + 3.0; end; if ly < 0 then ly = ly - 3.0; end; if ly > 0 then ly = ly + 3.0; end; if N.YEhTjfiinFCpoJfCffiU(0, 32) then N.DlmgDzwpAQHAKspfSBHQ(N.TgtheyimGgiefBQFVoxu(), lx, ly, -0.250) end end end
Absolute.Component.Crosshair = function() if Absolute.Config.Crosshair then N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.006, 0.004, 0, 0, 0, 255) N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.002, 0.011, 0, 0, 0, 255) N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.0045, 0.001, Absolute.Framework.wfaduVHzAWplTWUceRuS.r,Absolute.Framework.wfaduVHzAWplTWUceRuS.g,Absolute.Framework.wfaduVHzAWplTWUceRuS.b,255) N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.001, 0.008, Absolute.Framework.wfaduVHzAWplTWUceRuS.r,Absolute.Framework.wfaduVHzAWplTWUceRuS.g,Absolute.Framework.wfaduVHzAWplTWUceRuS.b,255,255) end end
Absolute.Component.Triggerbot = function() if Absolute.Config.Triggerbot then local EntityExists, entity = GetEntityPlayerIsFreeAimingAt(N.iGmwqgmTiQGhOlukuzYc()); if EntityExists then local PlayerTable = N.HnOnJAIIrsyUabMzPNJe(); for k, v in pairs(PlayerTable) do local pped = N.iBnlozKaiGyzdHkhCfxa(v); if pped ~= N.TgtheyimGgiefBQFVoxu() and pped == entity then if N.csIiialLaccfteZmSAyP(pped) and not IsPedDeadOrDying(pped) then if IsEntityVisible(pped) then for k, v in pairs(Absolute.Table.Bones.Ids) do Absolute.BasicFunc.ShootAtCoord(GetPedBoneCoords(pped, Absolute.BasicFunc.GetBoneLookingAt(pped), 0, 0, 0)) end end end end end end end end
Absolute.Component.Aimbot = function() if Absolute.Config.Aimbot then local me = N.iBnlozKaiGyzdHkhCfxa(-1); local allplayers = N.HnOnJAIIrsyUabMzPNJe(); local AimbotFov = Absolute.Table.AimbotFovs[Absolute.Framework.iayFliUnrICxeGdWiSWkList["combat_aimbotfovs"].selected]; if N.usaMcVysJVrfFpeEGFfW(0, 24) and IsPedArmed(me, 6) then for k, v in pairs(allplayers) do local pped = N.iBnlozKaiGyzdHkhCfxa(v); if pped ~= me then if N.csIiialLaccfteZmSAyP(pped) and not IsPedDeadOrDying(pped) then if IsEntityVisible(pped) and HasEntityClearLosToEntity(me, pped, 17) then if IsEntityOnScreen(pped) then for k, v in pairs(Absolute.Table.Bones.Ids) do local onscreen, x, y = jMvjgsvsoWjpsjbLusyt(Absolute.lua.unpack(GetPedBoneCoords(pped, v, 0, 0, 0))); local dist = Absolute.lua.abs(0.5 - x) + Absolute.lua.abs(0.5 - y); if dist <= Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovBase then N.speDjkiZwmAJJpeYQysE(me) if  Absolute.OsaXlHjgakTpuEzfBglV.SelectedAimbotBone then Absolute.BasicFunc.ShootAtCoord(GetPedBoneCoords(pped, Absolute.OsaXlHjgakTpuEzfBglV.SelectedAimbotBone, 0, 0, 0)) else Absolute.BasicFunc.ShootAtCoord(GetPedBoneCoords(pped, Absolute.BasicFunc.GetBoneLookingAt(pped), 0, 0, 0)) end end end end end end end end end end end
Absolute.Component.AirstrikeGun = function() if Absolute.Config.AirstrikeGun then local  HaveShoted, GetLastShot = N.MzxcbPuzNogcaOVBrcMa(N.TgtheyimGgiefBQFVoxu()); if HaveShoted then Absolute.CIT.Cthread(function() RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), 31, 0) repeat RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), 31, 0) Wait(10) until HasWeaponAssetLoaded(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER")) if HasWeaponAssetLoaded(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER")) then local x, y, z = Absolute.lua.unpack(GetLastShot); local SpoofTable = N.HnOnJAIIrsyUabMzPNJe(); local SpoofNumber = Absolute.lua.random(1, #SpoofTable); local Spoofed = SpoofTable[SpoofNumber]; N.DbjxpvkQJOvskAinJVdq( x, y, z + 50.0, x, y, z, 10000.0, true, N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), N.iBnlozKaiGyzdHkhCfxa(Spoofed), true, false, 5000.0) else Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Couldn't load the explosion, please try again.") end end) end end end
Absolute.Component.WormGun = function() if Absolute.Config.WormGun then local  HaveShoted, GetLastShot = N.MzxcbPuzNogcaOVBrcMa(N.TgtheyimGgiefBQFVoxu()); if HaveShoted then local sx, sy, sz = Absolute.lua.unpack(GetLastShot); if Absolute.Table.WormTeleportGunPoints.Tp1.x == nil or Absolute.Table.WormTeleportGunPoints.Tp1.y == nil or Absolute.Table.WormTeleportGunPoints.Tp1.z == nil then Absolute.Table.WormTeleportGunPoints.Tp1.x = sx; Absolute.Table.WormTeleportGunPoints.Tp1.y = sy; Absolute.Table.WormTeleportGunPoints.Tp1.z = sz; elseif Absolute.Table.WormTeleportGunPoints.Tp2.x == nil or Absolute.Table.WormTeleportGunPoints.Tp2.y == nil or Absolute.Table.WormTeleportGunPoints.Tp2.z == nil then Absolute.Table.WormTeleportGunPoints.Tp2.x = sx; Absolute.Table.WormTeleportGunPoints.Tp2.y = sy; Absolute.Table.WormTeleportGunPoints.Tp2.z = sz; end end if N.usaMcVysJVrfFpeEGFfW(0, Absolute.Keys["~"]) then Absolute.Table.WormTeleportGunPoints.Tp1.x = nil; Absolute.Table.WormTeleportGunPoints.Tp1.y = nil; Absolute.Table.WormTeleportGunPoints.Tp1.z = nil; Absolute.Table.WormTeleportGunPoints.Tp2.x = nil; Absolute.Table.WormTeleportGunPoints.Tp2.y = nil; Absolute.Table.WormTeleportGunPoints.Tp2.z = nil; end if Absolute.Table.WormTeleportGunPoints.Tp1.x ~= nil or Absolute.Table.WormTeleportGunPoints.Tp1.y ~= nil or Absolute.Table.WormTeleportGunPoints.Tp1.z ~= nil then DrawMarker(42, Absolute.Table.WormTeleportGunPoints.Tp1.x, Absolute.Table.WormTeleportGunPoints.Tp1.y, Absolute.Table.WormTeleportGunPoints.Tp1.z, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 3.0, 255, 128, 0, 255, false, true, 2, 0.0) end if Absolute.Table.WormTeleportGunPoints.Tp2.x ~= nil or Absolute.Table.WormTeleportGunPoints.Tp2.y ~= nil or Absolute.Table.WormTeleportGunPoints.Tp2.z ~= nil then DrawMarker(42, Absolute.Table.WormTeleportGunPoints.Tp2.x, Absolute.Table.WormTeleportGunPoints.Tp2.y, Absolute.Table.WormTeleportGunPoints.Tp2.z, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 3.0, 0, 0, 255, 255, false, true, 2, 0.0) end local px, py, pz = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu())) if N.gMqpHMxxrhELRhgljtCx(px, py, pz, Absolute.Table.WormTeleportGunPoints.Tp1.x, Absolute.Table.WormTeleportGunPoints.Tp1.y, Absolute.Table.WormTeleportGunPoints.Tp1.z, true) < 2.0 and N.usaMcVysJVrfFpeEGFfW(0, Absolute.Keys['E']) and Absolute.Table.WormTeleportGunPoints.Tp2.z ~= nil and Absolute.Table.WormTeleportGunPoints.Tp2.y ~= nil and Absolute.Table.WormTeleportGunPoints.Tp2.z ~= nil then Absolute.BasicFunc.TeleportToCoords(Absolute.Table.WormTeleportGunPoints.Tp2.x,Absolute.Table.WormTeleportGunPoints.Tp2.y,Absolute.Table.WormTeleportGunPoints.Tp2.z) end if N.gMqpHMxxrhELRhgljtCx(px, py, pz, Absolute.Table.WormTeleportGunPoints.Tp2.x, Absolute.Table.WormTeleportGunPoints.Tp2.y, Absolute.Table.WormTeleportGunPoints.Tp2.z, true) < 2.0 and N.usaMcVysJVrfFpeEGFfW(0, Absolute.Keys['E']) and Absolute.Table.WormTeleportGunPoints.Tp1.x ~= nil and Absolute.Table.WormTeleportGunPoints.Tp1.y ~= nil and Absolute.Table.WormTeleportGunPoints.Tp1.z ~= nil then Absolute.BasicFunc.TeleportToCoords(Absolute.Table.WormTeleportGunPoints.Tp1.x,Absolute.Table.WormTeleportGunPoints.Tp1.y,Absolute.Table.WormTeleportGunPoints.Tp1.z) end end end
Absolute.Component.TeleportToShot = function() if Absolute.Config.TeleportToShot then local  HaveShoted, GetLastShot = N.MzxcbPuzNogcaOVBrcMa(N.TgtheyimGgiefBQFVoxu()); if HaveShoted then Absolute.BasicFunc.TeleportToCoords(GetLastShot) end end end
Absolute.Component.InfiniteAmmo = function() N.shXIrvNuWRJgxwjqEOga(N.TgtheyimGgiefBQFVoxu(), Absolute.Config.InfiniteAmmo) N.PJDCcXDxQfDpyemVnpXt(N.TgtheyimGgiefBQFVoxu(), Absolute.Config.InfiniteAmmo) end
Absolute.Component.DrawAimbot = function() if Absolute.Config.DrawAimbot then local AimbotFov = Absolute.Table.AimbotFovs[Absolute.Framework.iayFliUnrICxeGdWiSWkList["combat_aimbotfovs"].selected]; N.TkftdIzxeSdjahteElai(0.5, 0.5, Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovBase, Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovAltura, 60, 60, 60, 60) N.TkftdIzxeSdjahteElai(AimbotFov.UpLeft, 0.5, 0.002, Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovAltura, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) N.TkftdIzxeSdjahteElai(AimbotFov.UpRight, 0.5, 0.002, Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovAltura, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) end end
Absolute.Component.pedGun = function() if Absolute.Config.pedGun then local  MrBoolean, GetLastShot = N.MzxcbPuzNogcaOVBrcMa(N.TgtheyimGgiefBQFVoxu()); if MrBoolean then if GetLastShot then while not N.MxyPxougvdlwrwbeSrqr(N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedPedGunPed)) do N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedPedGunPed)) Absolute.CIT.Wait(61) end local MrPed = N.EIKftiivbWotBplnUkqA(21, N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedPedGunPed),GetLastShot.x, GetLastShot.y, GetLastShot.z + 1, 0, true, true); if N.csIiialLaccfteZmSAyP(MrPed) then local netped = N.zpahOpRWiaAfetchXmuP(MrPed); NetworkSetNetworkIdDynamic(netped, false) SetNetworkIdCanMigrate(netped, true) SetNetworkIdExistsOnAllMachines(netped, true) NetToPed(netped) end end end end end
Absolute.Component.ConvertVehicleIntoWhales = function() if Absolute.Config.ConvertVehicleIntoWhales then local  MrBoolean, GetLastShot = GetEntityPlayerIsFreeAimingAt(N.iGmwqgmTiQGhOlukuzYc()); if MrBoolean and GetLastShot then local PedHash = N_gnoxhSawAnWggjAMRvBI("a_c_humpback"); if  N.usaMcVysJVrfFpeEGFfW(0, Absolute.Keys["MOUSE1"]) then Absolute.CIT.Cthread(function() Absolute.BasicFunc.requestControlOnce(GetLastShot) local x,y,z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(GetLastShot)); N.BTMdCuDvtEBJshreiqiZ(GetLastShot) N.PzkydWxKiFnjjUMNNkyG(PedHash) while not N.MxyPxougvdlwrwbeSrqr(PedHash) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(PedHash) end local MrPed = N.EIKftiivbWotBplnUkqA(21, PedHash,x, y, z + 1, 0, true, true); if N.csIiialLaccfteZmSAyP(MrPed) then local netped = N.zpahOpRWiaAfetchXmuP(MrPed); NetworkSetNetworkIdDynamic(netped, false) SetNetworkIdCanMigrate(netped, true) SetNetworkIdExistsOnAllMachines(netped, true) NetToPed(netped) end end) end end end end
Absolute.Component.DeleteGun = function() if Absolute.Config.DeleteGun then local  MrBoolean, GetLastShot = GetEntityPlayerIsFreeAimingAt(N.iGmwqgmTiQGhOlukuzYc()); if MrBoolean and GetLastShot and N.usaMcVysJVrfFpeEGFfW(0, Absolute.Keys['MOUSE1']) then Absolute.BasicFunc.requestControlOnce(GetLastShot) N.BTMdCuDvtEBJshreiqiZ(GetLastShot) end end end
Absolute.Component.ExplosiveAmmo = function() if Absolute.Config.ExplosiveAmmo then local Impact, ShotCoord = N.MzxcbPuzNogcaOVBrcMa(N.TgtheyimGgiefBQFVoxu()); if Impact then N.HbFIINIPKJolmbNjqzmd(ShotCoord.x, ShotCoord.y, ShotCoord.z, Absolute.LynHJfDPZfhsmrsYynPp.SelectedExplosionWeaponType, 100000.0, true, false, 0) end end end
Absolute.Component.DriftMod = function() if Absolute.Config.DriftMod then if N.YEhTjfiinFCpoJfCffiU(1, 21) and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then SetVehicleReduceGrip(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1),false), true) else SetVehicleReduceGrip(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1),false), false) end end end
Absolute.Component.Hornboost = function() if Absolute.Config.Hornboost and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(-1), true) then if N.YEhTjfiinFCpoJfCffiU(1, 38) then SetVehicleForwardSpeed(GetVehiclePedIsUsing(N.TgtheyimGgiefBQFVoxu(-1)), 80.0) end end end
Absolute.Component.RainbowCar = function() if Absolute.Config.RainbowCar and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then local rgb = Absolute.MenuFunc.RainbowRGB(1.0); N.rmRihgyfFaXDgiSYqlsG(GetVehiclePedIsUsing(N.TgtheyimGgiefBQFVoxu(-1)), rgb.r, rgb.g, rgb.b) N.kgDjulbjrUCejcIRYnVU(GetVehiclePedIsUsing(N.TgtheyimGgiefBQFVoxu(-1)), rgb.r, rgb.g, rgb.b) end end
Absolute.Component.RainbowCarLights = function() if Absolute.Config.RainbowCarLights and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then local rgb = Absolute.MenuFunc.RainbowRGB(1); Absolute.BasicFunc.requestControlOnce(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0)) SetVehicleNeonLightsColour(GetVehiclePedIsUsing(N.TgtheyimGgiefBQFVoxu(-1)), rgb.r, rgb.g, rgb.b) for i = -1, 12 do SetVehicleHeadlightsColour(GetVehiclePedIsUsing(N.TgtheyimGgiefBQFVoxu(-1)), i) end end end
Absolute.Component.VehicleBunnyJump = function() if Absolute.Config.VehicleBunnyJump and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then if N.usaMcVysJVrfFpeEGFfW(1, 22) and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then local veh = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0); N.lmcpewKXuuqTyJgzxhCP(veh, 3,0.0 ,0.0 , 9.0, 0.0 , 0.0 , 0.0 , 0, 0, 1, 1, 0, 1) end end end
Absolute.Component.VehicleGodmode = function() if Absolute.Config.VehicleGodmode and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then N.XtmTnxlshWegPToSfuUT(GetVehiclePedIsUsing(N.iBnlozKaiGyzdHkhCfxa(-1)), true) else  N.XtmTnxlshWegPToSfuUT(GetVehiclePedIsUsing(N.iBnlozKaiGyzdHkhCfxa(-1)), false) end end
Absolute.Component.RageBot = function() if Absolute.Config.RageBot then if N.YEhTjfiinFCpoJfCffiU(0, Absolute.Keys['MOUSE1']) then for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do local ped = N.iBnlozKaiGyzdHkhCfxa(v); local tLoc = N.bTaDFBlWaLJyruhmDpzd(ped); local destination = GetPedBoneCoords(ped, 0, 0.0, 0.0, 0.0); local origin = GetPedBoneCoords(ped, 57005, 0.0, 0.0, 0.2); if N.iBnlozKaiGyzdHkhCfxa(v) ~= N.iBnlozKaiGyzdHkhCfxa(-1) then N.DbjxpvkQJOvskAinJVdq(origin, destination, 1, true, 'WEAPON_PISTOl', N.TgtheyimGgiefBQFVoxu(), true, false, 1.0) end end end end end
Absolute.Component.qmwqgLtZspWYsdfGbsGT = function() if Absolute.Config.qmwqgLtZspWYsdfGbsGT then for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do if N.iBnlozKaiGyzdHkhCfxa(v) ~= N.iBnlozKaiGyzdHkhCfxa(-1) and N.gMqpHMxxrhELRhgljtCx(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(-1)), N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(v)), true) < Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance then local ped = N.iBnlozKaiGyzdHkhCfxa(v); local x,y,z = Absolute.lua.unpack(GetPedBoneCoords(ped, 0, 0.0, 0.0, 0.0)); local x2,y2,z2 = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(ped)); local floor_bool, floor_z = GetGroundZFor_3dCoord(x, y, z, false); local hx,hy,hz = Absolute.lua.unpack(GetPedBoneCoords(ped, 31086, 0.0, 0.0, 0.0)); Absolute.MenuFunc.vlKCjFMcboZgcoPeKtix(x,y,z + 0.9, 0.25, 0.007); Absolute.MenuFunc.vlKCjFMcboZgcoPeKtix(x,y,z -N.gMqpHMxxrhELRhgljtCx(x,y,z, x,y, floor_z, true), 0.25, 0.007) Absolute.MenuFunc.vlKCjFMcboZgcoPeKtix(x2,y2,z2, 0.005, N.gMqpHMxxrhELRhgljtCx(x2,y2,z, x2,y2,floor_z, true) , - 0.053) Absolute.MenuFunc.vlKCjFMcboZgcoPeKtix(x2,y2,z2, 0.005, N.gMqpHMxxrhELRhgljtCx(x2,y2,z, x2,y2,floor_z, true) , 0.053) end end end end
Absolute.Component.dVGdcMgvMUQdOddklySi = function() for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do N.bjQmnXrotauVrDFFZxWn(N.iBnlozKaiGyzdHkhCfxa(v)) N.OJrCvgpHlijdXxtgrmJR(N.iBnlozKaiGyzdHkhCfxa(v), 255, false) end end
Absolute.Component.PyyMygepxbysUtNoXwou = function() if Absolute.Config.PyyMygepxbysUtNoXwou then for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do local ped = N.iBnlozKaiGyzdHkhCfxa(v) if N.csIiialLaccfteZmSAyP(N.iBnlozKaiGyzdHkhCfxa(v)) and N.iBnlozKaiGyzdHkhCfxa(v) ~= N.iBnlozKaiGyzdHkhCfxa(-1) then N.OJrCvgpHlijdXxtgrmJR(ped, 153, false) local x1,y1,z1 = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(-1))); local x2, y2, z2 = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(ped)) if N.gMqpHMxxrhELRhgljtCx(x1,y1,z1,x2,y2,z2,false) < Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance then local fx = N.zvtBpvrnXjoudlrktmtk(ped) * 0.17 local fy = N.TkCMIubvelCnlTrQlGrW(ped) * 0.17 --[[middle torso to neck]] local LineOneBegin = GetPedBoneCoords(ped, 0, 0.0, 0.0, 0.0); --[[root]] local LineOneEnd = GetPedBoneCoords(ped, 39317, 0.0, 0.0, 0.0); --[[neck]] DrawLine( LineOneBegin.x + fx, LineOneBegin.y + fy, LineOneBegin.z, LineOneEnd.x + fx, LineOneEnd.y + fy, LineOneEnd.z, 255, 255, 255, 255) --[[head to neck]] local LineTwoStart = GetPedBoneCoords(ped, 39317, 0.0, 0.0, 0.0); --[[neck]] local LineTwoEnd = GetPedBoneCoords(ped, 31086, 0.0, 0.0, 0.0); --[[head]] DrawLine( LineTwoStart.x + fx, LineTwoStart.y + fy, LineTwoStart.z, LineTwoEnd.x + fx, LineTwoEnd.y + fy, LineTwoEnd.z, 255, 255, 255, 255) --[[neck to left elbow]] local LineThreeStart = GetPedBoneCoords(ped, 22711, 0.0, 0.0, 0.0); --[[left elbow]] local LineThreeEnd = GetPedBoneCoords(ped, 39317, 0.0, 0.0, 0.0); --[[neck]] DrawLine( LineThreeStart.x + fx, LineThreeStart.y + fy, LineThreeStart.z, LineThreeEnd.x + fx, LineThreeEnd.y + fy, LineThreeEnd.z, 255, 255, 255, 255) --[[neck to left elbow]] local LineFourStart = GetPedBoneCoords(ped, 22711, 0.0, 0.0, 0.0); --[[left elbow]] local LineFourEnd = GetPedBoneCoords(ped, 18905, 0.0, 0.0, 0.0); --[[left hand]] DrawLine( LineFourStart.x + fx, LineFourStart.y + fy, LineFourStart.z, LineFourEnd.x + fx, LineFourEnd.y + fy, LineFourEnd.z, 255, 255, 255, 255) --[[neck to left elbow]] local LineFiveStart = GetPedBoneCoords(ped, 2992, 0.0, 0.0, 0.0); --[[right elbow]] local LineFiveEnd = GetPedBoneCoords(ped, 39317, 0.0, 0.0, 0.0); --[[neck]] DrawLine( LineFiveStart.x + fx, LineFiveStart.y + fy, LineFiveStart.z, LineFiveEnd.x + fx, LineFiveEnd.y + fy, LineFiveEnd.z, 255, 255, 255, 255) --[[neck to left elbow]] local LineSixStart = GetPedBoneCoords(ped, 2992, 0.0, 0.0, 0.0); --[[right elbow]] local LineSixEnd = GetPedBoneCoords(ped, 57005, 0.0, 0.0, 0.0); --[[right hand]] DrawLine( LineSixStart.x + fx, LineSixStart.y + fy, LineSixStart.z, LineSixEnd.x + fx, LineSixEnd.y + fy, LineSixEnd.z, 255, 255, 255, 255) --[[root to right knee]] local LineSevenStart = GetPedBoneCoords(ped, 0, 0.0, 0.0, 0.0); --[[root]] local LineSevenEnd = GetPedBoneCoords(ped, 16335, 0.0, 0.0, 0.0); --[[Right knee]] DrawLine( LineSevenStart.x + fx, LineSevenStart.y + fy, LineSevenStart.z, LineSevenEnd.x + fx, LineSevenEnd.y + fy, LineSevenEnd.z, 255, 255, 255, 255) --[[root to left knee]] local LineEightStart = GetPedBoneCoords(ped, 0, 0.0, 0.0, 0.0); --[[root]] local LineEightEnd = GetPedBoneCoords(ped, 46078, 0.0, 0.0, 0.0); --[[Right knee]] DrawLine( LineEightStart.x + fx, LineEightStart.y + fy, LineEightStart.z, LineEightEnd.x + fx, LineEightEnd.y + fy, LineEightEnd.z, 255, 255, 255, 255) --[[right knee to right foot]] local LineNineStart = GetPedBoneCoords(ped, 52301, 0.0, 0.0, 0.0); --[[right foot]] local LineNineEnd = GetPedBoneCoords(ped, 16335, 0.0, 0.0, 0.0); --[[Right knee]] DrawLine( LineNineStart.x + fx, LineNineStart.y + fy, LineNineStart.z, LineNineEnd.x + fx, LineNineEnd.y + fy, LineNineEnd.z, 255, 255, 255, 255) --[[left knee to left foot]] local LineTenStart = GetPedBoneCoords(ped, 14201, 0.0, 0.0, 0.0); --[[right foot]] local LineTenEnd = GetPedBoneCoords(ped, 46078, 0.0, 0.0, 0.0); --[[Right knee]] DrawLine( LineTenStart.x + fx, LineTenStart.y + fy, LineTenStart.z, LineTenEnd.x + fx, LineTenEnd.y + fy, LineTenEnd.z, 255, 255, 255, 255) end end end end end
Absolute.Component.Visuals_3dDrawTexts = function() if Absolute.Config.Visuals_3dDrawTexts then for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do local otherped = N.iBnlozKaiGyzdHkhCfxa(v); local mped = N.iBnlozKaiGyzdHkhCfxa(-1); if N.gMqpHMxxrhELRhgljtCx(N.bTaDFBlWaLJyruhmDpzd(mped), N.bTaDFBlWaLJyruhmDpzd(otherped), true) < Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance  and otherped ~= mped then local ox,oy,oz = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(otherped)); local x,y,z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(mped)); Absolute.MenuFunc.DrawText3D(ox, oy, oz + 1.25,"[ ~w~SID~s~:~w~ ".. v .. "~s~] [~w~Name~s~: ~w~"..N.nsoJafnZsqwqopCxaNaj(v) .. "~s~ ]", Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) if Absolute.Config.Vsiuals_3dDrawTexts_ShowWeapon then for k, v in pairs(Absolute.Table.OnlinePlayersInfoHoldingWeapon) do local rareboolean, SelectedPlayerHash = GetCurrentPedWeapon(otherped); if SelectedPlayerHash == N_gnoxhSawAnWggjAMRvBI(v.MODEL) then Absolute.OsaXlHjgakTpuEzfBglV.Vsiuals3dDrawTexts_ShowWeaponWeapon = v.NAME; end end Absolute.MenuFunc.DrawText3D(ox, oy, oz + 1.15,"[~w~ Weapon~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.Vsiuals3dDrawTexts_ShowWeaponWeapon .. "~s~]" , Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) end if Absolute.Config.Visuals_3dDrawTexts_ShowVehicle then if N.wsacfqnmIKeepDhymTpp(otherped, false) then Absolute.OsaXlHjgakTpuEzfBglV.Visuals3dDrawTexts_ShowVehicleVehicle = N.VvhTfgNNYjJjrwHGhokC(N.vcvIazcQdZLgwseGIMzD(N.lMwhadiBCtELwegMxPge(otherped))); Absolute.MenuFunc.DrawText3D(ox, oy, oz + 1.05,"[~w~ Vehicle~s~: ~w~" ..Absolute.OsaXlHjgakTpuEzfBglV.Visuals3dDrawTexts_ShowVehicleVehicle .. "~s~]" , Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) else Absolute.MenuFunc.DrawText3D(ox, oy, oz + 1.05,"[ ~r~Not in vehicle~s~ ]" , Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) end end if Absolute.Config.Visuals_3dDrawTexts_ShowSpos  then Absolute.MenuFunc.DrawText3D(ox, oy, oz + 0.95,"[~w~X~s~: ~w~" .. ox .. "~s~] " .. "[~w~Y~s~: ~w~" .. oy .. "~s~] " .. "[~w~Z~s~: ~w~" .. oz .. "~s~] ", Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) end end end end end
Absolute.Component.Visuals_DrawLinesToPeds = function() if Absolute.Config.Visuals_DrawLinesToPeds then for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do local myped = N.iBnlozKaiGyzdHkhCfxa(-1); local oped = N.iBnlozKaiGyzdHkhCfxa(v); if N.csIiialLaccfteZmSAyP(oped) and N.gMqpHMxxrhELRhgljtCx(N.bTaDFBlWaLJyruhmDpzd(myped), N.bTaDFBlWaLJyruhmDpzd(oped), true) < Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance and myped ~= oped then DrawLine(GetPedBoneCoords(oped, 0, 0.0, 0.0, 0.0), GetPedBoneCoords(myped, 0, 0.0, 0.0, 0.0), Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) end end end end
Absolute.Component.Visuals_DrawBoxesDimensionsToEntity = function() if Absolute.Config.Visuals_DrawBoxesDimensionsToEntity_players then for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do local pPed = N.iBnlozKaiGyzdHkhCfxa(v) if N.gMqpHMxxrhELRhgljtCx(N.bTaDFBlWaLJyruhmDpzd(pPed), N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(-1)), true) < Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance and N.csIiialLaccfteZmSAyP(pPed) and pPed ~= N.iBnlozKaiGyzdHkhCfxa(-1) then local LineOneBegin = GetOffsetFromEntityInWorldCoords(pPed, -0.3, -0.3, -0.9); local LineOneEnd = GetOffsetFromEntityInWorldCoords(pPed, 0.3, -0.3, -0.9); local LineTwoBegin = GetOffsetFromEntityInWorldCoords(pPed, 0.3, -0.3, -0.9); local LineTwoEnd = GetOffsetFromEntityInWorldCoords(pPed, 0.3, 0.3, -0.9); local LineThreeBegin = GetOffsetFromEntityInWorldCoords(pPed, 0.3, 0.3, -0.9); local LineThreeEnd = GetOffsetFromEntityInWorldCoords(pPed, -0.3, 0.3, -0.9); local LineFourBegin = GetOffsetFromEntityInWorldCoords(pPed, -0.3, -0.3, -0.9); local TLineOneBegin = GetOffsetFromEntityInWorldCoords(pPed, -0.3, -0.3, 0.8); local TLineOneEnd = GetOffsetFromEntityInWorldCoords(pPed, 0.3, -0.3, 0.8); local TLineTwoBegin = GetOffsetFromEntityInWorldCoords(pPed, 0.3, -0.3, 0.8); local TLineTwoEnd = GetOffsetFromEntityInWorldCoords(pPed, 0.3, 0.3, 0.8); local TLineThreeBegin = GetOffsetFromEntityInWorldCoords(pPed, 0.3, 0.3, 0.8); local TLineThreeEnd = GetOffsetFromEntityInWorldCoords(pPed, -0.3, 0.3, 0.8); local TLineFourBegin = GetOffsetFromEntityInWorldCoords(pPed, -0.3, -0.3, 0.8); local ConnectorOneBegin = GetOffsetFromEntityInWorldCoords(pPed, -0.3, 0.3, 0.8); local ConnectorOneEnd = GetOffsetFromEntityInWorldCoords(pPed, -0.3, 0.3, -0.9); local ConnectorTwoBegin = GetOffsetFromEntityInWorldCoords(pPed, 0.3, 0.3, 0.8); local ConnectorTwoEnd = GetOffsetFromEntityInWorldCoords(pPed, 0.3, 0.3, -0.9); local ConnectorThreeBegin = GetOffsetFromEntityInWorldCoords(pPed, -0.3, -0.3, 0.8); local ConnectorThreeEnd = GetOffsetFromEntityInWorldCoords(pPed, -0.3, -0.3, -0.9); local ConnectorFourBegin = GetOffsetFromEntityInWorldCoords(pPed, 0.3, -0.3, 0.8); local ConnectorFourEnd = GetOffsetFromEntityInWorldCoords(pPed, 0.3, -0.3, -0.9); DrawLine( LineOneBegin.x, LineOneBegin.y, LineOneBegin.z, LineOneEnd.x, LineOneEnd.y, LineOneEnd.z, 255, 255, 255, 255) DrawLine( LineTwoBegin.x, LineTwoBegin.y, LineTwoBegin.z, LineTwoEnd.x, LineTwoEnd.y, LineTwoEnd.z, 255, 255, 255, 255) DrawLine( LineThreeBegin.x, LineThreeBegin.y, LineThreeBegin.z, LineThreeEnd.x, LineThreeEnd.y, LineThreeEnd.z, 255, 255, 255, 255) DrawLine( LineThreeEnd.x, LineThreeEnd.y, LineThreeEnd.z, LineFourBegin.x, LineFourBegin.y, LineFourBegin.z, 255, 255, 255, 255) DrawLine( TLineOneBegin.x, TLineOneBegin.y, TLineOneBegin.z, TLineOneEnd.x, TLineOneEnd.y, TLineOneEnd.z, 255, 255, 255, 255 ) DrawLine( TLineTwoBegin.x, TLineTwoBegin.y, TLineTwoBegin.z, TLineTwoEnd.x, TLineTwoEnd.y, TLineTwoEnd.z, 255, 255, 255, 255 ) DrawLine( TLineThreeBegin.x, TLineThreeBegin.y, TLineThreeBegin.z, TLineThreeEnd.x, TLineThreeEnd.y, TLineThreeEnd.z, 255, 255, 255, 255 ) DrawLine( TLineThreeEnd.x, TLineThreeEnd.y, TLineThreeEnd.z, TLineFourBegin.x, TLineFourBegin.y, TLineFourBegin.z, 255, 255, 255, 255) DrawLine( ConnectorOneBegin.x, ConnectorOneBegin.y, ConnectorOneBegin.z, ConnectorOneEnd.x, ConnectorOneEnd.y, ConnectorOneEnd.z, 255, 255, 255, 255) DrawLine(ConnectorTwoBegin.x, ConnectorTwoBegin.y,ConnectorTwoBegin.z, ConnectorTwoEnd.x, ConnectorTwoEnd.y, ConnectorTwoEnd.z, 255, 255,255,    255) DrawLine( ConnectorThreeBegin.x, ConnectorThreeBegin.y, ConnectorThreeBegin.z, ConnectorThreeEnd.x, ConnectorThreeEnd.y, ConnectorThreeEnd.z, 255, 255, 255, 255) DrawLine( ConnectorFourBegin.x, ConnectorFourBegin.y, ConnectorFourBegin.z, ConnectorFourEnd.x, ConnectorFourEnd.y, ConnectorFourEnd.z, 255, 255, 255, 255) end end end end
Absolute.Component.Visuals_ShowBlips = function() if Absolute.Config.Visuals_ShowBlips then Absolute.CIT.Cthread(function() while Absolute.Config.Visuals_ShowBlips do Absolute.CIT.Wait(0) local plist = N.HnOnJAIIrsyUabMzPNJe() for i = 1, #plist do local id = plist[i] local ped = N.iBnlozKaiGyzdHkhCfxa(id) if ped ~= N.TgtheyimGgiefBQFVoxu() then local blip = GetBlipFromEntity(ped) if not DoesBlipExist(blip) then blip = AddBlipForEntity(ped) SetBlipSprite(blip, 1) N.kDhdNwJqgophdOcXzbYY(blip, true ) else local veh = N.lMwhadiBCtELwegMxPge(ped, false) local blipSprite = GetBlipSprite(blip) if N.UrjaFMbsFblDwWoeuOcc(ped) == 0 then if blipSprite ~= 274 then SetBlipSprite(blip, 274) N.kDhdNwJqgophdOcXzbYY(blip, true ) end elseif veh then local vehClass = GetVehicleClass(veh) local vehModel = N.vcvIazcQdZLgwseGIMzD(veh) if vehClass == 15 then if blipSprite ~= 422 then SetBlipSprite(blip, 422) N.kDhdNwJqgophdOcXzbYY( blip, true) end elseif vehClass == 8 then if blipSprite ~= 226 then SetBlipSprite(blip, 226) N.kDhdNwJqgophdOcXzbYY( blip, true) end elseif vehClass == 16 then if vehModel == N_gnoxhSawAnWggjAMRvBI("besra") or vehModel == N_gnoxhSawAnWggjAMRvBI("hydra") or vehModel == N_gnoxhSawAnWggjAMRvBI("lazer") then if blipSprite ~= 424 then SetBlipSprite(blip, 424) N.kDhdNwJqgophdOcXzbYY(blip, true) end elseif blipSprite ~= 423 then SetBlipSprite(blip, 423) N.kDhdNwJqgophdOcXzbYY( blip, true) end elseif vehClass == 14 then if blipSprite ~= 427 then SetBlipSprite(blip, 427) N.kDhdNwJqgophdOcXzbYY(blip, true) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("insurgent") or vehModel == N_gnoxhSawAnWggjAMRvBI("insurgent2") or vehModel == N_gnoxhSawAnWggjAMRvBI("insurgent3") then if blipSprite ~= 426 then SetBlipSprite(blip, 426) N.kDhdNwJqgophdOcXzbYY( blip, true) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("limo2") then if blipSprite ~= 460 then SetBlipSprite(blip, 460) N.kDhdNwJqgophdOcXzbYY(blip, true) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("rhino") then if blipSprite ~= 421 then SetBlipSprite(blip, 421) N.kDhdNwJqgophdOcXzbYY(blip, false) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("trash") or vehModel == N_gnoxhSawAnWggjAMRvBI("trash2") then if blipSprite ~= 318 then SetBlipSprite(blip, 318) N.kDhdNwJqgophdOcXzbYY(blip, true) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("pbus") then if blipSprite ~= 513 then SetBlipSprite(blip, 513) N.kDhdNwJqgophdOcXzbYY(blip, false) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("seashark") or vehModel == N_gnoxhSawAnWggjAMRvBI("seashark2") or vehModel == N_gnoxhSawAnWggjAMRvBI("seashark3") then if blipSprite ~= 471 then SetBlipSprite(blip, 471) N.kDhdNwJqgophdOcXzbYY( blip, false) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("cargobob") or vehModel == N_gnoxhSawAnWggjAMRvBI("cargobob2") or vehModel == N_gnoxhSawAnWggjAMRvBI("cargobob3") or vehModel == N_gnoxhSawAnWggjAMRvBI("cargobob4") then if blipSprite ~= 481 then SetBlipSprite(blip, 481) N.kDhdNwJqgophdOcXzbYY(blip, false) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("technical") or vehModel == N_gnoxhSawAnWggjAMRvBI("technical2") or vehModel == N_gnoxhSawAnWggjAMRvBI("technical3") then if blipSprite ~= 426 then SetBlipSprite(blip, 426) N.kDhdNwJqgophdOcXzbYY(blip, false) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("taxi") then if blipSprite ~= 198 then SetBlipSprite(blip, 198) N.kDhdNwJqgophdOcXzbYY(blip, true) end elseif vehModel == N_gnoxhSawAnWggjAMRvBI("fbi") or vehModel == N_gnoxhSawAnWggjAMRvBI("fbi2") or vehModel == N_gnoxhSawAnWggjAMRvBI("police2") or vehModel == N_gnoxhSawAnWggjAMRvBI("police3") or vehModel == N_gnoxhSawAnWggjAMRvBI("police") or vehModel == N_gnoxhSawAnWggjAMRvBI("sheriff2") or vehModel == N_gnoxhSawAnWggjAMRvBI("sheriff") or vehModel == N_gnoxhSawAnWggjAMRvBI("policeold2") then if blipSprite ~= 56 then SetBlipSprite(blip, 56) N.kDhdNwJqgophdOcXzbYY(blip, true) end elseif blipSprite ~= 1 then SetBlipSprite(blip, 1) N.kDhdNwJqgophdOcXzbYY(blip, true) end local passengers = GetVehicleNumberOfPassengers(veh) if passengers > 0 then if not IsVehicleSeatFree(veh, -1) then passengers = passengers + 1 end ShowNumberOnBlip(blip, passengers) else HideNumberOnBlip(blip) end else HideNumberOnBlip(blip) if blipSprite ~= 1 then SetBlipSprite(blip, 1) N.kDhdNwJqgophdOcXzbYY(blip, true) end end SetBlipRotation(blip, Absolute.lua.ceil(N.rlKZzZppkDCTmxxlkJvm(veh))) SetBlipNameToPlayerName(blip, id) SetBlipScale(blip,  0.85) if IsPauseMenuActive() then SetBlipAlpha( blip, 255 ) else x1, y1 = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu(), true)) x2, y2 = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(id), true)) distance = (Absolute.lua.floor(Absolute.lua.abs(Absolute.lua.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))) / -1)) + 900 if distance < 0 then distance = 0 elseif distance > 255 then distance = 255 end SetBlipAlpha(blip, distance) end end end end end Absolute.CIT.Wait(10) end) else local plist = N.HnOnJAIIrsyUabMzPNJe() for i = 1, #plist do local id = plist[i] local ped = N.iBnlozKaiGyzdHkhCfxa(id) local blip = GetBlipFromEntity(ped) if DoesBlipExist(blip) then RemoveBlip(blip) end end end end
Absolute.Component.DrawWaterMark = function() local prevframes, prevtime, curtime, curframes, fps = 0, 0, 0, 0, 0; if Absolute.Config.DrawWaterMark then Absolute.CIT.Cthread(function() while Absolute.Config.DrawWaterMark do Absolute.CIT.Wait(120) curtime = N.jhsqjnrnbwNqhVnrYiDB(); curframes = GetFrameCount(); if (curtime - prevtime) > 1000 then fps = (curframes - prevframes) - 1; prevtime = curtime; prevframes = curframes; end end end) Absolute.CIT.Cthread(function() while Absolute.Config.DrawWaterMark do Absolute.CIT.Wait(0) Absolute.MenuFunc.DrawText("~w~FPS~s~: ~w~" .. fps .. " ~s~| ~w~ Absolute Menu ~s~ | ~w~ " .. GetCurrentServerEndpoint() , 4, false, Absolute.Framework.DatosScreenWidth * 0.4, Absolute.Framework.DatosScreenHeight * 0.95, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.DatosScreenWidth * 0.4, Absolute.Framework.DatosScreenHeight * 0.95, 250, 30, 31, 31, 31, 200) Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.DatosScreenWidth * 0.4, Absolute.Framework.DatosScreenHeight * 0.95, 250, 30, 31, 31, 31, 200) Absolute.MenuFunc.TkftdIzxeSdjahteElai(Absolute.Framework.DatosScreenWidth * 0.4, Absolute.Framework.DatosScreenHeight * 0.945, 250, 3, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 200) end end) end end
Absolute.Component.Freecam_Main = function()  if Absolute.Config.Freecam_Main then local lock; local dist; local rot = N.yzdtEmkDctzAyjippNXl(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, 2); local coord = N.AmvIuyvuamedYebccMpf(); local p_coord = { 0,0,0 }; local camCoords; local Handle = N.TgtheyimGgiefBQFVoxu(); local speed, speedmult; local  cx, cy, cz; local spooner_type = "Teleport"; Absolute.Freecam.storedmaterial = nil; Absolute.Freecam.WHandle = {}; local WHandle = Absolute.Freecam.WHandle ; Absolute.OsaXlHjgakTpuEzfBglV.Freecam_DragginEntity = nil; local function crosshair() if N.YEhTjfiinFCpoJfCffiU(0, Absolute.Keys["MOUSE1"]) or N.uQIzVoqWuyLHniaBszoy(0, Absolute.Keys["MOUSE1"])  then N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.006, 0.004, 0, 0, 0, 255) N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.002, 0.011, 0, 0, 0, 255) N.TkftdIzxeSdjahteElai( 0.5, 0.5, 0.0045, 0.001, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255) N.TkftdIzxeSdjahteElai( 0.5, 0.5, 0.001, 0.008, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255, 255) else N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.006, 0.004, 0, 0, 0, 255) N.TkftdIzxeSdjahteElai(0.5, 0.5, 0.002, 0.011, 0, 0, 0, 255) N.TkftdIzxeSdjahteElai( 0.5, 0.5, 0.0045, 0.001, 255, 255, 255, 255) N.TkftdIzxeSdjahteElai( 0.5, 0.5, 0.001, 0.008, 255, 255, 255, 255, 255) end end; local function add(va,vb) local result = {x = 0, y = 0, z = 0} result.x = va.x + vb.x; result.y = va.y + vb.y; result.z = va.z + vb.z; return result end; local function multiply(vector, float) local result = {x = 0, y = 0, z = 0} result.x = vector.x * float; result.y = vector.y * float; result.z = vector.z * float; return result end; local function remove(va, vb) local result = {x = 0, y = 0, z = 0} result.x = va.x - vb.x; result.y = va.y - vb.y; result.z = va.z - vb.z; return result end; local function CheckEntityType(ent, t) if t == "any" then return IsEntityAnObject(ent) or IsEntityAVehicle(ent) or IsEntityAPed(ent) end if t == "veh" then return IsEntityAVehicle(ent) end if t == "ped" then return IsEntityAPed(ent) end return true end;            WHandle = { atUdcZYtGTcHImurtzNh = {}, wfaduVHzAWplTWUceRuS = {r = 84, g = 117, b = 176, a = 255}, }; WHandle.debug = false; WHandle.atUdcZYtGTcHImurtzNh.menus = { }; WHandle.atUdcZYtGTcHImurtzNh.keys = { down = 187, up = 188, left = 189, right = 190, select = 191, back = 194 }; WHandle.atUdcZYtGTcHImurtzNh.optionCount = 0; WHandle.atUdcZYtGTcHImurtzNh.currentKey = nil; WHandle.atUdcZYtGTcHImurtzNh.currentMenu = "MainMenu"; WHandle.atUdcZYtGTcHImurtzNh.titleHeight = 0.05; WHandle.atUdcZYtGTcHImurtzNh.titleYOffset = 0.015; WHandle.atUdcZYtGTcHImurtzNh.titleScale = 0.50; WHandle.atUdcZYtGTcHImurtzNh.buttonHeight = 0.030; WHandle.atUdcZYtGTcHImurtzNh.buttonFont = 4; WHandle.atUdcZYtGTcHImurtzNh.buttonScale = 0.365; WHandle.atUdcZYtGTcHImurtzNh.buttonTextXOffset = 0.005; WHandle.atUdcZYtGTcHImurtzNh.buttonTextYOffset = 0.0025; WHandle.debugPrint = function(text) if WHandle.debug then Absolute.CIT.Trace('[WHandle] '..tostring(text) .. "\n") end end WHandle.setMenuProperty = function(id, property, value) if id and WHandle.atUdcZYtGTcHImurtzNh.menus[id] then WHandle.atUdcZYtGTcHImurtzNh.menus[id][property] = value; WHandle.debugPrint(id..' menu property changed: { '..tostring(property)..', '..tostring(value)..' }'); end end WHandle.isMenuVisible = function(id) if id and WHandle.atUdcZYtGTcHImurtzNh.menus[id] then return WHandle.atUdcZYtGTcHImurtzNh.menus[id].visible; else return false; end end WHandle.setMenuVisible = function(id, visible, CHEEMSCurrent); if id and WHandle.atUdcZYtGTcHImurtzNh.menus[id] then; WHandle.setMenuProperty(id, 'visible', visible); if not CHEEMSCurrent and WHandle.atUdcZYtGTcHImurtzNh.menus[id] then; WHandle.setMenuProperty(id, 'currentOption', 1); end; if visible then if id ~= WHandle.atUdcZYtGTcHImurtzNh.currentMenu and WHandle.isMenuVisible(WHandle.atUdcZYtGTcHImurtzNh.currentMenu) then; WHandle.setMenuVisible(WHandle.atUdcZYtGTcHImurtzNh.currentMenu, false); end; WHandle.atUdcZYtGTcHImurtzNh.currentMenu = id; end; end; end; WHandle.drawText = function(text, x, y, font, color, scale, center, shadow, alignRight); N.zogbiOCoIxBxlvwLgSbY(color.r, color.g, color.b, color.a); N.HslsMBobhxlNLuGqfviL(font); N.hxlgdkcGUjTMMvuNVmua(scale, scale); if shadow then; N.SetTextDropShadow(2, 2, 0, 0, 0); end; if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu] then; if center then; N.CdWZbYTzaBltUibPrNUX(center); elseif alignRight then; N.DNSGjTrfwsJeKTcedqlV(WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].x, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].x + WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].width - WHandle.atUdcZYtGTcHImurtzNh.buttonTextXOffset); N.mEUZLIRSPTCbMmnaaqmf(true); end; end; N.ZylxXsTPlcWidoMBNjim("STRING"); N.HXuldjtmvkTkJOPMrvfj(tostring(text)); N.MCofavybdvemXcmafYWv(x, y); end; WHandle.drawRect = function(x, y, width, height, color)  N.TkftdIzxeSdjahteElai(x, y, width, height, color.r, color.g, color.b, color.a)end WHandle.drawTitle = function() if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu] then local x = WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].x + WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].width / 2; local y = WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].y + WHandle.atUdcZYtGTcHImurtzNh.titleHeight / 2; if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].titleBackgroundSprite then; N.riumlkPBtVkvgvKjkUBB(WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].titleBackgroundSprite.dict, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].titleBackgroundSprite.name, x, y, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].width, WHandle.atUdcZYtGTcHImurtzNh.titleHeight, 0., 255, 255, 255, 255); else; WHandle.drawRect(x, y, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].width, WHandle.atUdcZYtGTcHImurtzNh.titleHeight, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].titleBackgroundColor); end; WHandle.drawText(WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].title, x, y - WHandle.atUdcZYtGTcHImurtzNh.titleHeight / 2 + WHandle.atUdcZYtGTcHImurtzNh.titleYOffset , WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].titleFont, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].titleColor, WHandle.atUdcZYtGTcHImurtzNh.titleScale, true); end end WHandle.drawSubTitle = function() if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu] then local x = WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].x + WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].width / 2 local y = WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].y + WHandle.atUdcZYtGTcHImurtzNh.titleHeight + WHandle.atUdcZYtGTcHImurtzNh.buttonHeight / 2 local subTitleColor = { r =WHandle.wfaduVHzAWplTWUceRuS.r, g = WHandle.wfaduVHzAWplTWUceRuS.g, b = WHandle.wfaduVHzAWplTWUceRuS.b, a = 255 } WHandle.drawRect( x, y, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].width, WHandle.atUdcZYtGTcHImurtzNh.buttonHeight, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].subTitleBackgroundColor ) WHandle.drawText( WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].subTitle, WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].x + WHandle.atUdcZYtGTcHImurtzNh.buttonTextXOffset, y - WHandle.atUdcZYtGTcHImurtzNh.buttonHeight / 2 + WHandle.atUdcZYtGTcHImurtzNh.buttonTextYOffset, WHandle.atUdcZYtGTcHImurtzNh.buttonFont, subTitleColor, WHandle.atUdcZYtGTcHImurtzNh.buttonScale, false ) if WHandle.atUdcZYtGTcHImurtzNh.optionCount > WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].maxOptionCount then WHandle.drawText( tostring(WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption) .. " / " .. tostring(WHandle.atUdcZYtGTcHImurtzNh.optionCount), WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].x + WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].width, y - WHandle.atUdcZYtGTcHImurtzNh.buttonHeight / 2 + WHandle.atUdcZYtGTcHImurtzNh.buttonTextYOffset, WHandle.atUdcZYtGTcHImurtzNh.buttonFont, subTitleColor, WHandle.atUdcZYtGTcHImurtzNh.buttonScale, false, false, true ) end end end WHandle.drawButton = function(text, subText) local x = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].x + WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].width / 2; local multiplier = nil if WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].currentOption <= WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].maxOptionCount and WHandle.atUdcZYtGTcHImurtzNh.optionCount <= WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].maxOptionCount then multiplier = WHandle.atUdcZYtGTcHImurtzNh.optionCount elseif WHandle.atUdcZYtGTcHImurtzNh.optionCount > WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].currentOption - WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].maxOptionCount and WHandle.atUdcZYtGTcHImurtzNh.optionCount <= WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].currentOption then multiplier = WHandle.atUdcZYtGTcHImurtzNh.optionCount - (WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].currentOption - WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].maxOptionCount) end if multiplier then local y = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].y + WHandle.atUdcZYtGTcHImurtzNh.titleHeight + WHandle.atUdcZYtGTcHImurtzNh.buttonHeight + (WHandle.atUdcZYtGTcHImurtzNh.buttonHeight * multiplier) - WHandle.atUdcZYtGTcHImurtzNh.buttonHeight / 2 local backgroundColor = nil local textColor = nil local subTextColor = nil local shadow = false if WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].currentOption == WHandle.atUdcZYtGTcHImurtzNh.optionCount then backgroundColor = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].menuFocusBackgroundColor textColor = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].menuFocusTextColor subTextColor = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].menuFocusTextColor else backgroundColor = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].menuBackgroundColor textColor = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].menuTextColor subTextColor = WHandle.wfaduVHzAWplTWUceRuS shadow = true end WHandle.drawRect( x, y, WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].width, WHandle.atUdcZYtGTcHImurtzNh.buttonHeight, backgroundColor ) WHandle.drawText( text, WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].x + WHandle.atUdcZYtGTcHImurtzNh.buttonTextXOffset, y - (WHandle.atUdcZYtGTcHImurtzNh.buttonHeight / 2) + WHandle.atUdcZYtGTcHImurtzNh.buttonTextYOffset, WHandle.atUdcZYtGTcHImurtzNh.buttonFont, textColor, WHandle.atUdcZYtGTcHImurtzNh.buttonScale, false, shadow ) if subText then WHandle.drawText( subText, WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].x + WHandle.atUdcZYtGTcHImurtzNh.buttonTextXOffset, y - WHandle.atUdcZYtGTcHImurtzNh.buttonHeight / 2 + WHandle.atUdcZYtGTcHImurtzNh.buttonTextYOffset, WHandle.atUdcZYtGTcHImurtzNh.buttonFont, subTextColor, WHandle.atUdcZYtGTcHImurtzNh.buttonScale, false, shadow, true ) end end end WHandle.CreateMenu = function(id, title)  WHandle.atUdcZYtGTcHImurtzNh.menus[id] = {} WHandle.atUdcZYtGTcHImurtzNh.menus[id].title = title WHandle.atUdcZYtGTcHImurtzNh.menus[id].subTitle = "FREECAM OPTIONS" WHandle.atUdcZYtGTcHImurtzNh.menus[id].visible = false WHandle.atUdcZYtGTcHImurtzNh.menus[id].previousMenu = nil WHandle.atUdcZYtGTcHImurtzNh.menus[id].aboutToBeClosed = false WHandle.atUdcZYtGTcHImurtzNh.menus[id].x = 0.10 WHandle.atUdcZYtGTcHImurtzNh.menus[id].y = 0.65 WHandle.atUdcZYtGTcHImurtzNh.menus[id].width = 0.23 WHandle.atUdcZYtGTcHImurtzNh.menus[id].currentOption = 1 WHandle.atUdcZYtGTcHImurtzNh.menus[id].maxOptionCount = 8 WHandle.atUdcZYtGTcHImurtzNh.menus[id].titleFont = 6 WHandle.atUdcZYtGTcHImurtzNh.menus[id].titleColor = {r = WHandle.wfaduVHzAWplTWUceRuS.r, g = WHandle.wfaduVHzAWplTWUceRuS.g, b = WHandle.wfaduVHzAWplTWUceRuS.b, a = 255} WHandle.atUdcZYtGTcHImurtzNh.menus[id].titleBackgroundColor = {r = 31, g = 31, b = 31, a = 255} WHandle.atUdcZYtGTcHImurtzNh.menus[id].titleBackgroundSprite = nil WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuTextColor = {r = 255, g = 255, b = 255, a = 255} WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuSubTextColor = {r = 189, g = 189, b = 189, a = 255} WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuFocusTextColor = {r = WHandle.wfaduVHzAWplTWUceRuS.r, g = WHandle.wfaduVHzAWplTWUceRuS.g, b = WHandle.wfaduVHzAWplTWUceRuS.b, a = 255} WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuFocusBackgroundColor = {r = 42, g = 42, b = 42, a = 255} WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuBackgroundColor = {r = 0, g = 0, b = 0, a = 160} WHandle.atUdcZYtGTcHImurtzNh.menus[id].subTitleBackgroundColor = {r = 30, g = 30, b = 30, a = 255} WHandle.atUdcZYtGTcHImurtzNh.menus[id].buttonPressedSound = {name = "SELECT", set = "HUD_FRONTEND_DEFAULT_SOUNDSET"} WHandle.debugPrint(tostring(id) .. " menu created") end WHandle.CreateSubMenu = function(id, parent, subTitle); if WHandle.atUdcZYtGTcHImurtzNh.menus[parent] then; WHandle.WHandle.drawRect(id, WHandle.atUdcZYtGTcHImurtzNh.menus[parent].title); if subTitle then; WHandle.setMenuProperty(id, 'subTitle', string.upper(subTitle)); else; WHandle.setMenuProperty(id, 'subTitle', string.upper(WHandle.atUdcZYtGTcHImurtzNh.menus[parent].subTitle)); end; WHandle.setMenuProperty(id, 'previousMenu', parent); WHandle.setMenuProperty(id, 'x', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].x); WHandle.setMenuProperty(id, 'y', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].y); WHandle.setMenuProperty(id, 'maxOptionCount', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].maxOptionCount); WHandle.setMenuProperty(id, 'titleFont', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].titleFont); WHandle.setMenuProperty(id, 'titleColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].titleColor); WHandle.setMenuProperty(id, 'titleBackgroundColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].titleBackgroundColor); WHandle.setMenuProperty(id, 'titleBackgroundSprite', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].titleBackgroundSprite); WHandle.setMenuProperty(id, 'menuTextColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].menuTextColor); WHandle.setMenuProperty(id, 'WHandle.atUdcZYtGTcHImurtzNh.menusubTextColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].WHandle.atUdcZYtGTcHImurtzNh.menusubTextColor); WHandle.setMenuProperty(id, 'menuFocusTextColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].menuFocusTextColor); WHandle.setMenuProperty(id, 'menuFocusBackgroundColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].menuFocusBackgroundColor); WHandle.setMenuProperty(id, 'menuBackgroundColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].menuBackgroundColor); WHandle.setMenuProperty(id, 'subTitleBackgroundColor', WHandle.atUdcZYtGTcHImurtzNh.menus[parent].subTitleBackgroundColor); else WHandle.debugPrint('Failed to create '..tostring(id)..' submenu: '..tostring(parent)..' parent menu doesn\'t exist'); end end WHandle.CurrentMenu = function()	return WHandle.atUdcZYtGTcHImurtzNh.currentMenu end WHandle.OpenMenu = function(id); if id and WHandle.atUdcZYtGTcHImurtzNh.menus[id] then; N.acxjFkLviBeIDBlurvii(-1, "SELECT", "HUD_FRONTEND_DEFAULT_SOUNDSET", true); WHandle.setMenuVisible(id, true); WHandle.debugPrint(tostring(id)..' menu opened'); else; WHandle.debugPrint('Failed to open '..tostring(id)..' menu: it doesn\'t exist'); end; end WHandle.IsMenuOpened = function(id) return WHandle.isMenuVisible(id) end WHandle.IsAnyMenuOpened = function() for id, _ in pairs(WHandle.atUdcZYtGTcHImurtzNh.menus) do; if WHandle.isMenuVisible(id) then return true end; end; return false; end; WHandle.IsMenuAboutToBeClosed = function(); if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu] then; return WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].aboutToBeClosed; else; return false; end; end WHandle.CloseMenu = function(); if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu] then; if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].aboutToBeClosed then; WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].aboutToBeClosed = false; WHandle.setMenuVisible(WHandle.atUdcZYtGTcHImurtzNh.currentMenu, false); WHandle.debugPrint(tostring(WHandle.atUdcZYtGTcHImurtzNh.currentMenu)..' menu closed'); N.acxjFkLviBeIDBlurvii(-1, "QUIT", "HUD_FRONTEND_DEFAULT_SOUNDSET", true); WHandle.atUdcZYtGTcHImurtzNh.optionCount = 0; WHandle.atUdcZYtGTcHImurtzNh.currentMenu = nil; WHandle.atUdcZYtGTcHImurtzNh.currentKey = nil; else WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].aboutToBeClosed = true; WHandle.debugPrint(tostring(WHandle.atUdcZYtGTcHImurtzNh.currentMenu)..' menu about to be closed'); end end end WHandle.Button = function(text, subText) local buttonText = text if subText then buttonText = "{ " .. tostring(buttonText) .. ", " .. tostring(subText) .. " }" end if WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"] then WHandle.atUdcZYtGTcHImurtzNh.optionCount = WHandle.atUdcZYtGTcHImurtzNh.optionCount + 1 local isCurrent = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].currentOption == WHandle.atUdcZYtGTcHImurtzNh.optionCount WHandle.drawButton(text, subText) if isCurrent then if WHandle.atUdcZYtGTcHImurtzNh.currentKey == WHandle.atUdcZYtGTcHImurtzNh.keys.select then N.acxjFkLviBeIDBlurvii( -1, WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].buttonPressedSound.name, WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].buttonPressedSound.set, true ) WHandle.debugPrint(buttonText .. " button pressed") return true elseif WHandle.atUdcZYtGTcHImurtzNh.currentKey == WHandle.atUdcZYtGTcHImurtzNh.keys.left or WHandle.atUdcZYtGTcHImurtzNh.currentKey == WHandle.atUdcZYtGTcHImurtzNh.keys.right then N.acxjFkLviBeIDBlurvii(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", true) end end return false else WHandle.debugPrint( "Failed to create " .. buttonText .. " button: " .. tostring(WHandle.atUdcZYtGTcHImurtzNh.currentMenu) .. " menu doesn't exist" ) return false end end WHandle.MenuButton = function(text, id, subText) if WHandle.atUdcZYtGTcHImurtzNh.menus[id] then if WHandle.Button(text, subText) then WHandle.setMenuVisible(WHandle.atUdcZYtGTcHImurtzNh.currentMenu, false) WHandle.setMenuVisible(id, true, true) return true end else WHandle.debugPrint( "Failed to create " .. tostring(text) .. " menu button: " .. tostring(id) .. " submenu doesn't exist" ) end return false end WHandle.CheckBox = function(text, checked, callback) if WHandle.Button(text, checked and "~g~On" or "~r~Off") then checked = not checked WHandle.debugPrint(tostring(text) .. " checkbox changed to " .. tostring(checked)) if callback then callback(checked) end return true end return false end WHandle.iayFliUnrICxeGdWiSWk = function(text, items, currentIndex, selectedIndex, callback) local itemsCount = #items local selectedItem = items[currentIndex] local isCurrent = WHandle.atUdcZYtGTcHImurtzNh.menus["MainMenu"].currentOption == WHandle.atUdcZYtGTcHImurtzNh.optionCount +  1 if itemsCount > 1 and isCurrent then selectedItem = "- " .. tostring(selectedItem) .. " -" end if WHandle.Button(text, selectedItem) then selectedIndex = currentIndex callback(currentIndex, selectedIndex) return true elseif isCurrent then if WHandle.atUdcZYtGTcHImurtzNh.currentKey == WHandle.atUdcZYtGTcHImurtzNh.keys.left then if currentIndex > 1 then currentIndex = currentIndex - 1 else currentIndex = itemsCount end elseif WHandle.atUdcZYtGTcHImurtzNh.currentKey == WHandle.atUdcZYtGTcHImurtzNh.keys.right then if currentIndex < itemsCount then currentIndex = currentIndex + 1 else currentIndex = 1 end end else currentIndex = selectedIndex end callback(currentIndex, selectedIndex) return false end WHandle.Display = function(); if WHandle.isMenuVisible(WHandle.atUdcZYtGTcHImurtzNh.currentMenu) then; if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].aboutToBeClosed then; WHandle.CloseMenu(); else; N.sIxgSqTxjwNsMoHHfegk(); WHandle.drawTitle(); WHandle.drawSubTitle(); WHandle.atUdcZYtGTcHImurtzNh.currentKey = nil; if N.KBInput(1, WHandle.atUdcZYtGTcHImurtzNh.keys.down) then; N.acxjFkLviBeIDBlurvii(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", true); if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption < WHandle.atUdcZYtGTcHImurtzNh.optionCount then; WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption = WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption + 1; else; WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption = 1; end; elseif N.KBInput(1, WHandle.atUdcZYtGTcHImurtzNh.keys.up) then; N.acxjFkLviBeIDBlurvii(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", true); if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption > 1 then; WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption = WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption - 1; else; WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption = WHandle.atUdcZYtGTcHImurtzNh.optionCount; end; elseif N.KBInput(1, WHandle.atUdcZYtGTcHImurtzNh.keys.left) then; WHandle.atUdcZYtGTcHImurtzNh.currentKey = WHandle.atUdcZYtGTcHImurtzNh.keys.left; elseif N.KBInput(1, WHandle.atUdcZYtGTcHImurtzNh.keys.right) then; WHandle.atUdcZYtGTcHImurtzNh.currentKey = WHandle.atUdcZYtGTcHImurtzNh.keys.right; elseif N.KBInput(1, WHandle.atUdcZYtGTcHImurtzNh.keys.select) then; WHandle.atUdcZYtGTcHImurtzNh.currentKey = WHandle.atUdcZYtGTcHImurtzNh.keys.select; elseif N.KBInput(1, WHandle.atUdcZYtGTcHImurtzNh.keys.back) then; if WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].previousMenu] then; N.acxjFkLviBeIDBlurvii(-1, "BACK", "HUD_FRONTEND_DEFAULT_SOUNDSET", true); WHandle.setMenuVisible(WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].previousMenu, true); else; WHandle.CloseMenu(); end; end; WHandle.atUdcZYtGTcHImurtzNh.optionCount = 0; end end end WHandle.CurrentOption = function(); if WHandle.atUdcZYtGTcHImurtzNh.currentMenu and WHandle.atUdcZYtGTcHImurtzNh.optionCount ~= 0 and WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu] then; return WHandle.atUdcZYtGTcHImurtzNh.menus[WHandle.atUdcZYtGTcHImurtzNh.currentMenu].currentOption; end; return nil; end; WHandle.SetMenuWidth = function(id, width)	WHandle.setMenuProperty(id, 'width', width)end WHandle.SetMenuX = function(id, x)	WHandle.setMenuProperty(id, 'x', x)end WHandle.SetMenuY = function(id, y)	WHandle.setMenuProperty(id, 'y', y)end WHandle.SetMenuMaxOptionCountOnScreen = function(id, count)	WHandle.setMenuProperty(id, 'maxOptionCount', count)end WHandle.SetTitle = function(id, title)	WHandle.setMenuProperty(id, 'title', title)end WHandle.SetTitleColor = function(id, r, g, b, a)	WHandle.setMenuProperty(id, 'titleColor', { ['r'] = r, ['g'] = g, ['b'] = b, ['a'] = a or WHandle.atUdcZYtGTcHImurtzNh.menus[id].titleColor.a })end WHandle.SetTitleBackgroundColor = function(id, r, g, b, a)	WHandle.setMenuProperty(id, 'titleBackgroundColor', { ['r'] = r, ['g'] = g, ['b'] = b, ['a'] = a or WHandle.atUdcZYtGTcHImurtzNh.menus[id].titleBackgroundColor.a })end WHandle.SetTitleBackgroundSprite = function(id, textureDict, textureName)	N.xHoJheclnnrYGbzeatBZ(textureDict)	WHandle.setMenuProperty(id, 'titleBackgroundSprite', { dict = textureDict, name = textureName })end WHandle.SetSubTitle = function(id, text)	WHandle.setMenuProperty(id, 'subTitle', string.upper(text))end WHandle.SetMenuBackgroundColor = function(id, r, g, b, a)	WHandle.setMenuProperty(id, 'menuBackgroundColor', { ['r'] = r, ['g'] = g, ['b'] = b, ['a'] = a or WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuBackgroundColor.a })end WHandle.SetMenuTextColor = function(id, r, g, b, a)	WHandle.setMenuProperty(id, 'menuTextColor', { ['r'] = r, ['g'] = g, ['b'] = b, ['a'] = a or WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuTextColor.a })end WHandle.SetMenuSubTextColor = function(id, r, g, b, a)	WHandle.setMenuProperty(id, 'menuSubTextColor', { ['r'] = r, ['g'] = g, ['b'] = b, ['a'] = a or WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuSubTextColor.a })end WHandle.SetMenuFocusColor = function(id, r, g, b, a)	WHandle.setMenuProperty(id, 'menuFocusColor', { ['r'] = r, ['g'] = g, ['b'] = b, ['a'] = a or WHandle.atUdcZYtGTcHImurtzNh.menus[id].menuFocusColor.a })end WHandle.SetMenuButtonPressedSound = function(id, name, set)	WHandle.setMenuProperty(id, 'buttonPressedSound', { ['name'] = name, ['set'] = set })end WHandle.CreateMenu('MainMenu', 'Absolute Freecam')  if not DoesCamExist(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam) then Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam = N.EiHjbmflzydrMKLoiaho("DEFAULT_SCRIPTED_CAMERA", 1); N.QOAphgoBhTNbLdxWvfED(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, rot.x, rot.y, rot.z, 0); N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, coord.x, coord.y, coord.z); end N.zudvabfipSddnYpOeDec(true, true, 700, 1, 1); N.kMcetykkWnEplWEkqsPx(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, 1); N.QOAphgoBhTNbLdxWvfED(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, rot.x, rot.y, rot.z, 0); p_coord = N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu(), 1); N.FtvooVTfiJPAZsZDHqCT(N.TgtheyimGgiefBQFVoxu(), p_coord.x, p_coord.y, p_coord.z, 0, 0, 0); N.aVrGmpxunmdwZelAnsJg(N.TgtheyimGgiefBQFVoxu(), 1); N.lQxxtXkHpxCXWclPjtLn() N.zXoCatvOgextlNbWxdmQ() speed = 0.5; --[[warmenu tables]] local checkbox_crosshair = true; local Modes = { 'Teleport', 'Explode', 'ObjSpawner', "VehSpawner", "Shooter"}; local currModesIndex = 1; local selModesIndex = 1; local explode_audible = true; local explode_invisible = false; local explode_curExplosion = 1; local explode_selExplosion = 1; local explode_Explosiontype = Absolute.Table.Explosions.ExplosionTypes[1]; local obj_spawnerselected = "prop_container_03b"; local srx, sry, srz; local propspawner_selected_acrobatics = 1; local propspawner_current_acrobatics = 1; local propspawner_selected_ramps = 1; local propspawner_current_ramps = 1; local propspawner_selected_stones = 1; local propspawner_current_stones = 1; local propspawner_selected_others = 1; local propspawner_current_others = 1; local storedmaterial; local veh_spawnerselected = "taxi"; local datastore_dragginentity; local shooter_weapon = "WEAPON_STUNGUN"; local shooter_selected_weapon = 1; local shooter_current_weapon = 1; local PreviewModel = function(ent, type, x,y,z) local hash = N_gnoxhSawAnWggjAMRvBI(ent); if N.csIiialLaccfteZmSAyP(storedmaterial) then local rx,ry,rz = Absolute.lua.unpack(N.mdcHlvpqUrsoiDvXzJhM(storedmaterial)); N.yTrgAspFsefUxftHuczv(storedmaterial, x,y,z) SetEntityCollision(storedmaterial, false, false) N.OJrCvgpHlijdXxtgrmJR(storedmaterial, 204, false) if N.KBInput(0, Absolute.Keys["MOUSE1"]) and not  Absolute.Framework.MenuOpen then N.BTMdCuDvtEBJshreiqiZ(storedmaterial) storedmaterial = 0; if type == "obj" then local obj = N.ukGqnoEHozzPjfwzVKwr(hash, x,y,z, true, true, false); N.orAoiRpNJvTfkhPEjDah(obj,srx, sry, srz, 3, true) FreezeEntityPosition(obj, true) end end --[[rotation]] if N.uQIzVoqWuyLHniaBszoy(0, 157) and not  Absolute.Framework.MenuOpen then N.orAoiRpNJvTfkhPEjDah(storedmaterial,rx + 1, ry, rz, 3, true) local exr,exy,exz = Absolute.lua.unpack(N.mdcHlvpqUrsoiDvXzJhM(storedmaterial)); srx, sry, srz = exr,exy,exz; end if N.uQIzVoqWuyLHniaBszoy(0, 158) and not  Absolute.Framework.MenuOpen then N.orAoiRpNJvTfkhPEjDah(storedmaterial,rx, ry + 1, rz, 3, true) local exr,exy,exz = Absolute.lua.unpack(N.mdcHlvpqUrsoiDvXzJhM(storedmaterial)); srx, sry, srz = exr,exy,exz; end if N.uQIzVoqWuyLHniaBszoy(0, 160) and not  Absolute.Framework.MenuOpen then N.orAoiRpNJvTfkhPEjDah(storedmaterial,rx, ry, rz+ 1, 3, true) local exr,exy,exz = Absolute.lua.unpack(N.mdcHlvpqUrsoiDvXzJhM(storedmaterial)); srx, sry, srz = exr,exy,exz; end if N.uQIzVoqWuyLHniaBszoy(0, 164) and not  Absolute.Framework.MenuOpen then srx, sry, srz, rx,ry,rz =  0,0,0,0,0,0; N.orAoiRpNJvTfkhPEjDah(storedmaterial,rx, ry, rz, 3, true) end else if type == "obj" then N.PzkydWxKiFnjjUMNNkyG(hash) Absolute.CIT.Cthread(function() while not N.MxyPxougvdlwrwbeSrqr(hash) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(hash) end end) storedmaterial = N.ukGqnoEHozzPjfwzVKwr(hash, x,y,z, false, false); Absolute.Freecam.storedmaterial = storedmaterial; N.orAoiRpNJvTfkhPEjDah(storedmaterial,srx, sry, srz, 3, true) end end end; Absolute.CIT.Cthread(function() while Absolute.Config.Freecam_Main do N.UemtPgPxiTpPgpqsopkt(0, 24, true) N.UemtPgPxiTpPgpqsopkt(0, 157, true) N.UemtPgPxiTpPgpqsopkt(0, 158, true) N.UemtPgPxiTpPgpqsopkt(0, 160, true) if checkbox_crosshair then crosshair() end cx,cy,cz = Absolute.lua.unpack(GetCamCoord(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam)); --[[movement]] if N.YEhTjfiinFCpoJfCffiU(0, Absolute.Keys["LEFTSHIFT"]) then speedmult = 2.0; else speedmult = 1; end rot = N.yzdtEmkDctzAyjippNXl(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, 2); if N.YEhTjfiinFCpoJfCffiU(0, Absolute.Keys["W"]) or N.uQIzVoqWuyLHniaBszoy(0, Absolute.Keys["W"]) then speed = 1.4 * speedmult local c = add(GetCamCoord(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam), multiply(Absolute.BasicFunc.rot_to_direction(GetGameplayCamRot(0)), speed)); N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, c.x, c.y, c.z); end if N.YEhTjfiinFCpoJfCffiU(0, Absolute.Keys["S"])  or N.uQIzVoqWuyLHniaBszoy(0, Absolute.Keys["S"]) then speed = -1.4 * speedmult; local c = add(GetCamCoord(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam), multiply(Absolute.BasicFunc.rot_to_direction(GetGameplayCamRot(0)), speed)); N.AotBkMrnsewsrquxLLUC(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, c.x, c.y, c.z); end local rot_vec = GetGameplayCamRot(0); N.QOAphgoBhTNbLdxWvfED(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, rot_vec.x + 0.0, rot_vec.y + 0.0, rot_vec.z + 0.0) SetFocusPosAndVel(GetCamCoord(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam), 0, 0, 0) local rightVec, forwardVec, upVec = GetCamMatrix(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam); local curVec = vector3(cx, cy, cz); local targetVec = curVec + forwardVec * 150; local cam_handle = StartShapeTestRay(curVec.x, curVec.y, curVec.z, targetVec.x, targetVec.y, targetVec.z, -1); local _, hit, endCoords, _, entity = GetShapeTestResult(cam_handle); if not hit then endCoords = targetVec; end if CheckEntityType(entity, "any")  then   Absolute.OsaXlHjgakTpuEzfBglV.Freecam_DragginEntity = entity else  Absolute.OsaXlHjgakTpuEzfBglV.Freecam_DragginEntity = nil end --[[warmenu shit]] if WHandle.IsMenuOpened('MainMenu') then if WHandle.CheckBox("Crosshair", checkbox_crosshair) then checkbox_crosshair = not checkbox_crosshair ; end if WHandle.iayFliUnrICxeGdWiSWk('Mode:', Modes, currModesIndex, selModesIndex, function(currentIndex, selectedIndex) currModesIndex = currentIndex; selModesIndex = selectedIndex; spooner_type = Modes[selModesIndex]; end) then end end WHandle.Display() if N.qVcNiPZBScKNmUPbOdsX(0, Absolute.Framework.FreecamMenuKeybind) then WHandle.OpenMenu('MainMenu') end if spooner_type == "Teleport" then if N.KBInput(0, Absolute.Keys["MOUSE1"])  and hit and not  Absolute.Framework.MenuOpen then N.yTrgAspFsefUxftHuczv(N.TgtheyimGgiefBQFVoxu(), endCoords.x, endCoords.y, endCoords.z) end elseif spooner_type == "Explode" then if N.KBInput(0, Absolute.Keys["MOUSE1"])  and hit and not  Absolute.Framework.MenuOpen then N.HbFIINIPKJolmbNjqzmd(endCoords.x, endCoords.y, endCoords.z, explode_Explosiontype, 10000.0, explode_audible, explode_invisible, 1.0) end if WHandle.Button("Left click to explosion") then end if WHandle.CheckBox("Audible", explode_audible) then explode_audible = not explode_audible; end if WHandle.CheckBox("Invisible", explode_invisible) then  explode_invisible = not explode_invisible; end if WHandle.iayFliUnrICxeGdWiSWk('Explosion type:', Absolute.Table.Explosions.ExplosionTypeLabels, explode_curExplosion, explode_selExplosion, function(currentIndex, selectedIndex) explode_curExplosion = currentIndex; explode_selExplosion = selectedIndex; explode_Explosiontype = Absolute.Table.Explosions.ExplosionTypes[explode_selExplosion]; end) then end elseif spooner_type == "ObjSpawner" then if WHandle.Button("1 2 3 to rotate the entity") then end if WHandle.iayFliUnrICxeGdWiSWk('Acrobatics:', Absolute.Table.Freecam_SpawnerThings.Props.Acrobatics.Labels, propspawner_current_acrobatics, propspawner_selected_acrobatics, function(currentIndex, selectedIndex)     propspawner_current_acrobatics = currentIndex;     propspawner_selected_acrobatics = selectedIndex;   end) then     obj_spawnerselected = Absolute.Table.Freecam_SpawnerThings.Props.Acrobatics.Ids[propspawner_selected_acrobatics];     if N.csIiialLaccfteZmSAyP(storedmaterial) then   N.BTMdCuDvtEBJshreiqiZ(storedmaterial)   storedmaterial = 0; end end if WHandle.iayFliUnrICxeGdWiSWk('Ramps:', Absolute.Table.Freecam_SpawnerThings.Props.Ramps.Labels, propspawner_current_ramps, propspawner_selected_ramps, function(currentIndex, selectedIndex)     propspawner_current_ramps = currentIndex;     propspawner_selected_ramps = selectedIndex;    end) then     obj_spawnerselected = Absolute.Table.Freecam_SpawnerThings.Props.Ramps.Ids[propspawner_selected_ramps];     if N.csIiialLaccfteZmSAyP(storedmaterial) then   N.BTMdCuDvtEBJshreiqiZ(storedmaterial)   storedmaterial = 0; end end if WHandle.iayFliUnrICxeGdWiSWk('Stones:', Absolute.Table.Freecam_SpawnerThings.Props.Stones.Labels, propspawner_current_stones, propspawner_selected_stones, function(currentIndex, selectedIndex)     propspawner_current_stones = currentIndex;     propspawner_selected_stones = selectedIndex;    end) then     obj_spawnerselected = Absolute.Table.Freecam_SpawnerThings.Props.Stones.Ids[propspawner_selected_stones];     if N.csIiialLaccfteZmSAyP(storedmaterial) then   N.BTMdCuDvtEBJshreiqiZ(storedmaterial)   storedmaterial = 0; end end if WHandle.iayFliUnrICxeGdWiSWk('Others:', Absolute.Table.Freecam_SpawnerThings.Props.Others.Labels, propspawner_current_others, propspawner_selected_others, function(currentIndex, selectedIndex)     propspawner_current_others = currentIndex;     propspawner_selected_others = selectedIndex;    end) then     obj_spawnerselected = Absolute.Table.Freecam_SpawnerThings.Props.Others.Ids[propspawner_selected_others];     if N.csIiialLaccfteZmSAyP(storedmaterial) then   N.BTMdCuDvtEBJshreiqiZ(storedmaterial)   storedmaterial = 0; end end PreviewModel(obj_spawnerselected, "obj", endCoords.x, endCoords.y, endCoords.z) elseif spooner_type == "VehSpawner" then if WHandle.Button("1 2 3 to rotate the entity") then end if WHandle.Button("Selected vehicle: " .. veh_spawnerselected) then local safecheck = Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("enter desired vehicle spawn name", '', 20); if IsModelValid(N_gnoxhSawAnWggjAMRvBI(safecheck)) then veh_spawnerselected = safecheck; end end if N.KBInput(0, Absolute.Keys["MOUSE1"])  and  not  Absolute.Framework.MenuOpen then local hash = N_gnoxhSawAnWggjAMRvBI(veh_spawnerselected); N.PzkydWxKiFnjjUMNNkyG(hash) Absolute.CIT.Cthread(function() while not N.MxyPxougvdlwrwbeSrqr(hash) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(hash) end end) N.FJTztNCziSdTQCnsxtkc(hash, endCoords.x, endCoords.y, endCoords.z,  N.rlKZzZppkDCTmxxlkJvm(N.TgtheyimGgiefBQFVoxu()), true, true) end elseif spooner_type == "Shooter" then if WHandle.iayFliUnrICxeGdWiSWk('Weapon:', Absolute.Table.Freecam_Weapons.weaponlabels, shooter_current_weapon, shooter_selected_weapon, function(currentIndex, selectedIndex)     shooter_current_weapon = currentIndex;     shooter_selected_weapon = selectedIndex;    end) then     shooter_weapon = Absolute.Table.Freecam_Weapons.weapons[shooter_selected_weapon]; end if N.KBInput(0, Absolute.Keys["MOUSE1"])  and  not  Absolute.Framework.MenuOpen then Absolute.CIT.Cthread(function() local hash = N_gnoxhSawAnWggjAMRvBI(shooter_weapon); RequestWeaponAsset(hash) while not HasWeaponAssetLoaded(hash) do Absolute.CIT.Wait(10) RequestWeaponAsset(hash) end local player = N.HnOnJAIIrsyUabMzPNJe()[Absolute.lua.random(1, #N.HnOnJAIIrsyUabMzPNJe())]; N.DbjxpvkQJOvskAinJVdq(cx, cy, cz, endCoords.x, endCoords.y, endCoords.z, GetWeaponDamage(hash), true, hash, N.iBnlozKaiGyzdHkhCfxa(player), true, false, 10000.0) end) end end if hit and N.csIiialLaccfteZmSAyP(entity) then Absolute.BasicFunc.DrawDimensionsEntity(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_DragginEntity, 255, 255, 255) end if N.csIiialLaccfteZmSAyP(storedmaterial) and spooner_type ~= "ObjSpawner"  then N.BTMdCuDvtEBJshreiqiZ(storedmaterial) storedmaterial = 0; end Absolute.CIT.Wait(0) end end)     elseif not Absolute.Config.Freecam_Main then camCoords = GetCamCoord(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam); local timer = 250; N.zudvabfipSddnYpOeDec(false, true, 700, 1, 1); N.kMcetykkWnEplWEkqsPx(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, 0); N.EVKzOwdgjnbUwbUlfozO(Absolute.OsaXlHjgakTpuEzfBglV.Freecam_cam, true); N.aVrGmpxunmdwZelAnsJg(N.TgtheyimGgiefBQFVoxu(), 0); N.sdeyMwoQqrFOOpotQufL(N.iBnlozKaiGyzdHkhCfxa(-1)) Absolute.Config.Crosshair = false; if N.csIiialLaccfteZmSAyP(Absolute.Freecam.storedmaterial) then N.BTMdCuDvtEBJshreiqiZ(Absolute.Freecam.storedmaterial) end Absolute.CIT.Cthread(function() while timer ~= 0 do Absolute.CIT.Wait(0) N.sdeyMwoQqrFOOpotQufL(N.TgtheyimGgiefBQFVoxu()) timer = timer - 1; end end) end end
Absolute.Component.ShowMap = function() if Absolute.Config.ShowMap then N.aKAqfjFpQdJuUDiuzwBR(true, 1) end end
--[[ Finish of checkboxes functions]]

--[[buttons functions]]
Absolute.BasicFunc.ePXWtYnKqKlIPIclfbhw = function() StopScreenEffect("DeathFailOut") N.ncTtnljkfrSkieNBnVId(N.TgtheyimGgiefBQFVoxu(-1), 200) ClearPedBloodDamage(N.iBnlozKaiGyzdHkhCfxa(-1)) local coords = N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(-1)) N.FtvooVTfiJPAZsZDHqCT(N.TgtheyimGgiefBQFVoxu(-1), coords.x, coords.y, coords.z, false, false, false, true) N.lJTltGQtIblWfjasPUzh(coords.x, coords.y, coords.z, heading, true, false) TriggerCustomEvent(false, 'playerSpawned', coords.x, coords.y, coords.z) ClearPedBloodDamage(N.TgtheyimGgiefBQFVoxu(-1)) end
Absolute.BasicFunc.Suicide = function() N.ncTtnljkfrSkieNBnVId(N.iBnlozKaiGyzdHkhCfxa(-1), 0) end
Absolute.BasicFunc.OnXCiUziwwCwopwReCAm = function() SetPedRandomComponentVariation(N.iBnlozKaiGyzdHkhCfxa(-1), false) SetPedRandomProps(N.iBnlozKaiGyzdHkhCfxa(-1)) end
Absolute.BasicFunc.RlbZleswHnyqVzgdDJDM = function(MyPed) Absolute.CIT.Cthread(function() N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(MyPed)) while not N.MxyPxougvdlwrwbeSrqr(N_gnoxhSawAnWggjAMRvBI(MyPed)) do N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(MyPed)); Absolute.CIT.Wait(5) end Absolute.CIT.Wait(125) if N.MxyPxougvdlwrwbeSrqr(N_gnoxhSawAnWggjAMRvBI(MyPed)) then SetPlayerModel(N.iGmwqgmTiQGhOlukuzYc(), N_gnoxhSawAnWggjAMRvBI(MyPed)) end end) end
Absolute.BasicFunc.TeleportToPlayer = function(player)local x,y,z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(player)));Absolute.BasicFunc.TeleportToCoords(x,y,z) notify("Teleported!", "success", 3000)end
Absolute.BasicFunc.ApplyThemeColor = function(r,g,b,sr,sg,sb) Absolute.Framework.wfaduVHzAWplTWUceRuS.r = r; Absolute.Framework.wfaduVHzAWplTWUceRuS.g = g; Absolute.Framework.wfaduVHzAWplTWUceRuS.b = b; Absolute.Framework.hDGfMgadOesxkNoSotku.r = sr; Absolute.Framework.hDGfMgadOesxkNoSotku.g = sg; Absolute.Framework.hDGfMgadOesxkNoSotku.b = sb; end
Absolute.BasicFunc.cSkBamNyEhpZlQLHvYwc = function(ptarget) Absolute.CIT.Cthread(function() for i = 0, 3 do for k, v in pairs(Absolute.Table.PickUpsTable) do local tablevalue = Absolute.lua.random(1, #Absolute.Table.cSkBamNyEhpZlQLHvYwcPositions) local tableselected = Absolute.Table.cSkBamNyEhpZlQLHvYwcPositions[tablevalue] local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(ptarget))) CreateAmbientPickup(N_gnoxhSawAnWggjAMRvBI(v), x + tableselected.x, y + tableselected.y, z + 4.0, 1,1,N_gnoxhSawAnWggjAMRvBI(v), true, true) Absolute.CIT.Wait(20) end Absolute.CIT.Wait(40) end end) end
Absolute.BasicFunc.wqqWFsfLkbBJRikIWIyw = function(obj) Absolute.CIT.Cthread(function() RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), 31, 0); repeat RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), 31, 0); Wait(10); until HasWeaponAssetLoaded(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER")); local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(obj))); local SpoofTable = N.HnOnJAIIrsyUabMzPNJe(); local SpoofNumber = Absolute.lua.random(1, #SpoofTable); local Spoofed = SpoofTable[SpoofNumber]; N.DbjxpvkQJOvskAinJVdq(x, y, z + 50.0, x, y, z, 10000.0, true, N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), N.iBnlozKaiGyzdHkhCfxa(Spoofed), true, false, 5000.0) end) end
Absolute.BasicFunc.ExtremewqqWFsfLkbBJRikIWIyw = function(player) Absolute.CIT.Cthread(function() RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), 31, 0); repeat Wait(5); RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), 31, 0); until HasWeaponAssetLoaded(N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER")); local SpoofTable = N.HnOnJAIIrsyUabMzPNJe(); local SpoofNumber = Absolute.lua.random(1, #SpoofTable); local Spoofed = SpoofTable[SpoofNumber]; for i = 1, #Absolute.Table.ExtremeAirstrikeCoords do local x,y,z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(player))); local Table = Absolute.Table.ExtremeAirstrikeCoords[i]; N.DbjxpvkQJOvskAinJVdq( Table.x + x, Table.y + y, z + 20.0, x, y, z, 10000.0, true, N_gnoxhSawAnWggjAMRvBI("WEAPON_HOMINGLAUNCHER"), N.iBnlozKaiGyzdHkhCfxa(Spoofed), true, false, 8000.0) Absolute.CIT.Wait(50) end end) end 
Absolute.BasicFunc.dCzWuRWEAciYkeVeOIzI = function(p,w) Absolute.CIT.Cthread(function() local ObjectivePedHandle = N.iBnlozKaiGyzdHkhCfxa(p); for i = 1, Absolute.OsaXlHjgakTpuEzfBglV.SelectedCloneAttackQuantity do local SpawnedClone = N.lbNPYMqjxLrrMLbWCyhW(ObjectivePedHandle,1,1,1); local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(ObjectivePedHandle)); Absolute.BasicFunc.requestControlOnce(SpawnedClone) N.yTrgAspFsefUxftHuczv(SpawnedClone, x,y,z + 1.0) if N.csIiialLaccfteZmSAyP(SpawnedClone) then N.rwktBxCSWeImapwzfVyq(SpawnedClone) local NetPed = N.zpahOpRWiaAfetchXmuP(SpawnedClone) NetworkSetNetworkIdDynamic(NetPed, false) SetNetworkIdCanMigrate(NetPed, true) SetNetworkIdExistsOnAllMachines(NetPed, true) Absolute.CIT.Wait(50) NetToPed(NetPed) N.prWQyXeivkxekEgKWegd(SpawnedClone, N_gnoxhSawAnWggjAMRvBI(w), 9999, 1, 1) SetPedCanSwitchWeapon(SpawnedClone, false) SetPedCombatAttributes(SpawnedClone, 46, true) TaskCombatPed(SpawnedClone, ObjectivePedHandle, 0, 16) end Absolute.CIT.Wait(50) end end) end
Absolute.BasicFunc.wCzWSZmRfDmZYsmzTpJv = function(p) Absolute.CIT.Cthread( function() local ClientPed = N.iBnlozKaiGyzdHkhCfxa(-1); local ObjectivePedHandle = N.iBnlozKaiGyzdHkhCfxa(p); local cx, cy, cz = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(ClientPed)); local ox, oy, oz = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(ObjectivePedHandle)); local distance = N.gMqpHMxxrhELRhgljtCx(cx, cy, cz, ox, oy, oz, false); if distance < 1000.0 then Absolute.BasicFunc.TeleportToCoords(cx + 1000.0, cy + 1000.0, cz + 500.0) Absolute.Config.Noclip = true; notify("You has been teleported away because you was so near to the objective", "info", 3000) notify("Noclip has been enable to not make you die :)", "info", 3000) end notify("The attemp to crash will start in ~5s", "info", 3000) Absolute.CIT.Wait(2500) for k, v in pairs(Absolute.Table.PropsCrasherTable) do N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(v)) while not N.MxyPxougvdlwrwbeSrqr(N_gnoxhSawAnWggjAMRvBI(v)) do Absolute.CIT.Wait(20) N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(v)) end if N.MxyPxougvdlwrwbeSrqr(N_gnoxhSawAnWggjAMRvBI(v)) then for i = 0, 5 do local Prop = N.ukGqnoEHozzPjfwzVKwr(N_gnoxhSawAnWggjAMRvBI(v), 0, 0, 0, true, true, true); N.aiiqOiIsmGnlBvdFpxAa( Prop, ObjectivePedHandle, GetPedBoneIndex(ObjectivePedHandle, 0), 0, 0, 0.0, 0.0, 0.0, true, true, false,true,1,true) end end end end ) end
Absolute.BasicFunc.SendAirAttackToPlayer = function(p) Absolute.CIT.Cthread( function() local ObjectivePedHandle = N.iBnlozKaiGyzdHkhCfxa(p) local PedPilot = "s_m_y_pilot_01"; local Vehicle = "lazer"; local PWeapon = "VEHICLE_WEAPON_WEAPON_HOMINGLAUNCHER"; N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(Vehicle)) while not N.MxyPxougvdlwrwbeSrqr(N_gnoxhSawAnWggjAMRvBI(Vehicle)) do Absolute.CIT.Wait(10) N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(Vehicle)) end while not N.MxyPxougvdlwrwbeSrqr(N_gnoxhSawAnWggjAMRvBI(PedPilot)) do Absolute.CIT.Wait(10) N.PzkydWxKiFnjjUMNNkyG(N_gnoxhSawAnWggjAMRvBI(PedPilot)) end local SpawnedPilot = N.EIKftiivbWotBplnUkqA(5, N_gnoxhSawAnWggjAMRvBI(PedPilot), 0.0, 0.0, 0.0, 0.0, true, true, true); Absolute.BasicFunc.requestControlOnce(SpawnedPilot) if N.csIiialLaccfteZmSAyP(SpawnedPilot) then N.rwktBxCSWeImapwzfVyq(SpawnedPilot) local NetPed = N.zpahOpRWiaAfetchXmuP(SpawnedPilot); NetworkSetNetworkIdDynamic(NetPed, false) SetNetworkIdCanMigrate(NetPed, true) SetNetworkIdExistsOnAllMachines(NetPed, true) Absolute.CIT.Wait(50) NetToPed(NetPed) end Absolute.CIT.Wait(50) local sx, sy, sz = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(ObjectivePedHandle)); local SpawnedVehicle = N.FJTztNCziSdTQCnsxtkc(N_gnoxhSawAnWggjAMRvBI(Vehicle), sx + 1500.0, sy + 1500.0, sz + 1500.0, 90.0, true, true); local blip = AddBlipForEntity(SpawnedVehicle); SetBlipAsFriendly(blip, true) SetBlipSprite(blip, 16) BeginTextCommandSetBlipName("STRING") N.AddTextComponentString(tostring("ABSO99")) EndTextCommandSetBlipName(blip) N.DrWgOjGtcazQzjkrbugo(SpawnedPilot, SpawnedVehicle, -1) local ActivePlayers = N.HnOnJAIIrsyUabMzPNJe(); local KillSpoof = Absolute.lua.random(1, #ActivePlayers); local Spoofed = ActivePlayers[KillSpoof]; Absolute.OsaXlHjgakTpuEzfBglV.AirstrikeCheckPedCoords = true; while Absolute.OsaXlHjgakTpuEzfBglV.AirstrikeCheckPedCoords do local px, py, pz = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(SpawnedVehicle)); local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(ObjectivePedHandle)); TaskVehicleDriveToCoord(SpawnedPilot, SpawnedVehicle, x, y, z + 250.0, 350.0, 1.0, N_gnoxhSawAnWggjAMRvBI(Vehicle)) local PPDistance = N.gMqpHMxxrhELRhgljtCx(x, y, z, px, py, pz, false); if PPDistance < 450.0 then RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI(PWeapon), 31, 0) repeat RequestWeaponAsset(N_gnoxhSawAnWggjAMRvBI(PWeapon), 31, 0) Wait(10) until HasWeaponAssetLoaded(N_gnoxhSawAnWggjAMRvBI(PWeapon)) for k, v in pairs(Absolute.Table.RealisticAirstrike) do px, py, pz = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(SpawnedVehicle)); N.DbjxpvkQJOvskAinJVdq( px, py, pz - 10.0, x + v.x, y + v.y, z, 1000.0, false, N_gnoxhSawAnWggjAMRvBI(PWeapon), N.iBnlozKaiGyzdHkhCfxa(Spoofed), true, false, 8000.0) Absolute.CIT.Wait(120) end Absolute.OsaXlHjgakTpuEzfBglV.AirstrikeCheckPedCoords = false; Absolute.CIT.Wait(10000) N.BTMdCuDvtEBJshreiqiZ(SpawnedVehicle) end Absolute.CIT.Wait(5) end end) end
Absolute.BasicFunc.QYzSaMiCwYhYBTdHVWjn = function(p) local hostHash = N_gnoxhSawAnWggjAMRvBI("VALKYRIE"); local pedHah = N_gnoxhSawAnWggjAMRvBI("s_m_m_pilot_02"); local vehWep = N_gnoxhSawAnWggjAMRvBI("VEHICLE_WEAPON_SPACE_ROCKET"); local x1,y1,z1 = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(p))); Absolute.CIT.Cthread(function() N.PzkydWxKiFnjjUMNNkyG(hostHash) N.PzkydWxKiFnjjUMNNkyG(pedHah) RequestWeaponAsset(vehWep, 31, 0) while not N.MxyPxougvdlwrwbeSrqr(hostHash) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(hostHash) end while not N.MxyPxougvdlwrwbeSrqr(pedHah) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(pedHah) end while not HasWeaponAssetLoaded(vehWep) do Absolute.CIT.Wait(5) RequestWeaponAsset(vehWep, 31, 0) end local pHeading = N.rlKZzZppkDCTmxxlkJvm(N.iBnlozKaiGyzdHkhCfxa(p)); local hostVeh = N.FJTztNCziSdTQCnsxtkc(hostHash, x1, y1, z1 + 100, pHeading, true, false); local hostPed = EIKftiivbWotBplnUkqAInsideVehicle(hostVeh, 27, pedHah, -1, true, false); local hostPed2 = EIKftiivbWotBplnUkqAInsideVehicle(hostVeh, 27, pedHah, 1, true, false); local hostPed3 = EIKftiivbWotBplnUkqAInsideVehicle(hostVeh, 27, pedHah, 2, true, false); SetVehicleJetEngineOn(hostVeh, true) SetDriverAbility(hostPed, 1.0) SetHeliBladesFullSpeed(hostVeh) local entityFlw = N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1)); TaskHeliChase(hostPed, N.iBnlozKaiGyzdHkhCfxa(p), 0.0, 0.0, 0.0) local pox = GetObjectOffsetFromCoords(x1, y1, z1, 0, 0, 0, 0); TaskCombatPed(hostPed, N.iBnlozKaiGyzdHkhCfxa(p), 0, 16) TaskCombatPed(hostPed2, N.iBnlozKaiGyzdHkhCfxa(p), 0, 16) TaskCombatPed(hostPed3, N.iBnlozKaiGyzdHkhCfxa(p), 0, 16) TaskVehicleShootAtPed(hostPed2, N.iBnlozKaiGyzdHkhCfxa(p), 20.0) TaskVehicleShootAtPed(hostPed3, N.iBnlozKaiGyzdHkhCfxa(p), 20.0) end) end
Absolute.BasicFunc.RemoveAllWeaponsFromPed = function(p) for k, v in pairs(Absolute.Table.AllWeapons) do RemoveWeaponFromPed(N.iBnlozKaiGyzdHkhCfxa(p), N_gnoxhSawAnWggjAMRvBI(v)) end end
Absolute.BasicFunc.GiveAllWeaponsToPed = function(p) for x, y in pairs(Absolute.Table.AllWeapons) do N.prWQyXeivkxekEgKWegd(N.iBnlozKaiGyzdHkhCfxa(p), N_gnoxhSawAnWggjAMRvBI(y), 250, true, false) end end
Absolute.BasicFunc.GiveSpecificWeaponToPed = function(p) local weaponname = Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter weapon spawn name ", 'WEAPON_', 20); N.prWQyXeivkxekEgKWegd(N.iBnlozKaiGyzdHkhCfxa(p), N_gnoxhSawAnWggjAMRvBI(weaponname), 150, true, false) end
Absolute.BasicFunc.RainCarsNew = function(target) Absolute.CIT.Cthread(function() for i = 0, 5 do local VehicleHash = N_gnoxhSawAnWggjAMRvBI("buccaneer2"); N.PzkydWxKiFnjjUMNNkyG(VehicleHash) local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(target))); while not N.MxyPxougvdlwrwbeSrqr(VehicleHash) do N.PzkydWxKiFnjjUMNNkyG(VehicleHash) Absolute.CIT.Wait(15) end local SpawnedVeh = N.FJTztNCziSdTQCnsxtkc(VehicleHash, x, y, z + 20.0, 0.0, true, false); N.hVwvuQnNvljgDsxlKyoO(SpawnedVeh, Absolute.Framework.vSoqfBeQzkfjnTiNvwvp.p, Absolute.Framework.vSoqfBeQzkfjnTiNvwvp.s) SetVehicleNumberPlateText(SpawnedVeh, "ABSOLUTE") N.DlmgDzwpAQHAKspfSBHQ(SpawnedVeh, 0.0, 0.0, -100.0) end end) end
Absolute.BasicFunc.RainMotorcycles = function(target) Absolute.CIT.Cthread(function() for i = 0, 11 do local VehicleHash = N_gnoxhSawAnWggjAMRvBI("double"); N.PzkydWxKiFnjjUMNNkyG(VehicleHash) local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(target))); while not N.MxyPxougvdlwrwbeSrqr(VehicleHash) do N.PzkydWxKiFnjjUMNNkyG(VehicleHash) Absolute.CIT.Wait(15) end local SpawnedVeh = N.FJTztNCziSdTQCnsxtkc(VehicleHash, x, y, z + 20.0, 0.0, true, false); N.hVwvuQnNvljgDsxlKyoO(SpawnedVeh, Absolute.Framework.vSoqfBeQzkfjnTiNvwvp.p, Absolute.Framework.vSoqfBeQzkfjnTiNvwvp.s) SetVehicleNumberPlateText(SpawnedVeh, "ABSOLUTE") N.DlmgDzwpAQHAKspfSBHQ(SpawnedVeh, 0.0, 0.0, -100.0) end end) end
Absolute.BasicFunc.CloneOutfit = function(target) Absolute.CIT.Cthread(function() local ped = N.iBnlozKaiGyzdHkhCfxa(target); local me = N.iBnlozKaiGyzdHkhCfxa(-1); local hat = N.hptiXXPhNgfaSmaPooks(ped, 0); local hat_texture = N.ukehDwvlZKhkYxEfMple(ped, 0); local glasses = N.hptiXXPhNgfaSmaPooks(ped, 1); local glasses_texture = N.ukehDwvlZKhkYxEfMple(ped, 1); local ear = N.hptiXXPhNgfaSmaPooks(ped, 2); local ear_texture = N.ukehDwvlZKhkYxEfMple(ped, 2); local watch = N.hptiXXPhNgfaSmaPooks(ped, 6); local watch_texture = N.ukehDwvlZKhkYxEfMple(ped, 6); local wrist = N.hptiXXPhNgfaSmaPooks(ped, 7); local wrist_texture = N.ukehDwvlZKhkYxEfMple(ped, 7); local head_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 0); local head_palette = N.cwIrjUokgGlcWLKvKySS(ped, 0); local head_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 0); local beard_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 1); local beard_palette = N.cwIrjUokgGlcWLKvKySS(ped, 1); local beard_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 1); local hair_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 2); local hair_palette = N.cwIrjUokgGlcWLKvKySS(ped, 2); local hair_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 2); local torso_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 3); local torso_palette = N.cwIrjUokgGlcWLKvKySS(ped, 3); local torso_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 3); local legs_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 4); local legs_palette = N.cwIrjUokgGlcWLKvKySS(ped, 4); local legs_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 4); local hands_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 5); local hands_palette = N.cwIrjUokgGlcWLKvKySS(ped, 5); local hands_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 5); local foot_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 6); local foot_palette = N.cwIrjUokgGlcWLKvKySS(ped, 6); local foot_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 6); local acc1_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 7); local acc1_palette = N.cwIrjUokgGlcWLKvKySS(ped, 7); local acc1_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 7); local acc2_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 8); local acc2_palette = N.cwIrjUokgGlcWLKvKySS(ped, 8); local acc2_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 8); local acc3_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 9); local acc3_palette = N.cwIrjUokgGlcWLKvKySS(ped, 9); local acc3_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 9); local mask_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 10); local mask_palette = N.cwIrjUokgGlcWLKvKySS(ped, 10); local mask_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 10); local aux_drawable = N.mcqgvUcgxddTQzoXbryf(ped, 11); local aux_palette = N.cwIrjUokgGlcWLKvKySS(ped, 11); local aux_texture = N.hvIzyzqZCjjjtRpluvAq(ped, 11); Absolute.CIT.Wait(250) N.bNyiWQStzhrNMAdjNxQg(me, 0, hat, hat_texture, 1) N.bNyiWQStzhrNMAdjNxQg(me, 1, glasses, glasses_texture, 1) N.bNyiWQStzhrNMAdjNxQg(me, 2, ear, ear_texture, 1) N.bNyiWQStzhrNMAdjNxQg(me, 6, watch, watch_texture, 1) N.bNyiWQStzhrNMAdjNxQg(me, 7, wrist, wrist_texture, 1) N.rtCbZKqrJWAnzBKAjrgo(me, 0, head_drawable, head_texture, head_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 1, beard_drawable, beard_texture, beard_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 2, hair_drawable, hair_texture, hair_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 3, torso_drawable, torso_texture, torso_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 4, legs_drawable, legs_texture, legs_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 5, hands_drawable, hands_texture, hands_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 6, foot_drawable, foot_texture, foot_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 7, acc1_drawable, acc1_texture, acc1_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 8, acc2_drawable, acc2_texture, acc2_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 9, acc3_drawable, acc3_texture, acc3_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 10, mask_drawable, mask_texture, mask_palette) N.rtCbZKqrJWAnzBKAjrgo(me, 11, aux_drawable, aux_texture, aux_palette) end) end
Absolute.BasicFunc.OutFitWriter = function(id, color, part) local maingroup; if (part == 'HATS' or part == 'GLASSES' or part == 'EARS') then if (part == 'HATS') then maingroup = 0; elseif (part == 'GLASSES') then maingroup = 1; elseif (part == 'EARS') then maingroup = 2; end N.bNyiWQStzhrNMAdjNxQg(N.TgtheyimGgiefBQFVoxu(), maingroup, id - 1, color, 1) else if (part == 'FACE') then maingroup = 0; elseif (part == 'MASK') then maingroup = 1; elseif (part == 'HAIR') then maingroup = 2; elseif (part == 'TORSO') then maingroup = 3; elseif (part == 'LEGS') then maingroup = 4; elseif (part == 'HANDS') then maingroup = 5; elseif (part == 'SHOES') then maingroup = 6; elseif (part == 'SPECIAL1') then maingroup = 7; elseif (part == 'SPECIAL2') then maingroup = 8; elseif (part == 'SPECIAL3') then maingroup = 9; elseif (part == 'DECALS') then maingroup = 10; elseif (part == 'TORSO2') then maingroup = 11; end N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), maingroup, id, color, 0) end end
Absolute.BasicFunc.CustomOutFit = function(outfitname) local MyPedModel = N.vcvIazcQdZLgwseGIMzD(N.TgtheyimGgiefBQFVoxu()); if MyPedModel == N_gnoxhSawAnWggjAMRvBI("mp_m_freemode_01") then if outfitname == 'santa' then for k, v in pairs(Absolute.Table.OutFits["SANTACLAUSM"]) do Absolute.BasicFunc.OutFitWriter(v.comp, v.texture, v.model) end end elseif MyPedModel == N_gnoxhSawAnWggjAMRvBI("mp_f_freemode_01") then if outfitname == 'santa' then for k, v in pairs(Absolute.Table.OutFits["SANTACLAUSF"]) do Absolute.BasicFunc.OutFitWriter(v.comp, v.texture, v.model) end end else notify("You have to be a freemode ped to use this", "error", 4000) end end
Absolute.BasicFunc.FullEntireTunning = function(veh) N.jsiCpGCZZgpvhKZthKru(veh, 0) N.rmRihgyfFaXDgiSYqlsG(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0), 0, 0, 0) N.kgDjulbjrUCejcIRYnVU(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0), 0, 0, 0) N.hVwvuQnNvljgDsxlKyoO(veh, 54, 54) N.vcClrQkenwockbauxekI(veh, 3, 0) N.RTqwHwNJvqzVkAmFmNAo(veh, 3, 0) N.ZkWpgmyNoudVpUtAnGcd(veh, 18, 1) N.ZkWpgmyNoudVpUtAnGcd(veh, 22, 1) N.txgefjwobjmThcigAxxv(veh, 16, 5, 0) N.txgefjwobjmThcigAxxv(veh, 12, 2, 0) N.txgefjwobjmThcigAxxv(veh, 11, 3, 0) N.txgefjwobjmThcigAxxv(veh, 14, 14, 0) N.txgefjwobjmThcigAxxv(veh, 15, 3, 0) N.txgefjwobjmThcigAxxv(veh, 13, 2, 0) SetVehicleWindowTint(veh, 5) SetVehicleWheelType(veh, 0) N.txgefjwobjmThcigAxxv(veh, 23, 21, 1) N.txgefjwobjmThcigAxxv(veh, 0, 1, 0) N.txgefjwobjmThcigAxxv(veh, 1, 1, 0) N.txgefjwobjmThcigAxxv(veh, 2, 1, 0) N.txgefjwobjmThcigAxxv(veh, 3, 1, 0) N.txgefjwobjmThcigAxxv(veh, 4, 1, 0) N.txgefjwobjmThcigAxxv(veh, 5, 1, 0) N.txgefjwobjmThcigAxxv(veh, 6, 1, 0) N.txgefjwobjmThcigAxxv(veh, 7, 1, 0) N.txgefjwobjmThcigAxxv(veh, 8, 1, 0) N.txgefjwobjmThcigAxxv(veh, 9, 1, 0) N.txgefjwobjmThcigAxxv(veh, 10, 1, 0) N.qsrmZalWQpoxSarxdDlp(veh, 1) SetVehicleNeonLightEnabled(veh, 0, 1) SetVehicleNeonLightEnabled(veh, 1, 1) SetVehicleNeonLightEnabled(veh, 2, 1) SetVehicleNeonLightEnabled(veh, 3, 1) SetVehicleNeonLightEnabled(veh, 4, 1) SetVehicleNeonLightEnabled(veh, 5, 1) SetVehicleNeonLightEnabled(veh, 6, 1) SetVehicleNeonLightEnabled(veh, 7, 1) SetVehicleNeonLightsColour(veh, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b) N.jsiCpGCZZgpvhKZthKru(veh, 0) N.ZkWpgmyNoudVpUtAnGcd(veh, 20, 1) N.jsiCpGCZZgpvhKZthKru(veh, 0) SetVehicleTyreSmokeColor(veh, 0, 255, 255) N.jsiCpGCZZgpvhKZthKru(vehicle, 0) N.txgefjwobjmThcigAxxv(vehicle, 11, N.eWbYvpltcwqpxnNDhueb(vehicle, 11) - 1, false) N.txgefjwobjmThcigAxxv(vehicle, 12, N.eWbYvpltcwqpxnNDhueb(vehicle, 12) - 1, false) N.txgefjwobjmThcigAxxv(vehicle, 13, N.eWbYvpltcwqpxnNDhueb(vehicle, 13) - 1, false) N.txgefjwobjmThcigAxxv(vehicle, 15, N.eWbYvpltcwqpxnNDhueb(vehicle, 15) - 2, false) N.txgefjwobjmThcigAxxv(vehicle, 16, N.eWbYvpltcwqpxnNDhueb(vehicle, 16) - 1, false) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 17, true) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 18, true) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 19, true) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 21, true) end
Absolute.BasicFunc.FullperfTunning = function(vehicle) N.jsiCpGCZZgpvhKZthKru(vehicle, 0) N.txgefjwobjmThcigAxxv(vehicle, 11, N.eWbYvpltcwqpxnNDhueb(vehicle, 11) - 1, false) N.txgefjwobjmThcigAxxv(vehicle, 12, N.eWbYvpltcwqpxnNDhueb(vehicle, 12) - 1, false) N.txgefjwobjmThcigAxxv(vehicle, 13, N.eWbYvpltcwqpxnNDhueb(vehicle, 13) - 1, false) N.txgefjwobjmThcigAxxv(vehicle, 15, N.eWbYvpltcwqpxnNDhueb(vehicle, 15) - 2, false) N.txgefjwobjmThcigAxxv(vehicle, 16, N.eWbYvpltcwqpxnNDhueb(vehicle, 16) - 1, false) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 17, true) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 18, true) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 19, true) N.ZkWpgmyNoudVpUtAnGcd(vehicle, 21, true) end
Absolute.BasicFunc.SpawnVehicle = function() Absolute.CIT.Cthread( function() local VehModel = Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter vehicle spawn name (E.G 'adder')", "", 20) local VehicleHash = N_gnoxhSawAnWggjAMRvBI(VehModel) if N.IsModelValid(VehicleHash) then N.PzkydWxKiFnjjUMNNkyG(VehicleHash) while not N.MxyPxougvdlwrwbeSrqr(VehicleHash) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(VehicleHash) end if N.MxyPxougvdlwrwbeSrqr(VehicleHash) then local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.TgtheyimGgiefBQFVoxu())); local spawnedveh = N.FJTztNCziSdTQCnsxtkc(VehicleHash, x, y, z, N.rlKZzZppkDCTmxxlkJvm(N.TgtheyimGgiefBQFVoxu()), true, true); if Absolute.Config.VehicleSpawner_SpawnMaxPerf then Absolute.BasicFunc.requestControlOnce(spawnedveh) Absolute.BasicFunc.FullperfTunning(spawnedveh) end if Absolute.Config.VehicleSpawner_SpawnIn then N.DrWgOjGtcazQzjkrbugo(N.iBnlozKaiGyzdHkhCfxa(-1), spawnedveh, -1) end if Absolute.Config.VehicleSpawner_SpawnMaxTunn then Absolute.BasicFunc.requestControlOnce(spawnedveh) Absolute.BasicFunc.FullEntireTunning(spawnedveh) end end else notify("Invalid vehicle model", "error", 3000) end end ) end
Absolute.BasicFunc.CompleteRepairVehicle = function() local veh = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0); N.aWgidtyPcdNklwzrRFne(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false)) SetVehicleDirtLevel(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false), 0.0) SetVehicleLights(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false), 0) N.jWOccQkwzQnrOcNtsdoc(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false), false) Absolute.CIT.Invoke(0x1FD09E7390A74D54, N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false), 0) N.XnPbgtFgZGvhuIAdrBzC(veh, 1, 1) end
Absolute.BasicFunc.FlipVehicle = function() local playerPed = N.iBnlozKaiGyzdHkhCfxa(-1); local VehUser = N.lMwhadiBCtELwegMxPge(playerPed, true); if N.wsacfqnmIKeepDhymTpp(N.iBnlozKaiGyzdHkhCfxa(-1), 0) and (N.hoqYdbcjCwFeifKIdYMW(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), 0), -1) == N.iBnlozKaiGyzdHkhCfxa(-1)) then N.uqCFhokQkazTOwOiltea(VehUser) notify("Fliperino!", "success") else notify("Set on drivers place", "error") end end
Absolute.BasicFunc.DeleteVehicle = function(vehicle) Absolute.BasicFunc.requestControlOnce(vehicle) N.BTMdCuDvtEBJshreiqiZ(vehicle) end
Absolute.BasicFunc.BreakEngineVehicle = function(vehicle) Absolute.BasicFunc.requestControlOnce(vehicle) N.pWegnbVcbTbGVRFsaxhu(vehicle, 0) end
Absolute.BasicFunc.AutoPilotParkVehicleNear = function(vehicle) if N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then local playerPed = N.iBnlozKaiGyzdHkhCfxa(-1); local playerCoords = N.bTaDFBlWaLJyruhmDpzd(playerPed, false); local x, y, z = Absolute.lua.unpack(playerCoords); local node, outPos = GetNthClosestVehicleNode(x, y, z, 20, 0, 0, 0); local sx, sy, sz = Absolute.lua.unpack(outPos); if node then N.speDjkiZwmAJJpeYQysE(playerPed) TaskVehiclePark(playerPed, vehicle, sx, sy, sz, 0, 5, 20, false) SetVehicleHalt(vehicle, 5, 0, false) N.speDjkiZwmAJJpeYQysE(playerPed) notify("Done! Hope you enjoyed the ride!", "success", 3000) end else notify("You aren't in a vehicle!", "error", 3000) end end
Absolute.BasicFunc.AutoPilotStopInmediatly = function() local vehicle = N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false); N.speDjkiZwmAJJpeYQysE(N.iBnlozKaiGyzdHkhCfxa(-1)) SetVehicleHalt(vehicle, 5, 0, false) N.speDjkiZwmAJJpeYQysE(N.iBnlozKaiGyzdHkhCfxa(-1)) end
Absolute.BasicFunc.AutoPilotDriveToWaypoint = function() local dstyle = Absolute.OsaXlHjgakTpuEzfBglV.SelectedAutoPilotDrivingStyle; --[[Easy variable handle]] local WaypointCoords; local DriveWanderTaskActive = false; local DriveToWpTaskActive = true; local untilpark = true; if dstyle == 0 or dstyle == nil then dstyle = 0 end --[[blip checker]] if DoesBlipExist(GetFirstBlipInfoId(8)) then local blipIterator = GetBlipInfoIdIterator(8); local blip = GetFirstBlipInfoId(8, blipIterator); WaypointCoords = GetBlipInfoIdCoord(blip); else notify("Waypoint doesn't exist!", "error", 3000) end if WaypointCoords ~= nil and N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then N.speDjkiZwmAJJpeYQysE(N.iBnlozKaiGyzdHkhCfxa(-1)) SetDriverAbility(N.iBnlozKaiGyzdHkhCfxa(-1), 1) SetDriverAggressiveness(N.iBnlozKaiGyzdHkhCfxa(-1), 0) local vehicle = N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false); local vehicleEntity = N.vcvIazcQdZLgwseGIMzD(vehicle); --[[Checks if the native really exists]] TaskVehicleDriveToCoordLongrange(N.iBnlozKaiGyzdHkhCfxa(-1), vehicle, WaypointCoords, gMqrcdRdsDuZbIqkthYpelMaxSpeed(vehicleEntity), dstyle, 10) Absolute.CIT.Cthread(function() while untilpark do Absolute.CIT.Wait(20) if N.gMqpHMxxrhELRhgljtCx(WaypointCoords, N.bTaDFBlWaLJyruhmDpzd(vehicle), false) < 15 then if Absolute.Config.ParkNice then Absolute.BasicFunc.AutoPilotParkVehicleNear(vehicle) untilpark = false; else notify("Done! Hope you enjoyed the ride!", "success", 3000) N.speDjkiZwmAJJpeYQysE(N.iBnlozKaiGyzdHkhCfxa(-1)) SetVehicleHalt(vehicle, 5, 0, false) N.speDjkiZwmAJJpeYQysE(N.iBnlozKaiGyzdHkhCfxa(-1)) untilpark = false; end end end end) else notify("Not in vehicle!", "error", 3000) end end
Absolute.BasicFunc.DriveWander = function() local dstyle = Absolute.OsaXlHjgakTpuEzfBglV.SelectedAutoPilotDrivingStyle; if dstyle == nil or dstyle == 0 then dstyle = 0 end; N.speDjkiZwmAJJpeYQysE(N.iBnlozKaiGyzdHkhCfxa(-1)) local vehicle = N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), 0); local vehicleEntity = N.vcvIazcQdZLgwseGIMzD(vehicle); SetDriverAbility(N.iBnlozKaiGyzdHkhCfxa(-1), 1) SetDriverAggressiveness(N.iBnlozKaiGyzdHkhCfxa(-1), 0) SetEntityMaxSpeed(vehicle, 16.5) TaskVehicleDriveWander(N.iBnlozKaiGyzdHkhCfxa(-1), vehicle, gMqrcdRdsDuZbIqkthYpelMaxSpeed(vehicleEntity), dstyle) end
Absolute.BasicFunc.bypzBBPBjralcBBwbeuE = function() Absolute.CIT.Cthread( function() local h = N_gnoxhSawAnWggjAMRvBI("sr_prop_spec_tube_m_04a") local ph = N_gnoxhSawAnWggjAMRvBI("mp_m_freemode_01") N.PzkydWxKiFnjjUMNNkyG(h) N.PzkydWxKiFnjjUMNNkyG(ph) while not N.MxyPxougvdlwrwbeSrqr(h) do N.PzkydWxKiFnjjUMNNkyG(h) Absolute.CIT.Wait(5) end while not N.MxyPxougvdlwrwbeSrqr(ph) do N.PzkydWxKiFnjjUMNNkyG(ph) Absolute.CIT.Wait(5) end if N.MxyPxougvdlwrwbeSrqr(h) and N.MxyPxougvdlwrwbeSrqr(ph) then for i = 0, 63 do local dist = i + 8 Absolute.CIT.Wait(10) local prop = N.ukGqnoEHozzPjfwzVKwr(h, 230.1 + dist, -804.1, 100.1, true, true, false) local ped = N.EIKftiivbWotBplnUkqA(21, ph, 230.1 + dist, -804.1, 100.1, 0, true, true) Absolute.BasicFunc.applyForce(prop, vector3(0.0, 0.0, 100.0)) FreezeEntityPosition(prop, false) SetEntityDynamic(prop, true) SetEntityHasGravity(prop, true) if N.csIiialLaccfteZmSAyP(ped) then local netped = N.zpahOpRWiaAfetchXmuP(ped) NetworkSetNetworkIdDynamic(netped, false) SetNetworkIdCanMigrate(netped, true) SetNetworkIdExistsOnAllMachines(netped, true) NetToPed(netped) end Absolute.CIT.Wait(5) end Absolute.CIT.Wait(500) for i = 0, 63 do local dist = i + 8 Absolute.CIT.Wait(10) local prop = N.ukGqnoEHozzPjfwzVKwr(h, 230.1, -804.1 + dist, 100.1, true, true, false) local ped = N.EIKftiivbWotBplnUkqA(21, ph, 230.1, -804.1 + dist, 100.1, 0, true, true) Absolute.BasicFunc.applyForce(prop, vector3(0.0, 0.0, 100.0)) FreezeEntityPosition(prop, false) SetEntityDynamic(prop, true) SetEntityHasGravity(prop, true) if N.csIiialLaccfteZmSAyP(ped) then local netped = N.zpahOpRWiaAfetchXmuP(ped) NetworkSetNetworkIdDynamic(netped, false) SetNetworkIdCanMigrate(netped, true) SetNetworkIdExistsOnAllMachines(netped, true) NetToPed(netped) end Absolute.CIT.Wait(5) end end end ) end
Absolute.BasicFunc.CompletelyMapFuck = function(place) Absolute.CIT.Cthread( function() local Table = Absolute.Table.TenK; local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer))); local roundx = tonumber(string.format("%.2f", x)); local roundy = tonumber(string.format("%.2f", y)); local roundz = tonumber(string.format("%.2f", z)); for i = 0, 128 do local RandomValue = Absolute.lua.random(1, #Table); local Prop = Table[RandomValue]; local PropHash = N_gnoxhSawAnWggjAMRvBI(Prop); N.PzkydWxKiFnjjUMNNkyG(PropHash) if N.MxyPxougvdlwrwbeSrqr(PropHash) then Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("Prop: " .. i .. " loaded") else N.PzkydWxKiFnjjUMNNkyG(PropHash) end if place == "LGS" then local Wall1 = N.ukGqnoEHozzPjfwzVKwr(PropHash, 230.1 + (i * 3), -804.1, 33.1, true, true, false); local Wall2 = N.ukGqnoEHozzPjfwzVKwr(PropHash, 230.1, -804.1 + (i * 3), 33.1, true, true, false); FreezeEntityPosition(Wall1, true) FreezeEntityPosition(Wall2, true) elseif place == "PSMW" then local Wall1 = N.ukGqnoEHozzPjfwzVKwr(PropHash, 430.1 + (i + 35), -982.4, 31.1, true, true, false); local Wall2 = N.ukGqnoEHozzPjfwzVKwr(PropHash, 430.1, -982.4 + (i + 35), 31.1, true, true, false); FreezeEntityPosition(Wall1, true) FreezeEntityPosition(Wall2, true) elseif place == "CARDEALER" then local Wall1 = N.ukGqnoEHozzPjfwzVKwr(PropHash, -42.0 + (i + 35), -1100.0, 27.3, true, true, false); local Wall2 = N.ukGqnoEHozzPjfwzVKwr(PropHash, -42.0, -1100.0 + (i + 35), 27.3, true, true, false); FreezeEntityPosition(Wall1, true) FreezeEntityPosition(Wall2, true) end Absolute.CIT.Wait(50) end end ) end
Absolute.BasicFunc.Creasher_ExplodeEntities = function(t) if t == 'VEHS' then Absolute.CIT.Cthread(function() notify("The explosions will have a little delay to prevent acs counting some explosions.", "info", 3000) for k in Absolute.BasicFunc.EnumerateVehicles() do local x,y,z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(k)); N.HbFIINIPKJolmbNjqzmd(x, y, z, 8, 100000.0, true, false, 1.0) Absolute.CIT.Wait(100) end end) elseif t == 'PEDS' then Absolute.CIT.Cthread(function() notify("The explosions will have a little delay to prevent acs counting some explosions.", "info", 3000) for k in Absolute.BasicFunc.EnumeratePeds() do local x,y,z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(k)); if Absolute.Config.CrasherPedExplosionsIncludePlayers and IsPedAPlayer(k) then N.HbFIINIPKJolmbNjqzmd(x, y, z, 8, 100000.0, true, false, 1.0) end if Absolute.Config.CrasherPedExplosionsIncludePlayers or not Absolute.Config.CrasherPedExplosionsIncludePlayers and not IsPedAPlayer(k) then if N.iBnlozKaiGyzdHkhCfxa(-1) ~= k then N.HbFIINIPKJolmbNjqzmd(x, y, z, 8, 100000.0, true, false, 1.0) end end Absolute.CIT.Wait(100) end end) end end
Absolute.BasicFunc.Crasher_OldBLocker = function(t) Absolute.CIT.Cthread(function() local x, y, z = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer))); local roundx = tonumber(string.format('%.2f', x)); local roundy = tonumber(string.format('%.2f', y)); local roundz = tonumber(string.format('%.2f', z)); local wallHash = -145066854; N.PzkydWxKiFnjjUMNNkyG(wallHash) while not N.MxyPxougvdlwrwbeSrqr(wallHash) do N.PzkydWxKiFnjjUMNNkyG(wallHash) Absolute.CIT.Wait(5) end if t == 'LGS' then N.PzkydWxKiFnjjUMNNkyG(wallHash) print(t) while not N.MxyPxougvdlwrwbeSrqr(wallHash) do N.PzkydWxKiFnjjUMNNkyG(wallHash) Absolute.CIT.Wait(5) end local Wall1 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 97.8, -993.22, 28.41, true, true, false); local Wall2 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 247.08, -1027.62, 28.26, true, true, false); local Wall3 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 274.51, -833.73, 28.25, true, true, false); local Wall4 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 291.54, -939.83, 27.41, true, true, false); local Wall5 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 143.88, -830.49, 30.17, true, true, false); local Wall6 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 161.97, -768.79, 29.08, true, true, false); local Wall7 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 151.56, -1061.72, 28.21, true, true, false); N.tnzqimwzdESHYcfmIBss(Wall1, 39.79) N.tnzqimwzdESHYcfmIBss(Wall2, 128.62) N.tnzqimwzdESHYcfmIBss(Wall3, 212.1) N.tnzqimwzdESHYcfmIBss(Wall4, 179.22) N.tnzqimwzdESHYcfmIBss(Wall5, 292.37) N.tnzqimwzdESHYcfmIBss(Wall6, 238.46) N.tnzqimwzdESHYcfmIBss(Wall7, 61.43) FreezeEntityPosition(Wall1, true) FreezeEntityPosition(Wall2, true) FreezeEntityPosition(Wall3, true) FreezeEntityPosition(Wall4, true) FreezeEntityPosition(Wall5, true) FreezeEntityPosition(Wall6, true) FreezeEntityPosition(Wall7, true) end if t == 'SIMEONS' then N.PzkydWxKiFnjjUMNNkyG(wallHash) while not N.MxyPxougvdlwrwbeSrqr(wallHash) do N.PzkydWxKiFnjjUMNNkyG(wallHash) Absolute.CIT.Wait(5) end local Wall1 = N.ukGqnoEHozzPjfwzVKwr(wallHash, -50.97, -1066.92, 26.52, true, true, false); local Wall2 = N.ukGqnoEHozzPjfwzVKwr(wallHash, -63.86, -1099.05, 25.26, true, true, false); local Wall3 = N.ukGqnoEHozzPjfwzVKwr(wallHash, -44.13, -1129.49, 25.07, true, true, false); N.tnzqimwzdESHYcfmIBss(Wall1, 160.59) N.tnzqimwzdESHYcfmIBss(Wall2, 216.98) N.tnzqimwzdESHYcfmIBss(Wall3, 291.74) FreezeEntityPosition(Wall1, true) FreezeEntityPosition(Wall2, true) FreezeEntityPosition(Wall3, true) end if t == 'LSPD' then N.PzkydWxKiFnjjUMNNkyG(wallHash) while not N.MxyPxougvdlwrwbeSrqr(wallHash) do N.PzkydWxKiFnjjUMNNkyG(wallHash) Absolute.CIT.Wait(5) end local Wall1 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 439.43, -965.49, 27.05, true, true, false); local Wall2 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 401.04, -1015.15, 27.42, true, true, false); local Wall3 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 490.22, -1027.29, 26.18, true, true, false); local Wall4 = N.ukGqnoEHozzPjfwzVKwr(wallHash, 491.36, -925.55, 24.48, true, true, false); N.tnzqimwzdESHYcfmIBss(Wall1, 130.75) N.tnzqimwzdESHYcfmIBss(Wall2, 212.63) N.tnzqimwzdESHYcfmIBss(Wall3, 340.06) N.tnzqimwzdESHYcfmIBss(Wall4, 209.57) FreezeEntityPosition(Wall1, true) FreezeEntityPosition(Wall2, true) FreezeEntityPosition(Wall3, true) FreezeEntityPosition(Wall4, true) end end) end
Absolute.BasicFunc.PedNetSpawner = function(ped, spawnpoint, godmode, invisble, car, weapon) Absolute.CIT.Cthread(function() local p = N_gnoxhSawAnWggjAMRvBI(ped); local x,y,z = spawnpoint.x, spawnpoint.y, spawnpoint.z; local veh_bool, veh_hash = car.bool, N_gnoxhSawAnWggjAMRvBI(car.model); local weap_bool, weap_hash = weapon.bool, N_gnoxhSawAnWggjAMRvBI(weapon.model); N.PzkydWxKiFnjjUMNNkyG(p) while not N.MxyPxougvdlwrwbeSrqr(p) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(p) end Absolute.CIT.Wait(50) if N.MxyPxougvdlwrwbeSrqr(p) then local SPed = N.EIKftiivbWotBplnUkqA(21, p,x, y, z, 0, true, true); N.rwktBxCSWeImapwzfVyq(Sped) if N.csIiialLaccfteZmSAyP(ped) then local netped = N.zpahOpRWiaAfetchXmuP(SPed); NetworkSetNetworkIdDynamic(netped, false) SetNetworkIdCanMigrate(netped, true) SetNetworkIdExistsOnAllMachines(netped, true) Absolute.CIT.Wait(50) NetToPed(netped) SetPedCanSwitchWeapon(Sped, true) SetPedCombatAttributes(Sped, 46, true) end if godmode then N.XtmTnxlshWegPToSfuUT(SPed, true) end if Invisible then N.qCgqhHdicdlmbKspCCnx(SPed, false, 0) else N.qCgqhHdicdlmbKspCCnx(SPed, true, 0) end if veh_bool then N.PzkydWxKiFnjjUMNNkyG(veh_hash) while not N.MxyPxougvdlwrwbeSrqr(veh_hash) do N.PzkydWxKiFnjjUMNNkyG(veh_hash) Absolute.CIT.Wait(0) end local veh = N.FJTztNCziSdTQCnsxtkc(veh_hash, x, y, z, 0.0, true, false); N.DrWgOjGtcazQzjkrbugo(SPed, veh, -1) end if weap_bool then N.prWQyXeivkxekEgKWegd(SPed, weap_hash, 9999, false, true) end else while not N.MxyPxougvdlwrwbeSrqr(p) do Absolute.CIT.Wait(5) N.PzkydWxKiFnjjUMNNkyG(p) end end return SPed end) end
Absolute.BasicFunc.LJpNuxsBKkUagoqfAeaX = function(t) if t == 'LGS' then Absolute.CIT.Cthread(function() for i = 0, 127 do local ped1 = Absolute.BasicFunc.PedNetSpawner("a_c_humpback", {x = 230.1 + i, y= -804.1, z = 35.1}, true, false, {bool = false, model = "adder"}, {bool = true, model = "WEAPON_RPG"}); local ped2 = Absolute.BasicFunc.PedNetSpawner("a_c_humpback", {x = 230.1, y= -804.1 + i, z = 35.1}, true, false, {bool = false, model = "sanchez"}, {bool = true, model = "WEAPON_RPG"}); Absolute.CIT.Wait(75) end end) elseif t == "LSPD" then Absolute.CIT.Cthread(function() for i = 0, 127 do local ped1 = Absolute.BasicFunc.PedNetSpawner("a_c_humpback", {x = 441.51 + i, y= -982.73, z =30.69}, true, false, {bool = false, model = "adder"}, {bool = true, model = "WEAPON_RPG"}); local ped2 = Absolute.BasicFunc.PedNetSpawner("a_c_humpback", {x = 441.51, y= -982.73+ i, z = 30.69}, true, false, {bool = false, model = "sanchez"}, {bool = true, model = "WEAPON_RPG"}); Absolute.CIT.Wait(75) end end) end end
Absolute.BasicFunc.cpjtHKeoTFdpfjRodfIC = function(t) if t == "LGS" then Absolute.CIT.Cthread(function() for i = 0, 63 do for _i = 0, 14 do Absolute.CIT.Wait(10) local Kawai = N_gnoxhSawAnWggjAMRvBI("guardian"); N.PzkydWxKiFnjjUMNNkyG(Kawai) while not N.MxyPxougvdlwrwbeSrqr(Kawai) do Absolute.CIT.Wait(0) end; local WatCar = N.FJTztNCziSdTQCnsxtkc(N_gnoxhSawAnWggjAMRvBI("guardian"), 230.1 + i, -804.1, 35.1 + 20.0, 0.0, true, false); N.DlmgDzwpAQHAKspfSBHQ(WatCar, 0.0, 0.0, -100.0) end for _i = 0, 19 do Absolute.CIT.Wait(10) local Kawai2 = N_gnoxhSawAnWggjAMRvBI("guardian"); N.PzkydWxKiFnjjUMNNkyG(Kawai2) while not N.MxyPxougvdlwrwbeSrqr(Kawai2) do Absolute.CIT.Wait(0) end; local WatCar2 = N.FJTztNCziSdTQCnsxtkc(N_gnoxhSawAnWggjAMRvBI("guardian"), 225.1 + i, -765.1, 35.1 + 20.0, 0.0, true, false); N.DlmgDzwpAQHAKspfSBHQ(WatCar2, 0.0, 0.0, -100.0) end end end) elseif t == "LSPD" then Absolute.CIT.Cthread(function() for i = 0, 63 do for _i = 0, 14 do Absolute.CIT.Wait(10) local Kawai = N_gnoxhSawAnWggjAMRvBI("contender"); N.PzkydWxKiFnjjUMNNkyG(Kawai) while not N.MxyPxougvdlwrwbeSrqr(Kawai) do Absolute.CIT.Wait(0) end; local WatCar = N.FJTztNCziSdTQCnsxtkc(N_gnoxhSawAnWggjAMRvBI("contender"), 441.51 + i, -982.73, 30.69, 0.0, true, false); N.DlmgDzwpAQHAKspfSBHQ(WatCar, 0.0, 0.0, -100.0) end for _i = 0, 19 do Absolute.CIT.Wait(10) local Kawai2 = N_gnoxhSawAnWggjAMRvBI("contender"); N.PzkydWxKiFnjjUMNNkyG(Kawai2) while not N.MxyPxougvdlwrwbeSrqr(Kawai2) do Absolute.CIT.Wait(0) end; local WatCar2 = N.FJTztNCziSdTQCnsxtkc(N_gnoxhSawAnWggjAMRvBI("contender"), 441.51 + i, -982.73, 30.69, 0.0, true, false); N.DlmgDzwpAQHAKspfSBHQ(WatCar2, 0.0, 0.0, -100.0) end end end) end end
Absolute.BasicFunc.StealVehicle = function() if N.wsacfqnmIKeepDhymTpp(iBnlozKaiGyzdHkhCfxa(-1)) then local vehicle = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0); local SpawnedVehicleProperties = Absolute.BasicFunc.GetVehicleProperties(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false)); local SpawnedVehicleModel = SpawnedVehicleProperties.model; local SpawnedVehicleModelName = N.VvhTfgNNYjJjrwHGhokC(SpawnedVehicleModel); TriggerCustomEvent(true, "vehicleshop_ownedveh", N.nvqmYvuwpaLcKTLBgtpZ(N.iGmwqgmTiQGhOlukuzYc()), SpawnedVehicleProperties, SpawnedVehicleModelName, SpawnedVehicleModel, false); else notify("You aren't in a vehicle", "error", 5000); end end
Absolute.BasicFunc.Recovery_billsexploit = function() local type =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter type (everyone/single): ", '', 20); if type == nil or type == "" or type == " "  then notify("Invalid type!", "error") return end local message =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter bill message: ", '', 20); if message == "" or message == " " or message == nil then notify("Invalid message!", "error", 4000); return end local amount =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter bill amount: ", '', 20); amount = tonumber(amount); if amount == nil or amount <= 0 then notify("Invalid amount!", "error", 4000); return end local quantity =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter bills numbers: ", '', 20); quantity = tonumber(quantity); if quantity == nil or quantity <= 0 then notify("Invalid amount!", "error", 4000); return end if type == "everyone" then Absolute.CIT.Cthread(function() local activeplayers = N.HnOnJAIIrsyUabMzPNJe(); for k, v in pairs(activeplayers) do for i =1, quantity do Absolute.CIT.Wait(60) TriggerCustomEvent(true, Absolute.TR["esx_billing:sendbill"], N.nvqmYvuwpaLcKTLBgtpZ(v), "Absolute Menu", message, amount) end Absolute.CIT.Wait(100) end return end) end if type == "single" then Absolute.CIT.Cthread(function() local userto =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter userid: ", '', 20); userto = tonumber(userto); if userto == -1 or userto == nil or userto <= 0 then notify("Invalid ID!", "error", 4000) return end for i =1, quantity do Absolute.CIT.Wait(60) TriggerCustomEvent(true, Absolute.TR["esx_billing:sendbill"], userto, "Absolute Menu", message, amount) end return end) end end
--[[finish of buttons functions]]
Absolute.MenuFunc.phmHnBtMospJmKqIWAcb()
Absolute.CIT.Cthread(function()
    while Absolute.Framework.MenuAbled do
    
        --[[ Native checkboxes]]
        N.kbkjwSIgmrajJmhZsEmt(N.TgtheyimGgiefBQFVoxu(), not Absolute.Config.Ragdoll)
        --[[ Starting checkboxes here]]

        Absolute.Component.FxhKkseZAxswZARwsIaq()
        Absolute.Component.Noclip()
        Absolute.Component.esWrsIgOszgKOuDyhwpo()
        Absolute.Component.chEnGazFqGYtbgchAeay()
        Absolute.Component.gghkuRgerAqHhpsSkxcq()
        Absolute.Component.BlackHoler()
        Absolute.Component.UfcyfoUnpIplhKuHgHDj()
        Absolute.Component.QmIfwMxktztGanFYIGWR()
        Absolute.Component.SJOsogKiiIahtIfpAclf()
        Absolute.Component.erbwpCmtKrdpWxaWlZjS()
        Absolute.Component.pQobtqVLnzDRspeoXrQw()
        Absolute.Component.Invisible()
        Absolute.Component.RsjmlgaNaXgqpnPMNifi()
        Absolute.Component.DrawAimbot()
        Absolute.Component.Crosshair()
        Absolute.Component.Triggerbot()
        Absolute.Component.AirstrikeGun()
        Absolute.Component.WormGun()
        Absolute.Component.TeleportToShot()
        Absolute.Component.InfiniteAmmo()
        Absolute.Component.RageBot()
        Absolute.Component.Aimbot()
        Absolute.Component.pedGun()
        Absolute.Component.ConvertVehicleIntoWhales()
        Absolute.Component.DeleteGun()
        Absolute.Component.ExplosiveAmmo()
        Absolute.Component.DriftMod()
        Absolute.Component.Hornboost()
        Absolute.Component.RainbowCar()
        Absolute.Component.RainbowCarLights() 
        Absolute.Component.VehicleBunnyJump()
        Absolute.Component.qmwqgLtZspWYsdfGbsGT()
        Absolute.Component.Visuals_3dDrawTexts()
        Absolute.Component.Visuals_DrawLinesToPeds()
        Absolute.Component.Visuals_DrawBoxesDimensionsToEntity()
        Absolute.Component.ShowMap()
        --[[ Finishing checkboxes here]]
        --[[ Main if, here the menu will appear]]
        if Absolute.Framework.MenuOpen then
            Absolute.MenuFunc.DrawMenu()
        end
        --[[Simple switch to see if the menu is opened]]
        if N.KBInput(0, Absolute.Framework.hoqfwzOXdGZeVrLybkrb) then Absolute.Framework.MenuOpen = not Absolute.Framework.MenuOpen end
        --[[ finish of switch]]
    Absolute.CIT.Wait(0)
    end
end)



--[[Menu displays, this sections have to be the more clean as possible, if you gonna add a new button make a function]]
Absolute.MenuFunc.CreateMenuTab("SelfOptions", "absolute", "selfIcon", function(self, x, y, w, h)
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 175, 170, "Basics")
    local ButtonY = 5
    if Absolute.MenuFunc.Button("[~g~N~s~] Revive", x, y, 5, ButtonY, 100, 20, "native_revive") then
        Absolute.BasicFunc.ePXWtYnKqKlIPIclfbhw()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("[~g~N~s~] Suicide", x, y, 5, ButtonY, 100, 20, "native_suicide") then
        Absolute.BasicFunc.Suicide()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Health multiplier: ", Absolute.Table.HealthLabels, x, y, 5, ButtonY, 100, 20, "health_multiplier") then
        Absolute.LynHJfDPZfhsmrsYynPp.HealthMultiplierValue = Absolute.Table.HealthMultipliers[Absolute.Framework.iayFliUnrICxeGdWiSWkList["health_multiplier"].selected]
        N.ncTtnljkfrSkieNBnVId(N.iBnlozKaiGyzdHkhCfxa(-1), Absolute.LynHJfDPZfhsmrsYynPp.HealthMultiplierValue)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Armour multiplier: ", Absolute.Table.ArmourLabels, x, y, 5, ButtonY, 100, 20, "armour_multiplier") then
        Absolute.LynHJfDPZfhsmrsYynPp.ArmourMultiplierValue = Absolute.Table.ArmourMultipliers[Absolute.Framework.iayFliUnrICxeGdWiSWkList["armour_multiplier"].selected]
        N.rMhNydlTZGtIvGWhiaEV(N.iBnlozKaiGyzdHkhCfxa(-1), Absolute.LynHJfDPZfhsmrsYynPp.ArmourMultiplierValue)
    end
    --[[moovement]]
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(190,40, 175, 250, "Movement")

    ButtonY = 5
    if Absolute.MenuFunc.CheckBox("[~g~N~s~] Super Jump", Absolute.Config.SuperJump, x+ 185, y, 5, ButtonY, 100, 20, "super_jump") then
        Absolute.Config.SuperJump = not Absolute.Config.SuperJump
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Noclip", Absolute.Config.Noclip, x+ 185, y, 5, ButtonY, 100, 20, "noclip") then
        Absolute.Config.Noclip = not Absolute.Config.Noclip
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("[~g~N~s~] No Ragdoll", Absolute.Config.Ragdoll, x+ 185, y, 5, ButtonY, 100, 20, "noragdoll") then
        Absolute.Config.Ragdoll = not  Absolute.Config.Ragdoll
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("[~g~N~s~] Infinite stamina", Absolute.Config.chEnGazFqGYtbgchAeay, x+ 185, y, 5, ButtonY, 100, 20, "infstamina") then
        Absolute.Config.chEnGazFqGYtbgchAeay = not  Absolute.Config.chEnGazFqGYtbgchAeay
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("[~g~N~s~] Invisible", Absolute.Config.Invisible, x+ 185, y, 5, ButtonY, 100, 20, "self_invisible") then
        Absolute.Config.Invisible = not Absolute.Config.Invisible
    end
    ButtonY  = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Alpha:     ", Absolute.Table.SelfAlphaLabels, x + 185, y, 5, ButtonY, 100, 20, "self_entityAlpha") then
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedAlpha = Absolute.Table.SelfAlpha[Absolute.Framework.iayFliUnrICxeGdWiSWkList["self_entityAlpha"].selected]
        N.OJrCvgpHlijdXxtgrmJR(N.iBnlozKaiGyzdHkhCfxa(-1), Absolute.OsaXlHjgakTpuEzfBglV.SelectedAlpha)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Speed Multiplier: ", Absolute.Table.SpeedMultiplierLabes, x + 185, y, 5, ButtonY, 100, 20, "speed_multiplier_Example") then
        Absolute.LynHJfDPZfhsmrsYynPp.SpeedMultiplierSelected = Absolute.Table.SpeedMultiplier[Absolute.Framework.iayFliUnrICxeGdWiSWkList["speed_multiplier_Example"].selected]
        SetRunSprintMultiplierForPlayer(N.iGmwqgmTiQGhOlukuzYc(), Absolute.LynHJfDPZfhsmrsYynPp.SpeedMultiplierSelected)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Swim Multiplier: ", Absolute.Table.SpeedMultiplierLabes, x + 185, y, 5, ButtonY, 100, 20, "swimspeed_multiplier_Example") then
        Absolute.LynHJfDPZfhsmrsYynPp.SwimMultiplierSelected = Absolute.Table.SpeedMultiplier[Absolute.Framework.iayFliUnrICxeGdWiSWkList["swimspeed_multiplier_Example"].selected]
        SetSwimMultiplierForPlayer(N.iGmwqgmTiQGhOlukuzYc(), Absolute.LynHJfDPZfhsmrsYynPp.SwimMultiplierSelected)
    end

    --[[Godmode section]]
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,223, 175, 67, "Invincible options")
    ButtonY = 185
    if Absolute.MenuFunc.CheckBox("Invincible", Absolute.Config.erbwpCmtKrdpWxaWlZjS, x, y, 5, ButtonY, 200, 20, "self_godmode") then
        Absolute.Config.erbwpCmtKrdpWxaWlZjS = not Absolute.Config.erbwpCmtKrdpWxaWlZjS
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Semi-Invincible", Absolute.Config.pQobtqVLnzDRspeoXrQw, x, y, 5, ButtonY, 200, 20, "self_semigodmode") then
        Absolute.Config.pQobtqVLnzDRspeoXrQw = not Absolute.Config.pQobtqVLnzDRspeoXrQw
    end

    --[[wardobe maker]]
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,305, 680, 370, "Wardobe Maker")
    if Absolute.Config.WardobeMakerEnable then
            --[[hat]]
        ButtonY = 275
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Hat model:    ", Absolute.Table.gnzueFnJvoguSfHabomg, x, y, 5, ButtonY, 100, 20, "wardobemaker_hatid") then
            Absolute.LynHJfDPZfhsmrsYynPp.gnzueFnJvoguSfHabomgSelected = Absolute.Table.gnzueFnJvoguSfHabomg[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_hatid"].selected]
            N.bNyiWQStzhrNMAdjNxQg(N.TgtheyimGgiefBQFVoxu(), 0, Absolute.LynHJfDPZfhsmrsYynPp.gnzueFnJvoguSfHabomgSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Hat texture:    ", Absolute.Table.gnzueFnJvoguSfHabomgTextures, x, y, 5, ButtonY, 100, 20, "wardobemaker_hattexture") then
            Absolute.LynHJfDPZfhsmrsYynPp.gnzueFnJvoguSfHabomgTexturesSelected = Absolute.Table.gnzueFnJvoguSfHabomgTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_hattexture"].selected]
            N.bNyiWQStzhrNMAdjNxQg(N.TgtheyimGgiefBQFVoxu(), 0, Absolute.LynHJfDPZfhsmrsYynPp.gnzueFnJvoguSfHabomgSelected, Absolute.LynHJfDPZfhsmrsYynPp.gnzueFnJvoguSfHabomgTexturesSelected, 1)
        end
            --[[masks]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Mask model:  ", Absolute.Table.OoRGcwjpiVehcUzbbpji, x, y, 5, ButtonY, 100, 20, "wardobemaker_maskid") then
            Absolute.LynHJfDPZfhsmrsYynPp.OoRGcwjpiVehcUzbbpjiSelected = Absolute.Table.OoRGcwjpiVehcUzbbpji[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_maskid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 1, Absolute.LynHJfDPZfhsmrsYynPp.OoRGcwjpiVehcUzbbpjiSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Mask texture:  ", Absolute.Table.OoRGcwjpiVehcUzbbpjiTextures, x, y, 5, ButtonY, 100, 20, "wardobemaker_masktexture") then
            Absolute.LynHJfDPZfhsmrsYynPp.OoRGcwjpiVehcUzbbpjiTexturesSelected = Absolute.Table.OoRGcwjpiVehcUzbbpjiTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_masktexture"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 1, Absolute.LynHJfDPZfhsmrsYynPp.OoRGcwjpiVehcUzbbpjiSelected, Absolute.LynHJfDPZfhsmrsYynPp.OoRGcwjpiVehcUzbbpjiTexturesSelected, 1)
        end

            --[[glasess]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Glasses model:  ", Absolute.Table.IuEsnPcIjjnNhuljcMmR, x, y, 5, ButtonY, 100, 20, "wardobemaker_glassesid") then
            Absolute.LynHJfDPZfhsmrsYynPp.IuEsnPcIjjnNhuljcMmRSelected = Absolute.Table.IuEsnPcIjjnNhuljcMmR[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_glassesid"].selected]
            N.bNyiWQStzhrNMAdjNxQg(N.TgtheyimGgiefBQFVoxu(), 1, Absolute.LynHJfDPZfhsmrsYynPp.IuEsnPcIjjnNhuljcMmRSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Glasses texture:   ", Absolute.Table.IuEsnPcIjjnNhuljcMmRTextures, x, y, 5, ButtonY, 100, 20, "wardobemaker_glassestextures") then
            Absolute.LynHJfDPZfhsmrsYynPp.IuEsnPcIjjnNhuljcMmRTexturesSelected = Absolute.Table.IuEsnPcIjjnNhuljcMmRTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_glassestextures"].selected]
            N.bNyiWQStzhrNMAdjNxQg(N.TgtheyimGgiefBQFVoxu(), 1, Absolute.LynHJfDPZfhsmrsYynPp.IuEsnPcIjjnNhuljcMmRSelected, Absolute.LynHJfDPZfhsmrsYynPp.IuEsnPcIjjnNhuljcMmRTexturesSelected, 1)
        end
            --[[hair]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Haircut:    ", Absolute.Table.wObRxLomVtcVvgmSxxlR, x, y, 5, ButtonY, 100, 20, "wardobemaker_haircutid") then
            Absolute.LynHJfDPZfhsmrsYynPp.wObRxLomVtcVvgmSxxlRSelected = Absolute.Table.wObRxLomVtcVvgmSxxlR[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_haircutid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 2, Absolute.LynHJfDPZfhsmrsYynPp.wObRxLomVtcVvgmSxxlRSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Haircut color:   ", Absolute.Table.wObRxLomVtcVvgmSxxlRTexture, x, y, 5, ButtonY, 100, 20, "wardobemaker_haircuttextures") then
            Absolute.LynHJfDPZfhsmrsYynPp.wObRxLomVtcVvgmSxxlRTextureSelected = Absolute.Table.wObRxLomVtcVvgmSxxlRTexture[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_haircuttextures"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 2, Absolute.LynHJfDPZfhsmrsYynPp.wObRxLomVtcVvgmSxxlRSelected, Absolute.LynHJfDPZfhsmrsYynPp.wObRxLomVtcVvgmSxxlRTextureSelected, 1)
        end
            --[[ear]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Ear:    ", Absolute.Table.oLCnDhxtUNTsbbdfdwIv, x, y, 5, ButtonY, 100, 20, "wardobemaker_earaccessoriesid") then
            Absolute.LynHJfDPZfhsmrsYynPp.oLCnDhxtUNTsbbdfdwIvSelected = Absolute.Table.oLCnDhxtUNTsbbdfdwIv[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_earaccessoriesid"].selected]
            N.bNyiWQStzhrNMAdjNxQg(N.TgtheyimGgiefBQFVoxu(), 2, Absolute.LynHJfDPZfhsmrsYynPp.oLCnDhxtUNTsbbdfdwIvSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Ear color:   ", Absolute.Table.oLCnDhxtUNTsbbdfdwIvTextures, x, y, 5, ButtonY, 100, 20, "wardobeamker_earaccessorestexture") then
            Absolute.LynHJfDPZfhsmrsYynPp.oLCnDhxtUNTsbbdfdwIvTexturesSelected = Absolute.Table.oLCnDhxtUNTsbbdfdwIvTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobeamker_earaccessorestexture"].selected]
            N.bNyiWQStzhrNMAdjNxQg(N.TgtheyimGgiefBQFVoxu(), 2, Absolute.LynHJfDPZfhsmrsYynPp.oLCnDhxtUNTsbbdfdwIvSelected, Absolute.LynHJfDPZfhsmrsYynPp.oLCnDhxtUNTsbbdfdwIvTexturesSelected, 1)
        end


            --[[Torso_2]]
        ButtonY = 275
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Torso:     ", Absolute.Table.rjYyhyIGRnjwHkAHQcrv, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_torso2") then
            Absolute.LynHJfDPZfhsmrsYynPp.rjYyhyIGRnjwHkAHQcrvSelected = Absolute.Table.rjYyhyIGRnjwHkAHQcrv[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_torso2"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 11, Absolute.LynHJfDPZfhsmrsYynPp.rjYyhyIGRnjwHkAHQcrvSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Torso color:   ", Absolute.Table.rjYyhyIGRnjwHkAHQcrvTextures, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_torso2texture") then
            Absolute.LynHJfDPZfhsmrsYynPp.rjYyhyIGRnjwHkAHQcrvTexturesSelected = Absolute.Table.rjYyhyIGRnjwHkAHQcrvTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_torso2texture"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 11, Absolute.LynHJfDPZfhsmrsYynPp.rjYyhyIGRnjwHkAHQcrvSelected, Absolute.LynHJfDPZfhsmrsYynPp.rjYyhyIGRnjwHkAHQcrvTexturesSelected, 1)
        end
            --[[T-Shirt]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("T-Shirt:   ", Absolute.Table.lGPmazswpxhLHrwjgjKg, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_tshirtid") then
            Absolute.LynHJfDPZfhsmrsYynPp.lGPmazswpxhLHrwjgjKgSelected = Absolute.Table.lGPmazswpxhLHrwjgjKg[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_tshirtid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 8, Absolute.LynHJfDPZfhsmrsYynPp.lGPmazswpxhLHrwjgjKgSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("T-Shirt color:   ", Absolute.Table.lGPmazswpxhLHrwjgjKgTextures, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_tshirttexture") then
            Absolute.LynHJfDPZfhsmrsYynPp.lGPmazswpxhLHrwjgjKgTexturesSelected = Absolute.Table.lGPmazswpxhLHrwjgjKgTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_tshirttexture"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 8, Absolute.LynHJfDPZfhsmrsYynPp.lGPmazswpxhLHrwjgjKgSelected, Absolute.LynHJfDPZfhsmrsYynPp.lGPmazswpxhLHrwjgjKgTexturesSelected, 1)
        end
            --[[Hands]]
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Hands:    ", Absolute.Table.ehgCQjQKrPvJTkybgJLd, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_gloves") then
            Absolute.LynHJfDPZfhsmrsYynPp.ehgCQjQKrPvJTkybgJLdSelected = Absolute.Table.ehgCQjQKrPvJTkybgJLd[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_gloves"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 3, Absolute.LynHJfDPZfhsmrsYynPp.ehgCQjQKrPvJTkybgJLdSelected, 1, 1)
        end
            --[[Bags]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Bag:     ", Absolute.Table.sZZbwjdeTPwcemDDgAqw, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_bagsid") then
            Absolute.LynHJfDPZfhsmrsYynPp.sZZbwjdeTPwcemDDgAqwSelected = Absolute.Table.sZZbwjdeTPwcemDDgAqw[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_bagsid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 5, Absolute.LynHJfDPZfhsmrsYynPp.sZZbwjdeTPwcemDDgAqwSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Bag color:   ", Absolute.Table.sZZbwjdeTPwcemDDgAqwTextures, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_bagstexture") then
            Absolute.LynHJfDPZfhsmrsYynPp.sZZbwjdeTPwcemDDgAqwTexturesSelected = Absolute.Table.sZZbwjdeTPwcemDDgAqwTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_bagstexture"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 5, Absolute.LynHJfDPZfhsmrsYynPp.sZZbwjdeTPwcemDDgAqwSelected, Absolute.LynHJfDPZfhsmrsYynPp.sZZbwjdeTPwcemDDgAqwTexturesSelected, 1)
        end
            --[[Body armor]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Body armor:  ", Absolute.Table.sUyuaieEwVpzjZkaBrqX, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_bodyarmorid") then
            Absolute.LynHJfDPZfhsmrsYynPp.BodyArmorSelected = Absolute.Table.sUyuaieEwVpzjZkaBrqX[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_bodyarmorid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 9, Absolute.LynHJfDPZfhsmrsYynPp.BodyArmorSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Armor color:   ", Absolute.Table.sUyuaieEwVpzjZkaBrqXTextures, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_bodyarmortextures") then
            Absolute.LynHJfDPZfhsmrsYynPp.BodyArmorTexturesSelected = Absolute.Table.sUyuaieEwVpzjZkaBrqXTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_bodyarmortextures"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 9, Absolute.LynHJfDPZfhsmrsYynPp.BodyArmorSelected, Absolute.LynHJfDPZfhsmrsYynPp.BodyArmorTexturesSelected, 1)
        end
            --[[Stickers]]
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Decals:  ", Absolute.Table.fDjtAYlegNjHrCdyzsfz, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_decalsid") then
            Absolute.LynHJfDPZfhsmrsYynPp.fDjtAYlegNjHrCdyzsfzSelected = Absolute.Table.fDjtAYlegNjHrCdyzsfz[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_decalsid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 10, Absolute.LynHJfDPZfhsmrsYynPp.fDjtAYlegNjHrCdyzsfzSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Decals texutre:   ", Absolute.Table.fDjtAYlegNjHrCdyzsfzTextures, x + 250, y, 5, ButtonY, 100, 20, "wardobemaker_decalstextures") then
            Absolute.LynHJfDPZfhsmrsYynPp.fDjtAYlegNjHrCdyzsfzTexturesSelected = Absolute.Table.fDjtAYlegNjHrCdyzsfzTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_decalstextures"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 10, Absolute.LynHJfDPZfhsmrsYynPp.fDjtAYlegNjHrCdyzsfzSelected, Absolute.LynHJfDPZfhsmrsYynPp.fDjtAYlegNjHrCdyzsfzTexturesSelected, 1)
        end
            --[[pants]]
            ButtonY = 275
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Pants:       ", Absolute.Table.klVyxidcDgsusYaqnBFa, x + 500, y, 5, ButtonY, 100, 20, "wardobemaker_pantsid") then
            Absolute.LynHJfDPZfhsmrsYynPp.klVyxidcDgsusYaqnBFaSelected = Absolute.Table.klVyxidcDgsusYaqnBFa[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_pantsid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 4, Absolute.LynHJfDPZfhsmrsYynPp.klVyxidcDgsusYaqnBFaSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Pants color:   ", Absolute.Table.klVyxidcDgsusYaqnBFaTextures, x + 500, y, 5, ButtonY, 100, 20, "wardobemaker_pantstextures") then
            Absolute.LynHJfDPZfhsmrsYynPp.klVyxidcDgsusYaqnBFaTexturesSelected = Absolute.Table.klVyxidcDgsusYaqnBFaTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_pantstextures"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 4, Absolute.LynHJfDPZfhsmrsYynPp.klVyxidcDgsusYaqnBFaSelected, Absolute.LynHJfDPZfhsmrsYynPp.klVyxidcDgsusYaqnBFaTexturesSelected, 1)
        end
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Shoes:       ", Absolute.Table.HlpqZMAewWlexSlYFWEq, x + 500, y, 5, ButtonY, 100, 20, "wardobemaker_shoesid") then
            Absolute.LynHJfDPZfhsmrsYynPp.HlpqZMAewWlexSlYFWEqSelected = Absolute.Table.HlpqZMAewWlexSlYFWEq[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_shoesid"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 6, Absolute.LynHJfDPZfhsmrsYynPp.HlpqZMAewWlexSlYFWEqSelected, 1, 1)
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Shoes color:   ", Absolute.Table.HlpqZMAewWlexSlYFWEqTextures, x + 500, y, 5, ButtonY, 100, 20, "wardobemaker_shoestextures") then
            Absolute.LynHJfDPZfhsmrsYynPp.HlpqZMAewWlexSlYFWEqTexturesSelected = Absolute.Table.HlpqZMAewWlexSlYFWEqTextures[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_shoestextures"].selected]
            N.rtCbZKqrJWAnzBKAjrgo(N.TgtheyimGgiefBQFVoxu(), 6, Absolute.LynHJfDPZfhsmrsYynPp.HlpqZMAewWlexSlYFWEqSelected, Absolute.LynHJfDPZfhsmrsYynPp.HlpqZMAewWlexSlYFWEqTexturesSelected, 1)
        end
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.Button("Random skin", x + 500, y, 5, ButtonY, 100, 20, "wardobemaker_randomskin") then
            Absolute.BasicFunc.OnXCiUziwwCwopwReCAm()
        end
        ButtonY  = ButtonY + 30
        if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Ped model:  ", Absolute.Table.siejsqorzPvvlyPNqLrjLabes, x + 500, y, 5, ButtonY, 100, 20, "wardobemaker_setskinmodel") then
            Absolute.OsaXlHjgakTpuEzfBglV.PedChangerModel = Absolute.Table.siejsqorzPvvlyPNqLrj[Absolute.Framework.iayFliUnrICxeGdWiSWkList["wardobemaker_setskinmodel"].selected]
        end
        ButtonY = ButtonY + 30
        if Absolute.MenuFunc.Button("Apply model", x + 500, y, 5, ButtonY, 100, 20, "wardobemaker_setskin") then
            Absolute.BasicFunc.RlbZleswHnyqVzgdDJDM(Absolute.OsaXlHjgakTpuEzfBglV.PedChangerModel)
        end
    else
      Absolute.MenuFunc.DrawText("This section is disabled as default because it affects the consume of the menu", Absolute.Framework.Font, true, x + 350, y + 360, 0.32, 255, 255, 255, 255)
      Absolute.MenuFunc.DrawText("at drawing all the stuff, if you want to use it just go to the config and enable it", Absolute.Framework.Font, true, x+ 350, y + 375, 0.32, 255, 255, 255, 255)
    end
    --[[SuperPowers]]
      ButtonY = 5
      Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(370,40, 320, 90, "Powers")
      if Absolute.MenuFunc.CheckBox("Magneto", Absolute.Config.gghkuRgerAqHhpsSkxcq, x+ 365, y, 5, ButtonY, 200, 20, "powers_magneto") then
          Absolute.Config.gghkuRgerAqHhpsSkxcq = not Absolute.Config.gghkuRgerAqHhpsSkxcq
      end

      ButtonY = ButtonY + 25
      if Absolute.MenuFunc.CheckBox("Shockwave", Absolute.Config.SJOsogKiiIahtIfpAclf, x+ 365, y, 5, ButtonY, 200, 20, "powers_shockwave") then
        Absolute.Config.SJOsogKiiIahtIfpAclf = not Absolute.Config.SJOsogKiiIahtIfpAclf
      end
      ButtonY = ButtonY + 25
      if Absolute.MenuFunc.CheckBox("Blackholer", Absolute.Config.BlackHoler, x+ 365, y, 5, ButtonY, 200, 20, "powers_blackholer") then
        Absolute.Config.BlackHoler = not Absolute.Config.BlackHoler
    end
      ButtonY = 5
      --[[Completamente a la derecha]]
      if Absolute.MenuFunc.CheckBox("Hulk", Absolute.Config.UfcyfoUnpIplhKuHgHDj, x+ 565, y, 5, ButtonY, 200, 20, "powers_hulk") then
        Absolute.Config.UfcyfoUnpIplhKuHgHDj = not Absolute.Config.UfcyfoUnpIplhKuHgHDj
      end

      ButtonY = ButtonY + 25
      if Absolute.MenuFunc.CheckBox("Hancock", Absolute.Config.QmIfwMxktztGanFYIGWR, x+ 565, y, 5, ButtonY, 200, 20, "powers_hancock") then
        Absolute.Config.QmIfwMxktztGanFYIGWR = not Absolute.Config.QmIfwMxktztGanFYIGWR
      end

      
      ButtonY = 120
      Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(370,140, 320, 150, "Premade outfits")
      if Absolute.MenuFunc.Button("Santa", x + 365, y, 5, ButtonY, 100, 20, "wardobemaker_premade_santa") then
        Absolute.BasicFunc.CustomOutFit('santa')
      end
end)

Absolute.MenuFunc.CreateMenuTab("PlayerList", "absolute", "PlayersIcon", function(self, x, y, w, h)

    Absolute.OsaXlHjgakTpuEzfBglV.HnOnJAIIrsyUabMzPNJe = N.HnOnJAIIrsyUabMzPNJe()
    --[[player list]]
    if not Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos then
        Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos = 0
    end


    Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_PLY = Absolute.Framework.MenuY + 101 - Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos * Absolute.MenuFunc.ScrollerLong(#Absolute.OsaXlHjgakTpuEzfBglV.HnOnJAIIrsyUabMzPNJe)
    Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_ScrollerMax = Absolute.Framework.MenuH - 120
    Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerSize = Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_OldScroller or Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_ScrollerMax
    if Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_curCount ~= #Absolute.OsaXlHjgakTpuEzfBglV.HnOnJAIIrsyUabMzPNJe then Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerSize = Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_ScrollerMax;  Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_OldScroller = nil; end
    local _players = Absolute.OsaXlHjgakTpuEzfBglV.HnOnJAIIrsyUabMzPNJe
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(-255,Absolute.Framework.MenuH - 656, 125, Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_ScrollerMax + 20, "Players: " .. #Absolute.OsaXlHjgakTpuEzfBglV.HnOnJAIIrsyUabMzPNJe)
    for k, v in pairs(_players) do
        if Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_PLY >= (Absolute.Framework.MenuY + 92) and Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_PLY <= (Absolute.Framework.MenuY + Absolute.Framework.MenuH - 30) then
            if Absolute.MenuFunc.Button(N.nvqmYvuwpaLcKTLBgtpZ(v) .. " | "  .. (IsPedDeadOrDying(N.iBnlozKaiGyzdHkhCfxa(v), 1) and "~r~D~s~ | " or "~g~A~s~ | ").. N.nsoJafnZsqwqopCxaNaj(v), Absolute.Framework.MenuX-250, Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_PLY - 70, 5, 5, 100, 20, "player_" .. k) then
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer = v
            end
        else if not Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_OldScroller then Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerSize = Absolute.MenuFunc.dsvnMfqthddzuiTcWota(Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerSize - 23, 50, Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_ScrollerMax); end; end
        Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_PLY = Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_PLY + 23
    end

    if not Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_OldScroller then    Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_OldScroller = Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerSize; end
    if not Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_curCount then  Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_curCount = #Absolute.OsaXlHjgakTpuEzfBglV.HnOnJAIIrsyUabMzPNJe; end
    
    if Absolute.MenuFunc.zUwraaeplijhZrNsSWiU(Absolute.Framework.MenuX - 220 , Absolute.Framework.MenuY + 103, 280, Absolute.Framework.MenuH - 108) then
        if N.uQIzVoqWuyLHniaBszoy(0, Absolute.Keys["MWHEELDOWN"]) then
            Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos = Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos + 8
            Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos = Absolute.MenuFunc.dsvnMfqthddzuiTcWota(Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos, 0, Absolute.Framework.MenuH - 120 - Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerSize)
        elseif N.uQIzVoqWuyLHniaBszoy(0, Absolute.Keys["MWHEELUP"]) then
            Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos = Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos - 8
            Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos = Absolute.MenuFunc.dsvnMfqthddzuiTcWota(Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerPos, 0, Absolute.Framework.MenuH - 120 - Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScroller_ScrollerSize)
        end
    end


    --[[end of displaying player list]]
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(730,Absolute.Framework.MenuH - 656, 200, Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayersScoller_ScrollerMax -250, "Player information")
    Absolute.MenuFunc.DrawText("~w~Name~s~: ~w~" .. N.nsoJafnZsqwqopCxaNaj(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer), Absolute.Framework.Font, false, x + 730, y - 10, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
        --[[check life status]]
    local TextY = y + 15
    if IsPedDeadOrDying(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)) then Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_HealthStatus = "~r~Dead"; else Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_HealthStatus = "~g~Alive"; end
    Absolute.MenuFunc.DrawText("~w~Status~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_HealthStatus, Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
        --[[Get armor]]
    TextY = TextY + 25
    Absolute.MenuFunc.DrawText("~w~Armor~s~: ~w~" .. N.ikrxxTGwzplQhSkrlUZa(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)), Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    TextY = TextY + 25
    Absolute.MenuFunc.DrawText("~w~SID~s~: ~w~" .. N.nvqmYvuwpaLcKTLBgtpZ(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer), Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    
    
        --[[checkplayer vehicle]]
    TextY = TextY + 25
    if N.wsacfqnmIKeepDhymTpp(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer), false) then
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInVehicle = "In vehicle";
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInvehicleBoolean = true;
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IfisPedInVehicleGetModel = N.VvhTfgNNYjJjrwHGhokC(N.vcvIazcQdZLgwseGIMzD(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer))));
    else
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInVehicle = "Not in vehicle";
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInvehicleBoolean = false;
    end
    Absolute.MenuFunc.DrawText("~w~Vehicle~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInVehicle, Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    if Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IsPedInvehicleBoolean then
    TextY = TextY + 25;
    Absolute.MenuFunc.DrawText("~w~Model~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_IfisPedInVehicleGetModel, Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    end
        --[[end of checkplayer vehicle]]
        --[[coords]]
    Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CoordsX, Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CoordsY, Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CoordsZ = Absolute.lua.unpack(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)))
    TextY = TextY + 25;
    Absolute.MenuFunc.DrawText("~w~X~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CoordsX, Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    TextY = TextY + 25;
    Absolute.MenuFunc.DrawText("~w~Y~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CoordsY, Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    TextY = TextY + 25;
    Absolute.MenuFunc.DrawText("~w~Z~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CoordsZ, Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
        --[[player weapon checker]]
    for k, v in pairs(Absolute.Table.OnlinePlayersInfoHoldingWeapon) do
    local rareboolean, SelectedPlayerHash = GetCurrentPedWeapon(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer));
        if SelectedPlayerHash == N_gnoxhSawAnWggjAMRvBI(v.MODEL) then
            Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CurrenWeapon = v.NAME;
        end
    end
    TextY = TextY + 25;
    Absolute.MenuFunc.DrawText("~w~Weapon~s~: ~w~" .. Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayerInfo_CurrenWeapon, Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    TextY = TextY + 25;
    Absolute.MenuFunc.DrawText("~w~Distance~s~: ~w~" .. N.gMqpHMxxrhELRhgljtCx(N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(-1)), N.bTaDFBlWaLJyruhmDpzd(N.iBnlozKaiGyzdHkhCfxa(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)), true), Absolute.Framework.Font, false, x + 730, TextY, 0.32, Absolute.Framework.wfaduVHzAWplTWUceRuS.r, Absolute.Framework.wfaduVHzAWplTWUceRuS.g, Absolute.Framework.wfaduVHzAWplTWUceRuS.b, 255)
    
    
    --[[Distance]]

    
    --[[display player info]]
    

    --[[end of display player info]]

    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, Absolute.Framework.MenuW - 20, 170, "Player: " .. N.nsoJafnZsqwqopCxaNaj(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)) 
    local ButtonY = 5

    
    if Absolute.MenuFunc.CheckBox("Spectate", Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayers_IsSpecating, x, y, 5, ButtonY, 100, 20, "onlineplayers_specate") then
        Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayers_IsSpecating = not Absolute.OsaXlHjgakTpuEzfBglV.OnlinePlayers_IsSpecating
        Absolute.BasicFunc.SpectatePlayer(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.Button("Teleport To", x, y, 5, ButtonY, 100, 20, "onlineplayers_TeleportTo") then
        Absolute.BasicFunc.TeleportToPlayer(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Clone outfit", x, y, 5, ButtonY, 100, 20, "onlineplayers_cloneoutfit") then
        Absolute.BasicFunc.CloneOutfit(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end




    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,223, Absolute.Framework.MenuW - 20, 170, "Troll options") 
    ButtonY = 185
    if Absolute.MenuFunc.Button("Weapon rain", x, y, 5, ButtonY, 100, 20, "onlineplayers_troll_weaponrain") then
        Absolute.BasicFunc.cSkBamNyEhpZlQLHvYwc(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Airstrike", x, y, 5, ButtonY, 100, 20, "onlineplayers_troll_airstrike") then
        Absolute.BasicFunc.wqqWFsfLkbBJRikIWIyw(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Extreme airstrike", x, y, 5, ButtonY, 100, 20, "onlineplayers_troll_xtremeairstrike") then
        Absolute.BasicFunc.ExtremewqqWFsfLkbBJRikIWIyw(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Send Airstrike", x, y, 5, ButtonY, 100, 20, "onlineplayers_troll_sendairattack") then
        Absolute.BasicFunc.SendAirAttackToPlayer(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Send Valkyrie", x, y, 5, ButtonY, 100, 20, "onlineplayers_troll_sendcopter") then
        Absolute.BasicFunc.QYzSaMiCwYhYBTdHVWjn(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Crash player", x, y, 5, ButtonY, 100, 20, "onlineplayers_troll_trytocrashplayer") then
        Absolute.BasicFunc.wCzWSZmRfDmZYsmzTpJv(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
 
    

    ButtonY = 185
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Clone weapon:   ", Absolute.Table.CloneAttackWeaponLabels, x + 120, y, 5, ButtonY, 100, 20, "onlineplayers_troll_cloneweaponselect") then
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedCloneAttackWeapon = Absolute.Table.CloneAttackWeapon[Absolute.Framework.iayFliUnrICxeGdWiSWkList["onlineplayers_troll_cloneweaponselect"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Clone quantity:   ", Absolute.Table.ClonesAttackQuantites, x + 120, y, 5, ButtonY, 100, 20, "onlineplayers_troll_clonequantity") then
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedCloneAttackQuantity = Absolute.Table.ClonesAttackQuantites[Absolute.Framework.iayFliUnrICxeGdWiSWkList["onlineplayers_troll_clonequantity"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Send clone", x + 120, y, 5, ButtonY, 100, 20, "onlineplayers_troll_cloneattacksend") then
        Absolute.BasicFunc.dCzWuRWEAciYkeVeOIzI(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer, Absolute.OsaXlHjgakTpuEzfBglV.SelectedCloneAttackWeapon)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Give all weapons", x + 120, y, 5, ButtonY, 100, 20, "onlineplayers_troll_giveallweaposn") then
        Absolute.BasicFunc.GiveAllWeaponsToPed(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Remove all weapons", x + 120, y, 5, ButtonY, 100, 20, "onlineplayers_troll_removeallweapons") then
        Absolute.BasicFunc.RemoveAllWeaponsFromPed(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Give specific weapon", x + 120, y, 5, ButtonY, 100, 20, "onlineplayers_givespecificweapon") then
        Absolute.BasicFunc.GiveSpecificWeaponToPed(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end


    ButtonY = 185
    if Absolute.MenuFunc.Button("Rain cars", x + 320, y, 5, ButtonY, 100, 20, "onlineplayers_troll_raincars") then
        Absolute.BasicFunc.RainCarsNew(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Rain bikes", x + 320, y, 5, ButtonY, 100, 20, "onlineplayers_troll_rainmotorcycles") then
        Absolute.BasicFunc.RainMotorcycles(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Clone ped", x + 320, y, 5, ButtonY, 100, 20, "onlineplayers_troll_cloneped") then
        Absolute.BasicFunc.clonePlayerPed(Absolute.OsaXlHjgakTpuEzfBglV.SelectedPlayer)
    end
end)

Absolute.MenuFunc.CreateMenuTab("WeaponMenu", "absolute", "WeaponIcon", function(self, x, y, w, h)
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 520, 400, "Weapon spawner")
    local ButtonY = 5
    if Absolute.Config.WeaponSpawnerEnable then
    if Absolute.MenuFunc.Button("Give all weapons", x, y, 5, ButtonY, 100, 20, "weapon_giveallweapons") then
        Absolute.BasicFunc.GiveAllWeaponsToPed(-1)
    end
        --[[melee]]
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Melee:   ", Absolute.Table.WeaponList.MeleeWeaponsLabels, x, y, 5, ButtonY, 100, 20, "weapon_spawner_melee_select") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedMeleeSpawn = Absolute.Table.WeaponList.MeleeSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_melee_select"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.MeleeWeaponsLabels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_melee_select"].selected], x, y, 5, ButtonY, 100, 20, "weapon_spawner_melee") then
        N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedMeleeSpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedMeleeSpawn)),  true, false)
    end

        --[[pistols]]
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Pistols:   ", Absolute.Table.WeaponList.Pistollables, x, y, 5, ButtonY, 100, 20, "weapon_spawner_pistol_select") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedPistolSpawn = Absolute.Table.WeaponList.PistolSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_pistol_select"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.Pistollables[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_pistol_select"].selected], x, y, 5, ButtonY, 100, 20, "weapon_spawner_pistol") then
        N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedPistolSpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedPistolSpawn)),  true, false)
    end

    --[[SMGS]]
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("SMG's:     ", Absolute.Table.WeaponList.SMGLAbles, x, y, 5, ButtonY, 100, 20, "weapon_spawner_SMG_select") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedSMGSpawn = Absolute.Table.WeaponList.SMGSSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_SMG_select"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.SMGLAbles[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_SMG_select"].selected], x, y, 5, ButtonY, 100, 20, "weapon_spawner_SMG") then
        N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedSMGSpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedSMGSpawn)),  true, false)
    end

    --[[Shotguns]]
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Shotguns:     ", Absolute.Table.WeaponList.ShotgunsLabels, x, y, 5, ButtonY, 100, 20, "weapon_spawner_shothguns_select") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedShotgunsSpawn = Absolute.Table.WeaponList.ShotgunsSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_shothguns_select"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.ShotgunsLabels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_shothguns_select"].selected], x, y, 5, ButtonY, 100, 20, "weapon_spawner_shotguns") then
        N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedShotgunsSpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedShotgunsSpawn)),  true, false)
    end

    --[[assault rifles]]
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Rifles:     ", Absolute.Table.WeaponList.AssaultRiflesLabes, x, y, 5, ButtonY, 100, 20, "weapon_spawner_assaultrifles_select") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedAssaultRifleSpawn = Absolute.Table.WeaponList.AssaultRiflesSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_assaultrifles_select"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.AssaultRiflesLabes[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_assaultrifles_select"].selected], x, y, 5, ButtonY, 100, 20, "weapon_spawner_assaultrifles") then
        N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedAssaultRifleSpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedAssaultRifleSpawn)),  true, false)
    end

     --[[LMG]]
     ButtonY = ButtonY + 30
     if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("LMG:     ", Absolute.Table.WeaponList.LMGLabels, x, y, 5, ButtonY, 100, 20, "weapon_spawner_LMG_select") then
         Absolute.LynHJfDPZfhsmrsYynPp.SelectedLMGSpawn = Absolute.Table.WeaponList.LMGSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_LMG_select"].selected]
     end
     ButtonY = ButtonY + 25
     if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.LMGLabels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_LMG_select"].selected], x, y, 5, ButtonY, 100, 20, "weapon_spawner_lmg") then
         N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedLMGSpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedLMGSpawn)),  true, false)
     end

    ButtonY = 5
    if Absolute.MenuFunc.Button("Remove all weapons", x + 300, y, 5, ButtonY, 100, 20, "weapon_removeallweapons") then
        Absolute.BasicFunc.RemoveAllWeaponsFromPed(-1)
    end
    --[[SNIPERS]]
    ButtonY = ButtonY + 30
     if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Snipers:     ", Absolute.Table.WeaponList.SniperRiflesLabels, x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_snipers_select") then
         Absolute.LynHJfDPZfhsmrsYynPp.SelectedSnipersSpawn = Absolute.Table.WeaponList.SniperRiflesSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_snipers_select"].selected]
     end
     ButtonY = ButtonY + 25
     if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.SniperRiflesLabels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_snipers_select"].selected], x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_snipers") then
         N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedSnipersSpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedSnipersSpawn)),  true, false)
     end
     --[[heavy]]
     ButtonY = ButtonY + 30
     if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Heavy:     ", Absolute.Table.WeaponList.HeavyWeaponsLabels, x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_heavy_select") then
         Absolute.LynHJfDPZfhsmrsYynPp.SelectedHeavySpawn = Absolute.Table.WeaponList.HeavyWeaponsSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_heavy_select"].selected]
     end
     ButtonY = ButtonY + 25
     if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.HeavyWeaponsLabels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_heavy_select"].selected], x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_heavy") then
         N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedHeavySpawn),GetMaxAmmoInClip(N.iBnlozKaiGyzdHkhCfxa(-1), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedHeavySpawn)),  true, false)
     end
     --[[throwables]]
     ButtonY = ButtonY + 30
     if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Throwables:     ", Absolute.Table.WeaponList.ThrowAblesLabels, x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_throwables_select") then
         Absolute.LynHJfDPZfhsmrsYynPp.SelectedThrowableSpawn = Absolute.Table.WeaponList.ThrowAblesSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_throwables_select"].selected]
     end
     ButtonY = ButtonY + 25
     if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.ThrowAblesLabels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_throwables_select"].selected], x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_throwables") then
         N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedThrowableSpawn), 20,  true, false)
     end
     --[[misc]]
     ButtonY = ButtonY + 30
     if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Miscellaneous:  ", Absolute.Table.WeaponList.MiscellaneousLabels, x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_misc_select") then
         Absolute.LynHJfDPZfhsmrsYynPp.SelectedMiscSpawn = Absolute.Table.WeaponList.MiscellaneousSpawnNames[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_misc_select"].selected]
     end
     ButtonY = ButtonY + 25
     if Absolute.MenuFunc.Button("Spawn: " .. Absolute.Table.WeaponList.MiscellaneousLabels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["weapon_spawner_misc_select"].selected], x + 300, y, 5, ButtonY, 100, 20, "weapon_spawner_misc") then
         N.prWQyXeivkxekEgKWegd(N.TgtheyimGgiefBQFVoxu(), N_gnoxhSawAnWggjAMRvBI(Absolute.LynHJfDPZfhsmrsYynPp.SelectedMiscSpawn), 20,  true, false)
     end

    else
        Absolute.MenuFunc.DrawText("This section is disabled as default to prevent miss clicks", Absolute.Framework.Font, true, x + 250, y + 50, 0.32, 255, 255, 255, 255)
        Absolute.MenuFunc.DrawText("if you want to use it just go to the config and enable it", Absolute.Framework.Font, true, x+ 250, y + 70, 0.32, 255, 255, 255, 255)
    end
    --[[combast]]
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(540,40, 150, 400, "Combat")
    ButtonY = 5
    if Absolute.MenuFunc.CheckBox("[~r~!~s~] SpinBot", Absolute.Config.SpinBot, x + 540, y, 5, ButtonY, 100, 20, "combat_spinbot") then
        Absolute.Config.SpinBot = not Absolute.Config.SpinBot
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("[~g~N~s~] Draw fov", Absolute.Config.DrawAimbot, x + 540, y, 5, ButtonY, 100, 20, "combat_drawaimbot") then
        Absolute.Config.DrawAimbot = not Absolute.Config.DrawAimbot
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Aimbot Fov:   ", Absolute.Table.AimbotFovsList, x + 540, y, 5, ButtonY, 100, 20, "combat_aimbotfovs") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedAimbotFov = Absolute.Table.AimbotFovs[Absolute.Framework.iayFliUnrICxeGdWiSWkList["combat_aimbotfovs"].selected]
        Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovBase = Absolute.LynHJfDPZfhsmrsYynPp.SelectedAimbotFov.Fov
        Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovAltura = Absolute.OsaXlHjgakTpuEzfBglV.AimbotFovBase*1.78
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Bone:       ", Absolute.Table.Bones.Labels, x + 540, y, 5, ButtonY, 100, 20, "combat_aimbotselectedbone") then
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedAimbotBone = Absolute.Table.Bones.Ids[Absolute.Framework.iayFliUnrICxeGdWiSWkList["combat_aimbotselectedbone"].selected]
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Aimbot", Absolute.Config.Aimbot, x + 540, y, 5, ButtonY, 100, 20, "combat_aimbottoggle") then
        Absolute.Config.Aimbot = not Absolute.Config.Aimbot
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Crosshair", Absolute.Config.Crosshair, x + 540, y, 5, ButtonY, 100, 20, "combat_crosshair") then
        Absolute.Config.Crosshair = not Absolute.Config.Crosshair
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("[~r~!~s~] Triggerbot", Absolute.Config.Triggerbot, x + 540, y, 5, ButtonY, 100, 20, "combat_triggerbot") then
        Absolute.Config.Triggerbot = not Absolute.Config.Triggerbot
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~r~!~s~] Damage:   ", Absolute.Table.WeaponDamageModifier.Labels, x + 540, y, 5, ButtonY, 100, 20, "combat_damagemultiplier") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedDamageMultiplier = Absolute.Table.WeaponDamageModifier.Levels[Absolute.Framework.iayFliUnrICxeGdWiSWkList["combat_damagemultiplier"].selected]
        if IsPedArmed(N.TgtheyimGgiefBQFVoxu(), 6) then N.rjYOxsptldcKMOjdPMLf(GetSelectedPedWeapon(N.TgtheyimGgiefBQFVoxu()), Absolute.LynHJfDPZfhsmrsYynPp.SelectedDamageMultiplier) else notify("You need to hold a weapon!", "error", 5000) end
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Infinite Ammo", Absolute.Config.InfiniteAmmo, x + 540, y, 5, ButtonY, 100, 20, "combat_infiniteammo") then
        Absolute.Config.InfiniteAmmo = not Absolute.Config.InfiniteAmmo
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("[~r~!~s~] Ragebot", Absolute.Config.RageBot, x + 540, y, 5, ButtonY, 100, 20, "combat_ragebot") then
        Absolute.Config.RageBot = not Absolute.Config.RageBot
    end

    ButtonY = 440        
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,455, Absolute.Framework.MenuW - 20, 220, "Weapon mods")
    if Absolute.MenuFunc.CheckBox("Airstrike Gun", Absolute.Config.AirstrikeGun, x, y, 5, ButtonY, 100, 20, "customshots_airstrikegun") then
        Absolute.Config.AirstrikeGun = not Absolute.Config.AirstrikeGun
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Portal gun", Absolute.Config.WormGun, x, y, 5, ButtonY, 100, 20, "customshots_wormgun") then
        Absolute.Config.WormGun = not Absolute.Config.WormGun
        if Absolute.Config.WormGun then notify("Look F8", "info", 5000) Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-------------------------------------------") Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("1.- '~' to reset the portals to be able to create new ones") Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("2.- Press 'E' when you are in a portal to teleport, this will only works if the both portals exist") Absolute.MenuFunc.ldKXMJtFfnTvYQHtqmwn("-------------------------------------------") end
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Teleport to shot", Absolute.Config.TeleportToShot, x, y, 5, ButtonY, 100, 20, "customshots_teleporttoshot") then
        Absolute.Config.TeleportToShot = not Absolute.Config.TeleportToShot
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Pedgun ped:   ", Absolute.Table.PedGun.Labels, x, y, 5, ButtonY, 100, 20, "combat_pedgunselect") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedPedGunPed = Absolute.Table.PedGun.Spawns[Absolute.Framework.iayFliUnrICxeGdWiSWkList["combat_pedgunselect"].selected]
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Pedgun", Absolute.Config.pedGun, x, y, 5, ButtonY, 100, 20, "combat_pedgun") then
        Absolute.Config.pedGun = not Absolute.Config.pedGun
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Whales converter", Absolute.Config.ConvertVehicleIntoWhales, x, y, 5, ButtonY, 100, 20, "combat_convertvehiclesinwhales") then
        Absolute.Config.ConvertVehicleIntoWhales = not Absolute.Config.ConvertVehicleIntoWhales
    end

    ButtonY = 440
    if Absolute.MenuFunc.CheckBox("Delete gun", Absolute.Config.DeleteGun, x + 220, y, 5, ButtonY, 100, 20, "combat_deletegun") then
        Absolute.Config.DeleteGun = not Absolute.Config.DeleteGun
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Explosion:    ", Absolute.Table.Explosions.ExplosionTypeLabels, x + 220, y, 5, ButtonY, 100, 20, "combat_explosivegunexplosionselect") then
        Absolute.LynHJfDPZfhsmrsYynPp.SelectedExplosionWeaponType = Absolute.Table.Explosions.ExplosionTypes[Absolute.Framework.iayFliUnrICxeGdWiSWkList["combat_explosivegunexplosionselect"].selected]
    end
    ButtonY =  ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Explosive gun", Absolute.Config.ExplosiveAmmo, x + 220, y, 5, ButtonY, 100, 20, "combat_explosivegun") then
        Absolute.Config.ExplosiveAmmo = not Absolute.Config.ExplosiveAmmo
    end
end)

Absolute.MenuFunc.CreateMenuTab("VehicleMenu", "absolute2", "VehsIcon", function(self, x, y, w, h)
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 175, 120, "Spawner")
    local ButtonY = 5
    if Absolute.MenuFunc.Button("Input model:", x, y, 5, ButtonY, 100, 20, "vehicle_spawner_spawner") then
        Absolute.BasicFunc.SpawnVehicle()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Spawn in", Absolute.Config.VehicleSpawner_SpawnIn, x, y, 5, ButtonY, 100, 20, "vehicle_spawner_spawnin") then
        Absolute.Config.VehicleSpawner_SpawnIn = not Absolute.Config.VehicleSpawner_SpawnIn
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Full performance", Absolute.Config.VehicleSpawner_SpawnMaxPerf, x, y, 5, ButtonY, 100, 20, "vehicle_spawner_spawnfullperf") then
        Absolute.Config.VehicleSpawner_SpawnMaxPerf = not Absolute.Config.VehicleSpawner_SpawnMaxPerf
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Full tunning", Absolute.Config.VehicleSpawner_SpawnMaxTunn, x, y, 5, ButtonY, 100, 20, "vehicle_spawner_spawnfulltunn") then
        Absolute.Config.VehicleSpawner_SpawnMaxTunn = not Absolute.Config.VehicleSpawner_SpawnMaxTunn
    end
    
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,175, 175, 105, "Basics")
    ButtonY = 130
    if Absolute.MenuFunc.Button("Repair", x, y, 5, ButtonY, 100, 20, "vehicle_basics_repairentirely") then
        Absolute.BasicFunc.CompleteRepairVehicle()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Flip vehicle", x, y, 5, ButtonY, 100, 20, "vehicle_basics_flipvehicle") then
        Absolute.BasicFunc.FlipVehicle()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Delete vehicle", x, y, 5, ButtonY, 100, 20, "vehicle_basics_deletevehicle") then
        Absolute.BasicFunc.DeleteVehicle(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0))
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Break engine", x, y, 5, ButtonY, 100, 20, "vehicle_basics_breakengine") then
        Absolute.BasicFunc.BreakEngineVehicle(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), 0))
    end

    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,300, 175, 190, "Auto pilot")
    ButtonY  = 265
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Auto pilot:   ", Absolute.Table.AutoPilot.Styles, x, y, 5, ButtonY, 100, 20, "vehicle_autopilot_selectmode") then
        Absolute.OsaXlHjgakTpuEzfBglV.SelectedAutoPilotDrivingStyle = Absolute.Table.AutoPilot.StylesIds[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_autopilot_selectmode"].selected]
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.CheckBox("Park nice", Absolute.Config.ParkNice, x, y, 5, ButtonY, 100, 20, "vehicle_autopilot_parknicetoggle") then
        Absolute.Config.ParkNice = not Absolute.Config.ParkNice
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.Button("Drive to waypoint", x, y, 5, ButtonY, 100, 20, "vehicle_autopilot_drivetowaypoint") then
        Absolute.BasicFunc.AutoPilotDriveToWaypoint()
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.Button("Auto park", x, y, 5, ButtonY, 100, 20, "vehicle_autopilot_autopark") then
        Absolute.BasicFunc.AutoPilotParkVehicleNear(N.lMwhadiBCtELwegMxPge(N.iBnlozKaiGyzdHkhCfxa(-1), false))
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.Button("Stop inmediatly", x, y, 5, ButtonY, 100, 20, "vehicle_autopilot_stopinmeadiatly") then
        Absolute.BasicFunc.AutoPilotStopInmediatly()
    end
    ButtonY = ButtonY + 30
    if Absolute.MenuFunc.Button("Drive around", x, y, 5, ButtonY, 100, 20, "vehicle_autopilot_drivearound") then
        Absolute.BasicFunc.DriveWander()
    end


    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(195,40, 260, 420, "[~r~!~s~] LSC Colors")
    if not Absolute.Config.VehiclesLSCpainttoggle then
    Absolute.MenuFunc.DrawText("Disabled as default\nto prevent mistakes\ngo to config and enable it", Absolute.Framework.Font, true, x+ 275, y + 50, 0.32, 255, 255, 255, 255)
    else
        if not N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then
            Absolute.MenuFunc.DrawText("You aren't in a vehicle!", Absolute.Framework.Font, true, x+ 275, y + 50, 0.32, 255, 255, 255, 255)
        else
            ButtonY  = 5
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~b~P~s~] Metallic:    ", Absolute.Table.VehiclesColors.MetallicLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_primarymetallic") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryMetallic = Absolute.Table.VehiclesColors.MetallicIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_primarymetallic"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryMetallic, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~b~P~s~] Matte:    ", Absolute.Table.VehiclesColors.MatteLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_primarymatte") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryMatte = Absolute.Table.VehiclesColors.MatteIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_primarymatte"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryMatte, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~b~P~s~] Util:    ", Absolute.Table.VehiclesColors.UtilLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_primaryutil") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryUtil = Absolute.Table.VehiclesColors.UtilIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_primaryutil"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryUtil, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~b~P~s~] Worn:    ", Absolute.Table.VehiclesColors.WornLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_primaryworn") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryWorn = Absolute.Table.VehiclesColors.WornIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_primaryworn"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryWorn, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~b~P~s~] Others:    ", Absolute.Table.VehiclesColors.OthersLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_primaryothers") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryOthers = Absolute.Table.VehiclesColors.OthersIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_primaryothers"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehiclePrimaryOthers, Secondary)
            end

            --[[sencondary]]
            ButtonY = ButtonY + 40
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~p~S~s~] Metallic:    ", Absolute.Table.VehiclesColors.MetallicLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_Secondarymetallic") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryMetallic = Absolute.Table.VehiclesColors.MetallicIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_Secondarymetallic"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Primary, Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryMetallic)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~p~S~s~] Matte:    ", Absolute.Table.VehiclesColors.MatteLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_Secondarymatte") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryMatte = Absolute.Table.VehiclesColors.MatteIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_Secondarymatte"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Primary, Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryMatte)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~p~S~s~] Util:    ", Absolute.Table.VehiclesColors.UtilLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_Secondaryutil") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryUtil = Absolute.Table.VehiclesColors.UtilIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_Secondaryutil"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Primary, Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryUtil)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~p~S~s~] Worn:    ", Absolute.Table.VehiclesColors.WornLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_Secondaryworn") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryWorn = Absolute.Table.VehiclesColors.WornIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_Secondaryworn"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Primary, Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryWorn)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~p~S~s~] Others:    ", Absolute.Table.VehiclesColors.OthersLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_Secondaryothers") then
                local Primary, Secondary = N.qXnckfdrVJwkxiFcwupD(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryOthers = Absolute.Table.VehiclesColors.OthersIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_Secondaryothers"].selected]
                N.hVwvuQnNvljgDsxlKyoO(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Primary, Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleSecondaryOthers)
            end
            --[[plearecent]]

            ButtonY = ButtonY + 40
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~o~Pl~s~] Metallic:    ", Absolute.Table.VehiclesColors.MetallicLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_espperladometallic") then
                local Primary, Secondary = N.FyEuiUfqoIdagygYDwYU(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoMetallic = Absolute.Table.VehiclesColors.MetallicIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_espperladometallic"].selected]
                N.RTqwHwNJvqzVkAmFmNAo(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoMetallic, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~o~Pl~s~] Matte:    ", Absolute.Table.VehiclesColors.MatteLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_espperladomatte") then
                local Primary, Secondary = N.FyEuiUfqoIdagygYDwYU(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoMatte = Absolute.Table.VehiclesColors.MatteIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_espperladomatte"].selected]
                N.RTqwHwNJvqzVkAmFmNAo(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoMatte, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~o~Pl~s~] Util:    ", Absolute.Table.VehiclesColors.UtilLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_espperladoutil") then
                local Primary, Secondary = N.FyEuiUfqoIdagygYDwYU(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoUtil = Absolute.Table.VehiclesColors.UtilIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_espperladoutil"].selected]
                N.RTqwHwNJvqzVkAmFmNAo(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoUtil, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~o~Pl~s~] Worn:    ", Absolute.Table.VehiclesColors.WornLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_espperladoworn") then
                local Primary, Secondary = N.FyEuiUfqoIdagygYDwYU(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoWorn = Absolute.Table.VehiclesColors.WornIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_espperladoworn"].selected]
                N.RTqwHwNJvqzVkAmFmNAo(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoWorn, Secondary)
            end
            ButtonY  = ButtonY + 25
            if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("[~o~Pl~s~] Others:    ", Absolute.Table.VehiclesColors.OthersLBLS, x+190, y, 5, ButtonY, 100, 20, "vehicle_lscpaint_espperladoothers") then
                local Primary, Secondary = N.FyEuiUfqoIdagygYDwYU(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
                Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoOthers = Absolute.Table.VehiclesColors.OthersIDS[Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lscpaint_espperladoothers"].selected]
                N.RTqwHwNJvqzVkAmFmNAo(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), Absolute.OsaXlHjgakTpuEzfBglV.SelectedVehicleespperladoOthers, Secondary)
            end
        end
    end

    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(195,480, 260, 190, "[~r~!~s~] LSC Performance")
    if not N.wsacfqnmIKeepDhymTpp(N.TgtheyimGgiefBQFVoxu(), false) then
        Absolute.MenuFunc.DrawText("You aren't in a vehicle!", Absolute.Framework.Font, true, x+ 275, y + 480, 0.32, 255, 255, 255, 255)
    else
        ButtonY = 440
        if Absolute.MenuFunc.Button("full performance", x + 190, y, 5, ButtonY, 100, 20, "vehicles_lsc_fullperformance") then
            Absolute.BasicFunc.FullperfTunning(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
        end
        if Absolute.MenuFunc.Button("full tunning", x + 350, y, 5, ButtonY, 100, 20, "vehicles_lsc_fulltunning") then
            Absolute.BasicFunc.FullEntireTunning(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false))
        end

        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.CheckBox("Turbo", Absolute.Config.VehiclesLSCToggleTurbo, x +190, y, 5, ButtonY, 100, 20, "vehicles_lsc_toggleturbo") then
            Absolute.Config.VehiclesLSCToggleTurbo = not Absolute.Config.VehiclesLSCToggleTurbo
            N.ZkWpgmyNoudVpUtAnGcd(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 18, Absolute.Config.VehiclesLSCToggleTurbo)
        end



        --[[LSC]]
        N.jsiCpGCZZgpvhKZthKru(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 0)
        if Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh == nil then
            Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false)
            Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Armor  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 16);
            Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Engine  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 11);
            Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Brakes  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 12);
            Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Transmission  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 13);
            Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Suspenssion  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 15);
        else
            if  (N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false) ~= Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh)then
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh = N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false)
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Armor  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 16);
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Engine  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 11);
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Brakes  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 12);
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Transmission  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 13);
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Suspenssion  =  N.eWbYvpltcwqpxnNDhueb(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 15);
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Armor = 0;
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Engine = 0;
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Brakes = 0;
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Transmission = 0;
                Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Suspenssion = 0;
            end



                --[[Armor]]
                ButtonY = ButtonY + 25
                if Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Armor > 0 then
                    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Armor:    ", Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Labels[Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Armor], x+190, y, 5, ButtonY, 100, 20, "vehicles_lsc_performance_Armor") then
                        if  (N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false) ~= Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh)then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Armor"].selected = Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Armor
                        end
                        Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Armor = Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Armor"].selected - 2
                        if Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Armor"].selected < 0 then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Armor"].selected = 0 
                        end
                        N.txgefjwobjmThcigAxxv(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 16, Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Armor, false)
                    end
                end

                --[[Engine]]
                ButtonY = ButtonY + 25
                if Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Engine > 0 then
                    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Engine:    ", Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Labels[Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Engine], x+190, y, 5, ButtonY, 100, 20, "vehicles_lsc_performance_Engine") then
                        if  (N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false) ~= Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh)then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Engine"].selected = Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Engine
                        end
                        Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Engine = Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Engine"].selected - 2
                        if Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Engine"].selected < 0 then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Engine"].selected = 0 
                        end
                        N.txgefjwobjmThcigAxxv(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 11, Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Engine, false)
                    end
                end


                --[[Brakes]]
                ButtonY = ButtonY + 25
                if Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Brakes > 0 then
                    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Brakes:    ", Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Labels[Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Brakes], x+190, y, 5, ButtonY, 100, 20, "vehicles_lsc_performance_Brakes") then
                        if  (N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false) ~= Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh)then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Brakes"].selected = Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Brakes
                        end
                        Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Brakes = Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Brakes"].selected - 2
                        if Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Brakes"].selected < 0 then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Brakes"].selected = 0 
                        end
                        N.txgefjwobjmThcigAxxv(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 11, Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Brakes, false)
                    end
                end

                --[[Transmission]]
                ButtonY = ButtonY + 25
                if Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Transmission > 0 then
                    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Transmission:    ", Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Labels[Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Transmission], x+190, y, 5, ButtonY, 100, 20, "vehicles_lsc_performance_Transmission") then
                        if  (N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false) ~= Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh)then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Transmission"].selected = Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Transmission
                        end
                        Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Transmission = Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Transmission"].selected - 2
                        if Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Transmission"].selected < 0 then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Transmission"].selected = 0 
                        end
                        N.txgefjwobjmThcigAxxv(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 11, Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Transmission, false)
                    end
                end


                --[[SuspÃ¨sion]]
                ButtonY = ButtonY + 25
                if Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Suspenssion > 0 then
                    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Suspension:    ", Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Labels[Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.NMods.Suspenssion], x+190, y, 5, ButtonY, 100, 20, "vehicles_lsc_performance_Suspenssion") then
                        if  (N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false) ~= Absolute.Table.wMgrSwzfbqlmnnVmRcrf.Storedveh)then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Suspenssion"].selected = Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Migratives.Suspenssion
                        end
                        Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Suspenssion = Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Suspenssion"].selected - 2
                        if Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Suspenssion"].selected < 0 then
                            Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicles_lsc_performance_Suspenssion"].selected = 0 
                        end
                        N.txgefjwobjmThcigAxxv(N.lMwhadiBCtELwegMxPge(N.TgtheyimGgiefBQFVoxu(), false), 15, Absolute.Table.wMgrSwzfbqlmnnVmRcrf.atUdcZYtGTcHImurtzNh.Selected.Suspenssion, false)
                    end
                end
        end
       -- Absolute.Framework.iayFliUnrICxeGdWiSWkList["vehicle_lsc_suspensionmodifications"].selected = 0
    end
     
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,510, 175, 160, "Handlings")
    ButtonY = 490
    if Absolute.MenuFunc.CheckBox("Little boost", Absolute.Config.LittleBoostedHandling, x, y, 5, ButtonY, 100, 20, "vehicles_handling_littleboosted") then
        Absolute.Config.LittleBoostedHandling = not Absolute.Config.LittleBoostedHandling
        Absolute.BasicFunc.Handlings()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Boosted", Absolute.Config.SuperHandling, x, y, 5, ButtonY, 100, 20, "vehicles_handling_boosted") then
        Absolute.Config.SuperHandling = not Absolute.Config.SuperHandling
        Absolute.BasicFunc.Handlings()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Ultra boosted", Absolute.Config.SuperBoostedHandling, x, y, 5, ButtonY, 100, 20, "vehicles_handling_ultraboosted") then
        Absolute.Config.SuperBoostedHandling = not Absolute.Config.SuperBoostedHandling
        Absolute.BasicFunc.Handlings()
    end

    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(475,40, 210, 620, "Others")
    
    ButtonY = 5
    if Absolute.MenuFunc.CheckBox("Vehicle invinciblity", Absolute.Config.VehicleGodmode, x + 490, y, 5, ButtonY, 100, 20, "vehicles_others_vehiclegodmode") then
        Absolute.Config.VehicleGodmode = not Absolute.Config.VehicleGodmode
        Absolute.Component.VehicleGodmode()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Drift mode", Absolute.Config.DriftMod, x + 490, y, 5, ButtonY, 100, 20, "vehicles_others_driftmode") then
        Absolute.Config.DriftMod = not Absolute.Config.DriftMod
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Horn boost", Absolute.Config.Hornboost, x + 490, y, 5, ButtonY, 100, 20, "vehicles_others_hornboost") then
        Absolute.Config.Hornboost = not Absolute.Config.Hornboost
        if Absolute.Config.Hornboost then notify("Press ~g~E~s~ to boost", "info") end
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Bunny jump", Absolute.Config.VehicleBunnyJump, x + 490, y, 5, ButtonY, 100, 20, "vehicles_others_bunnyjump") then
        Absolute.Config.VehicleBunnyJump = not Absolute.Config.VehicleBunnyJump
        if Absolute.Config.VehicleBunnyJump then notify("Press ~g~space~s~ to jump", "info") end
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Rainbow paint", Absolute.Config.RainbowCar, x + 490, y, 5, ButtonY, 100, 20, "vehicles_others_rainbowpaint") then
        Absolute.Config.RainbowCar = not Absolute.Config.RainbowCar
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Rainbow lights", Absolute.Config.RainbowCarLights, x + 490, y, 5, ButtonY, 100, 20, "vehicles_others_rainbowlights") then
        Absolute.Config.RainbowCarLights = not Absolute.Config.RainbowCarLights
    end
    if Absolute.TR["vehicleshop_ownedveh"] ~= nil then
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("~g~ESX ~s~Steal vehicle", x + 490, y, 5, ButtonY, 100, 20, "vehicle_recovery_stealveh") then
       Absolute.BasicFunc.StealVehicle()
    end
    end
end)

Absolute.MenuFunc.CreateMenuTab("NukeWorld", "absolute2", "NukeIcon", function(self, x, y, w, h)
    local ButtonY = 5
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 175, 300, "Props and peds fuckers")
    if Absolute.MenuFunc.Button("[~r~!~s~] [~r~HARD~s~] [~o~TESTING~s~] Fuck CPU", x, y, 5, ButtonY, 100, 20, "crasher_fucklq") then
        Absolute.BasicFunc.bypzBBPBjralcBBwbeuE()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Prop fuck LGS", x, y, 5, ButtonY, 100, 20, "crasher_propfucklgs") then
        Absolute.BasicFunc.CompletelyMapFuck("LGS")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Prop fuck LSPD", x, y, 5, ButtonY, 100, 20, "crasher_propfucklspd") then
        Absolute.BasicFunc.CompletelyMapFuck("PSMW")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Prop fuck cardealer", x, y, 5, ButtonY, 100, 20, "crasher_propfuckcardealer") then
        Absolute.BasicFunc.CompletelyMapFuck("CARDEALER")
    end

    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Old blocker LGS", x, y, 5, ButtonY, 100, 20, "crasher_oldblocker_lgs") then
        Absolute.BasicFunc.Crasher_OldBLocker("LGS")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Old blocker LSPD", x, y, 5, ButtonY, 100, 20, "crasher_oldblocker_lspd") then
        Absolute.BasicFunc.Crasher_OldBLocker("LSPD")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Old blocker simeons", x, y, 5, ButtonY, 100, 20, "crasher_oldblocker_cardealer") then
        Absolute.BasicFunc.Crasher_OldBLocker("SIMEONS")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Whaler lgs", x, y, 5, ButtonY, 100, 20, "crasher_whaler_legionsquare") then
        Absolute.BasicFunc.LJpNuxsBKkUagoqfAeaX("LGS")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Whaler LSPD", x, y, 5, ButtonY, 100, 20, "crasher_whaler_lspd") then
        Absolute.BasicFunc.LJpNuxsBKkUagoqfAeaX("LSPD")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Veh Lagger lgs", x, y, 5, ButtonY, 100, 20, "crasher_vehicle_lagger_lgs") then
        Absolute.BasicFunc.cpjtHKeoTFdpfjRodfIC("LGS")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Veh lagger lspd", x, y, 5, ButtonY, 100, 20, "crasher_vehicle_lagger_lspd") then
        Absolute.BasicFunc.cpjtHKeoTFdpfjRodfIC("LSPD")
    end


    

    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(190,40, 175, 130, "Explosions")
    ButtonY = 5
    if Absolute.MenuFunc.Button("Explode vehicles", x + 180, y, 5, ButtonY, 100, 20, "crasher_explosions_vehicles") then
        Absolute.BasicFunc.Creasher_ExplodeEntities("VEHS")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Explode peds", x + 180, y, 5, ButtonY, 100, 20, "crasher_explosions_peds") then
        Absolute.BasicFunc.Creasher_ExplodeEntities("PEDS")
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Include players", Absolute.Config.CrasherPedExplosionsIncludePlayers, x + 180, y, 5, ButtonY, 100, 20, "crashers_explosions_peds_includeplayers") then
        Absolute.Config.CrasherPedExplosionsIncludePlayers = not Absolute.Config.CrasherPedExplosionsIncludePlayers
    end


    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(375,40, 310, 590, "Recovery")
    ButtonY = 5
    if Absolute.TR["esx"] then
        if Absolute.MenuFunc.Button("ESX: " .. Absolute.TR["esx"] , x + 400, y, 5, ButtonY, 100, 20, "recovery_displayesx") then
        end
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Reload triggers" , x + 400, y, 5, ButtonY, 100, 20, "recovery_reloadtriggers") then
        Absolute.BasicFunc.UpdateAllTriggers()
    end
    if Absolute.TR["truckerjob_pay"] then
        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.Button("~g~ESX~s~ Trucker job" , x + 400, y, 5, ButtonY, 100, 20, "recovery_truckerjob") then
            local tempnumber =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter money amount: ", '', 20);
            tempnumber = tonumber(tempnumber);
            if tempnumber == nil or tempnumber <=0 then
                notify("Invalid amount!", "error", 4000)
                return
            end
            TriggerCustomEvent(true, Absolute.TR["truckerjob_pay"], tempnumber)
        end
    end

    if Absolute.TR["esx_status_refillstatus"] then
        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.Button("~g~ESX~s~ Refill health & thirst" , x + 400, y, 5, ButtonY, 100, 20, "recover_esxstatusrefillstatus") then
            TriggerCustomEvent(false, Absolute.TR["esx_status_refillstatus"], "hunger", 1000000)
            TriggerCustomEvent(false, Absolute.TR["esx_status_refillstatus"], "thirst", 1000000)
        end
    end



    if Absolute.TR["dmv_pay"] then
        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.Button("~g~ESX~s~ Reduce money" , x + 400, y, 5, ButtonY, 100, 20, "recovery_dmvpay") then
            local tempnumber =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter money amount: ", '', 20);
            tempnumber = tonumber(tempnumber);
            if tempnumber == nil or tempnumber <=0 then
                notify("Invalid amount!", "error", 4000)
                return
            end
            TriggerCustomEvent(true, Absolute.TR["dmv_pay"], tempnumber)
        end
    end


    if Absolute.TR["dmv_getlicense"] then
        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.Button("~g~ESX~s~ Get vehicles licenses" , x + 400, y, 5, ButtonY, 100, 20, "recovery_getlicenses") then
            Absolute.CIT.Cthread(function()
                notify("it will take 1s to prevent network overflow", "info")
                for k, v in pairs(Absolute.Table.KnownLicenses) do
                    Absolute.CIT.Wait(100)
                    TriggerCustomEvent(true, Absolute.TR["dmv_getlicense"], v)
                end
            end)
        end
    end


    if Absolute.TR["esx_billing:sendbill"] then
        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.Button("~g~ESX~s~ Send bill " , x + 400, y, 5, ButtonY, 100, 20, "recovery_sendbill") then
            Absolute.BasicFunc.Recovery_billsexploit()
        end
    end

    if Absolute.TR["carrypeople_stop"] and Absolute.TR["carrypeople_carry"] then
        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.Button("Carry all" , x + 400, y, 5, ButtonY, 100, 20, "recovery_carrypeople") then
            local lib = 'missfinale_c2mcs_1';
            local anim1 = 'fin_c2_mcs_1_camman';
            local lib2 = 'nm';
            local anim2 = 'firemans_carry';
            local distans = 0.15;
            local distans2 = 0.27;
            local height = 0.63;
            local spin = 0.0;		
            local length = 100000;
            local controlFlagMe = 49;
            local controlFlagTarget = 33;
            local animFlagTarget = 1;
            Absolute.CIT.Cthread(function()
                for k, v in pairs(N.HnOnJAIIrsyUabMzPNJe()) do
                    TriggerCustomEvent(true, Absolute.TR["carrypeople_carry"], N.nvqmYvuwpaLcKTLBgtpZ(v), lib,lib2, anim1, anim2, distans, distans2, height,target,length,spin,controlFlagMe,controlFlagTarget,animFlagTarget)
                    Absolute.CIT.Wait(10)
                    TriggerCustomEvent(true, Absolute.TR["carrypeople_stop"], N.nvqmYvuwpaLcKTLBgtpZ(v))
                    Absolute.CIT.Wait(40)
                end
            end)   
        end
    end
    
    --[[
    if Absolute.TR[""] then
        ButtonY = ButtonY + 25
        if Absolute.MenuFunc.Button("~g~ESX~s~ Refill health & thirst" , x + 400, y, 5, ButtonY, 100, 20, "recover_esxstatusrefillstatus") then
        end
    end]]
end)

Absolute.MenuFunc.CreateMenuTab("VisualsMenu", "absolute3", "VisualsIcon", function(self, x, y, w, h)
    local ButtonY = 5
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 175, 150, "General")
     if Absolute.MenuFunc.Button("Change ESP distance: " .. Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance, x, y, 5, ButtonY, 100, 20, "visuals_changeespdistance") then
        local tempnumber =  Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput("Enter the new distance", '', 20);
        tempnumber = tonumber(tempnumber);
        tempnumber = tempnumber + 0.0
        if tempnumber > 250.0 then 
            local safecheck = Absolute.KufbbvNinsCiFwtqcaLw.keyboardInput(tempnumber .. " is upper than 250.0, do you want to set it anyways? (y/n)", '', 20);
            if safecheck == 'y' then
                Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance = tempnumber;
            end
        else
            Absolute.LynHJfDPZfhsmrsYynPp.SelectedESPDistance = tempnumber;
        end
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("2D Dimensions", Absolute.Config.qmwqgLtZspWYsdfGbsGT, x, y, 5, ButtonY, 100, 20, "visuals_2desp") then
        Absolute.Config.qmwqgLtZspWYsdfGbsGT = not Absolute.Config.qmwqgLtZspWYsdfGbsGT
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Skeleton 3D ESP", Absolute.Config.PyyMygepxbysUtNoXwou, x, y, 5, ButtonY, 100, 20, "visuals_skeleton3desp") then
        Absolute.Config.PyyMygepxbysUtNoXwou = not Absolute.Config.PyyMygepxbysUtNoXwou
        if not Absolute.Config.PyyMygepxbysUtNoXwou then Absolute.Component.dVGdcMgvMUQdOddklySi()end
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("DrawLinesToPeds", Absolute.Config.Visuals_DrawLinesToPeds, x, y, 5, ButtonY, 100, 20, "visuals_drawlinestopeds") then
        Absolute.Config.Visuals_DrawLinesToPeds = not Absolute.Config.Visuals_DrawLinesToPeds
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Force 3rd person", x, y, 5, ButtonY, 100, 20, "visuals_force3rdperson") then
        SetFollowPedCamViewMode(1)
    end
   

    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(190,40, 175, 150, "3D Text")
    ButtonY = 5
    if Absolute.MenuFunc.CheckBox("Master switch", Absolute.Config.Visuals_3dDrawTexts, x + 190, y, 5, ButtonY, 100, 20, "visuals_textesp") then
        Absolute.Config.Visuals_3dDrawTexts = not Absolute.Config.Visuals_3dDrawTexts
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Weapon", Absolute.Config.Vsiuals_3dDrawTexts_ShowWeapon, x + 190, y, 5, ButtonY, 100, 20, "visuals_textesp_drawweapon") then
        Absolute.Config.Vsiuals_3dDrawTexts_ShowWeapon = not Absolute.Config.Vsiuals_3dDrawTexts_ShowWeapon
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Vehicle", Absolute.Config.Visuals_3dDrawTexts_ShowVehicle, x + 190, y, 5, ButtonY, 100, 20, "visuals_textesp_vehicle") then
        Absolute.Config.Visuals_3dDrawTexts_ShowVehicle = not Absolute.Config.Visuals_3dDrawTexts_ShowVehicle
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Position", Absolute.Config.Visuals_3dDrawTexts_ShowSpos, x + 190, y, 5, ButtonY, 100, 20, "visuals_textesp_drawcoords") then
        Absolute.Config.Visuals_3dDrawTexts_ShowSpos = not Absolute.Config.Visuals_3dDrawTexts_ShowSpos
    end
    
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,210, 355, 120, "Others")
    ButtonY = 175
    
    if Absolute.MenuFunc.CheckBox("Show blips", Absolute.Config.Visuals_ShowBlips, x, y, 5, ButtonY, 100, 20, "visuals_drawblips") then
        Absolute.Config.Visuals_ShowBlips = not Absolute.Config.Visuals_ShowBlips
        Absolute.Component.Visuals_ShowBlips()
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Draw players dimensions", Absolute.Config.Visuals_DrawBoxesDimensionsToEntity_players, x, y, 5, ButtonY, 100, 20, "visuals_drawboxdimension_players") then
        Absolute.Config.Visuals_DrawBoxesDimensionsToEntity_players = not Absolute.Config.Visuals_DrawBoxesDimensionsToEntity_players
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Show map", Absolute.Config.ShowMap, x, y, 5, ButtonY, 100, 20, "visuals_showmap") then
        Absolute.Config.ShowMap = not Absolute.Config.ShowMap
    end
end)

Absolute.MenuFunc.CreateMenuTab("TeleportMenu", "absolute3", "TeleportIcon", function(self, x, y, w, h)
    local ButtonY = 5

    
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 175, 140, "General")
    if Absolute.MenuFunc.Button("Tp waypoint", x, y, 5, ButtonY, 100, 20, "teleport_to_waypoint") then
        Absolute.BasicFunc.TeleportToWayPoint()
    end

    ButtonY = 170
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,200, 175, 300, "Clothe stores")
    for k, v in pairs(Absolute.Table.TeleportPoints.Clothing) do
        if Absolute.MenuFunc.Button(v.name, x, y, 5, ButtonY, 100, 20, "teleport_clothing_"..v.name) then
            Absolute.BasicFunc.TeleportToCoords(v.x,v.y,v.z)
        end
        ButtonY = ButtonY + 25
    end

    ButtonY = 5
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(200,40, 175, 185, "Barbershops")
    for k, v in pairs(Absolute.Table.TeleportPoints.BarberShops) do
        if Absolute.MenuFunc.Button(v.name, x + 195, y, 5, ButtonY, 100, 20, "teleport_barbershops_"..v.name) then
            Absolute.BasicFunc.TeleportToCoords(v.x,v.y,v.z)
        end
        ButtonY = ButtonY + 25
    end

    ButtonY = 205
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(200,245, 175, 190, " Garages")
    for k, v in pairs(Absolute.Table.TeleportPoints.Garages) do
        if Absolute.MenuFunc.Button(v.name, x + 195, y, 5, ButtonY, 100, 20, "teleport_garages_"..v.name) then
            Absolute.BasicFunc.TeleportToCoords(v.x,v.y,v.z)
        end
        ButtonY = ButtonY + 25
    end

    ButtonY = 420
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(200,450, 175, 230, " Ammu's")
    for k, v in pairs(Absolute.Table.TeleportPoints.Ammunation) do
        if Absolute.MenuFunc.Button(v.name, x + 195, y, 5, ButtonY, 100, 20, "teleport_ammus_"..v.name) then
            Absolute.BasicFunc.TeleportToCoords(v.x,v.y,v.z)
        end
        ButtonY = ButtonY + 25
    end
end)

Absolute.MenuFunc.CreateMenuTab("CraftLab", "absolute4", "CraftlabIcon", function(self, x, y, w, h)
    local ButtonY = 5
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 175, 60, "Genral")
    if Absolute.MenuFunc.CheckBox("Freecam", Absolute.Config.Freecam_Main, x + 5, y, 5, ButtonY, 100, 20, "craftlab_enablefreecam") then
        Absolute.Config.Freecam_Main = not Absolute.Config.Freecam_Main
        Absolute.Component.Freecam_Main()
    end
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,100, 175, 320, "Maps")
    ButtonY = ButtonY + 50
    if Absolute.MenuFunc.Button("Mazebank demoltion", x, y, 5, ButtonY, 100, 20, "craftlab_maps_mazebankdemolotion") then
       Absolute.CIT.Cthread(function()
        for k, v in pairs(Absolute.Table.MapSpawner.MazeBankDemolitionring) do
        Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
        Absolute.CIT.Wait(100)
        end
       end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Mazebank ramp 1", x, y, 5, ButtonY, 100, 20, "craftlab_maps_mazebankramp1") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.MazebankRamp1) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Mazebank ramp 2", x, y, 5, ButtonY, 100, 20, "craftlab_maps_mazebankquadramp2") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.MazeBank4Ramp) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Mazebank ramp 3", x, y, 5, ButtonY, 100, 20, "craftlab_maps_mazebankramp3") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.MazebanRamp3) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Ferris spin", x, y, 5, ButtonY, 100, 20, "craftlab_maps_ferrisspin") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.FerrisSpin) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Mount chilliad containers", x, y, 5, ButtonY, 100, 20, "craftlab_maps_mountchilliad") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.MountChilliadContainerRamp) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Airport jump (INSIDE)", x, y, 5, ButtonY, 100, 20, "craftlab_maps_airportjump") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.AirportJump) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Airport jump (OUTSIDE)", x, y, 5, ButtonY, 100, 20, "craftlab_maps_airportgatejump") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.AirportGateJump) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("U.F.O Tower", x, y, 5, ButtonY, 100, 20, "craftlab_maps_ufotower") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.UfoTower) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
   
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Zancudo track", x, y, 5, ButtonY, 100, 20, "craftlab_maps_zancudotrack") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.FortZancudo) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Funny track", x, y, 5, ButtonY, 100, 20, "craftlab_maps_funnytrack") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.FunnyTrack) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Airport track", x, y, 5, ButtonY, 100, 20, "craftlab_maps_funnytrack") then
        Absolute.CIT.Cthread(function()
         for k, v in pairs(Absolute.Table.MapSpawner.AirportTrack) do
         Absolute.BasicFunc.SpawnObjectForCraft(v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9])
         Absolute.CIT.Wait(100)
         end
        end)
    end
end)

Absolue.MenuFunc.CreateMenuTab("TriggerFinder", "absolute", "ConfigIcon", function(self, x, y, w, h) 
    local ButtonY = 5
    if Absolute.MenuFunc.Button("Test", x, y, 5, ButtonY, 100, 20, "test") then
        
    end
end)

Absolute.MenuFunc.CreateMenuTab("MenuConfig", "absolute2", "ConfigIcon", function(self, x, y, w, h)
    Absolute.MenuFunc.DbdXpjZhMEzCVnvycDbV(10,40, 175, 265, "V" .. Absolute.Framework.MenuVersion)
    local ButtonY = 5
    if Absolute.MenuFunc.Button("Kill menu", x, y, 5, ButtonY, 100, 20, "kill_menu") then
        Absolute.Framework.MenuAbled = false
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Rainbow menu", Absolute.Config.RainbowHud, x, y, 5, ButtonY, 100, 20, "rainbow_hud") then
        Absolute.Config.RainbowHud = not Absolute.Config.RainbowHud
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Wardobe maker", Absolute.Config.WardobeMakerEnable, x, y, 5, ButtonY, 100, 20, "wardobemaker_enable") then
        Absolute.Config.WardobeMakerEnable = not Absolute.Config.WardobeMakerEnable
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Weapon spawner", Absolute.Config.WeaponSpawnerEnable, x, y, 5, ButtonY, 100, 20, "weapon_spawner_enable") then
        Absolute.Config.WeaponSpawnerEnable = not Absolute.Config.WeaponSpawnerEnable
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("LSC Colors", Absolute.Config.VehiclesLSCpainttoggle, x, y, 5, ButtonY, 100, 20, "vehicles_lsc_painttoggle") then
        Absolute.Config.VehiclesLSCpainttoggle = not Absolute.Config.VehiclesLSCpainttoggle
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Theme colors:   ", Absolute.Table.LouXAvCNrAcKAqKTfdBh, x, y, 5, ButtonY, 100, 20, "config_themecolors") then
        Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors = Absolute.Table.LouXAvCNrAcKAqKTfdBhData[Absolute.Framework.iayFliUnrICxeGdWiSWkList["config_themecolors"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.Button("Apply theme", x, y, 5, ButtonY, 100, 20, "config_applytheme") then
        Absolute.BasicFunc.ApplyThemeColor(Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors.r, Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors.g, Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors.b, Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors.sr,Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors.sg, Absolute.LynHJfDPZfhsmrsYynPp.ThemeColorChangerColors.sb)
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Menu key:   ", Absolute.Table.KeybindsLabels, x, y, 5, ButtonY, 100, 20, "config_changeopenkey") then
        Absolute.Framework.hoqfwzOXdGZeVrLybkrb = Absolute.Table.Keybinds[Absolute.Framework.iayFliUnrICxeGdWiSWkList["config_changeopenkey"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Watermark", Absolute.Config.DrawWaterMark, x, y, 5, ButtonY, 100, 20, "config_watermarktoggle") then
        Absolute.Config.DrawWaterMark = not Absolute.Config.DrawWaterMark
        Absolute.Component.DrawWaterMark()
        
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.iayFliUnrICxeGdWiSWk("Freecam menu key:", Absolute.Table.Freecam_menukeybinds.Labels, x, y, 5, ButtonY, 100, 20, "config_freecammenukey") then
        Absolute.Framework.FreecamMenuKeybind = Absolute.Table.Freecam_menukeybinds.Ids[Absolute.Framework.iayFliUnrICxeGdWiSWkList["config_freecammenukey"].selected]
    end
    ButtonY = ButtonY + 25
    if Absolute.MenuFunc.CheckBox("Notification sound", Absolute.Config.NotificationSound, x, y, 5, ButtonY, 100, 20, "config_togglenotificationsound") then
        Absolute.Config.NotificationSound = not Absolute.Config.NotificationSound
    end
    

    ButtonY = 590
    if Absolute.MenuFunc.Button("~r~Crash yourself", x + 550, y, 5, ButtonY, 100, 20, "config_crashyourself") then
        while  true do end while true do end while true do end while true do end while true do end while true do end
    end
  
end)
--bäärs#3150